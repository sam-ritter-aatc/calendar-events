{"version":3,"sources":["utils/WildApricotUtils.js","utils/WildApricotEvents.js","components/EventCommon.js","utils/WildApricotContacts.js","components/event-calendar/EventCalendar.js","components/SwitchableTextInput.js","components/event-data-loader/EventDataLoader.js","components/SwitchableHtmlDisplay.js","components/SwitchableButton.js","components/event-display/EventDisplay.js","components/event-edit/EventEditor.js","App.js","serviceWorker.js","index.js","utils/WildApricotOAuthUtils.js","utils/WildApricotConversions.js"],"names":["makeBaseUrl","token","process","Permissions","AccountId","makeAuthHeader","token_type","access_token","axios","require","getEventById","eventId","cb","a","console","log","url","method","headers","then","result","data","catch","err","getEvents","startDate","get","params","$filter","Events","searchForSessionAndAdjustFields","sessionData","sessionId","e","Object","assign","sess","Sessions","filter","x","Id","Number","Name","Title","StartDate","EndDate","buildRedirect","path","member","eventInfo","to","pathname","state","push","getContact","contactId","id","firstName","FirstName","lastName","LastName","email","Email","displayName","DisplayName","isAdmin","FieldValues","fields","adminField","SystemCode","length","Value","EventCalendar","calendarComponentRef","React","createRef","events","calendarWeekends","waToken","showEvent","editEvent","createEvent","setState","handleEventClick","arg","handleDateClick","queryStringValues","queryString","parse","this","props","location","search","firstDate","Date","setFullYear","getFullYear","setMonth","getMonth","getAuthTokens","mid","contact","toISOString","myEvents","eventConvert","map","event","title","replace","start","end","Url","Tags","backgroundColor","getEventColor","parentId","name","test","className","defaultView","firstDay","fixedWeekCount","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","bootstrapPlugin","themeSystem","displayEventTime","selectable","ref","weekends","dateClick","eventClick","onClick","Component","SwitchableTextInput","data-testid","label","inputFlag","type","value","onChange","target","EventDataLoader","color","height","width","displayFlag","renderHTML","SwitchableButton","isVisible","Button","disabled","isDisabled","EventDisplay","fetch","organizer","extendedProps","Details","Organizer","canEdit","handleEditClick","Location","DescriptionHtml","EventEditor","handleStartChange","dt","date","isEditing","editor","ClassicEditor","onInit","getData","onBlur","onFocus","App","basename","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","qs","basicAuthHeader","Buffer","toString","body","grant_type","scope","obtain_refresh_token","postConfig","post","stringify","convertSingleEvent","waEvent","eList","forEach","item","StartTimeSpecified","EndTimeSpecified","isRecurringSession","isOrganizedEvent","module","exports","Array","isArray"],"mappings":"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","file":"static/js/main.46ea5081.chunk.js","sourcesContent":["\nexport const makeBaseUrl = (token) => {\n    return process.env.REACT_APP_WA_BASE_URL + '/accounts/' + token.Permissions[0].AccountId;\n}\n\nexport const makeAuthHeader = (token) => {\n    return token.token_type + ' ' +token.access_token;\n}","import {makeAuthHeader, makeBaseUrl} from \"./WildApricotUtils\";\nconst axios = require('axios');\n\nconst eventsUrlPart = '/events';\n\nexport const getEventById = async (token, eventId, cb) => {\n    console.log(\"getEventById\", eventId);\n    await axios({\n        url: makeBaseUrl(token)+eventsUrlPart+'/'+eventId,\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        }\n    })\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n             // return result.data;\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            cb({});\n        })\n}\n\nexport const getEvents = async (token, startDate, cb) => {\n    await axios.get(makeBaseUrl(token)+eventsUrlPart, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        },\n        params: {\n            $filter: \"StartDate ge \"+startDate\n        }\n    })\n        .then((result) => {\n            cb(result.data.Events);\n        })\n        .catch((err) => {\n            console.log(\"Error\", err);\n            cb([]);\n        });\n};\n\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const searchForSessionAndAdjustFields = (sessionData, sessionId) => {\n    let e = Object.assign({}, sessionData);\n\n    let sess = sessionData.Sessions.filter(x => x.Id === Number(sessionId));\n    console.log(\"foundSession\", sess);\n    if (sess) {\n        e.sessionId = sess[0].Id;\n        e.Name = sess[0].Title;\n        e.StartDate = sess[0].StartDate;\n        e.EndDate = sess[0].EndDate;\n    }\n    console.log(\"theEvent\", e);\n    return e;\n}\n\nexport const buildRedirect = (path, member, eventInfo) => {\n    return <Redirect to={{\n        pathname: path,\n        state: {\n            member: member,\n            eventInfo: eventInfo\n        }\n    }} push/>\n}\n","import {makeBaseUrl, makeAuthHeader} from \"./WildApricotUtils\";\n\nconst axios = require('axios');\n\nexport const getContact = async (token, contactId, cb) => {\n    await axios.get(makeBaseUrl(token) + '/contacts/' + contactId, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        }\n    })\n        .then((result) => {\n            let e = {};\n\n            e.id = result.data.Id;\n            e.firstName = result.data.FirstName;\n            e.lastName = result.data.LastName;\n            e.email = result.data.Email;\n            e.displayName = result.data.DisplayName;\n            e.isAdmin = isAdmin(result.data.FieldValues);\n\n            cb(e);\n        })\n        .catch((err) => {\n            cb(null);\n        })\n}\n\nconst isAdmin = (fields) => {\n    let adminField = fields.filter(x => x.SystemCode === 'AdminRole');\n    return adminField.length>0 && adminField[0].Value.length > 0;\n}","import React, {Component} from 'react';\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEvents} from '../../utils/WildApricotEvents';\nimport eventConvert from '../../utils/WildApricotConversions';\nimport {buildRedirect} from \"../EventCommon\";\n\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport listPlugin from '@fullcalendar/list';\nimport {Redirect} from 'react-router-dom';\nimport queryString from 'query-string';\n\nimport \"./EventCalendar.css\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\n\n\nexport default class EventCalendar extends Component {\n    calendarComponentRef = React.createRef()\n\n    state = {\n        events: [],\n        member: null,\n        calendarWeekends: true,\n        waToken: {},\n        showEvent: false,\n        editEvent: false\n    }\n\n    async componentDidMount() {\n        const queryStringValues = queryString.parse(this.props.location.search);\n        console.log(\"QUERY_PARAMS\", this.props.location.search,queryStringValues);\n        let firstDate = new Date();\n        firstDate.setFullYear(firstDate.getFullYear() - 1);\n        firstDate.setMonth(firstDate.getMonth() - 6);\n        console.log(\"FIRST DATE\", firstDate)\n\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        if ( queryStringValues.mid && queryStringValues.mid !== \"0\") {\n            await getContact(this.state.waToken, queryStringValues.mid, (contact) => {this.setState({member: contact})})\n            console.log(\"Retrieve Member\", this.state.member);\n        }\n        await getEvents(this.state.waToken, firstDate.toISOString(), (data) => {\n            var myEvents = eventConvert(data).map((event) => {\n                return {\n                    id: event.Id,\n                    title: event.Name.replace(\"Weekly Workout - \", \"\")\n                        .replace(\"Weekly Workout- \",\"\"),  // shorten string in event\n                    start: event.StartDate,\n                    end: event.EndDate,\n                    Url: event.Url,\n                    Tags: event.Tags,\n                    backgroundColor: this.getEventColor(event),\n                    parentId: event.parentId\n                }\n            });\n            this.setState({events: myEvents});\n        });\n    }\n\n    fixEventName(name) {\n        return name;\n    }\n\n    getEventColor(event) {\n        if ( /Race/.test(event.Name) ) {\n            return 'red'\n        }\n        return 'blue';\n    }\n\n    buildRedirect(path) {\n        return <Redirect to={{\n            pathname: path,\n            state: {\n                member: this.state.member,\n                eventInfo: this.state.eventInfo\n            }\n        }} push/>\n    }\n\n    render() {\n        if (this.state.showEvent) {\n            return buildRedirect('showEvent', this.state.member, this.state.eventInfo);\n        }\n        if (this.state.editEvent) {\n            return buildRedirect('editEvent', this.state.member, this.state.eventInfo);\n        }\n        return (\n            <div className='EventCalendar'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    firstDay={1}\n                    fixedWeekCount={false}\n                    header={{\n                        left: 'prev today next',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,listMonth'\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, bootstrapPlugin]}\n                    themeSystem=\"bootstrap\"\n                    displayEventTime={true}\n                    selectable={true}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={this.state.events}\n                    dateClick={this.handleDateClick}\n                    eventClick={this.handleEventClick}\n                />\n                <button onClick={this.createEvent}>Create Event</button>\n            </div>\n        )\n    }\n\n    createEvent = () => {\n        this.setState({editEvent: true, eventInfo: {}})\n    }\n\n    handleEventClick = (arg) => {\n        console.log(\"going to event\", arg);\n        this.setState({showEvent: true, eventInfo: arg});\n    }\n\n    handleDateClick = (e) => {\n        console.log(\"DATE CLICKED\", e);\n        this.setState({editEvent: true, eventInfo: e});\n    }\n}","import React, {Component} from 'react';\n\nimport \"./SwitchableInputText.css\";\n\nexport default class SwitchableTextInput extends Component {\n    render() {\n        return (\n            <div data-testid=\"switchable-text-input\" className={this.props.className}>\n                <label>{this.props.label}</label>\n                {this.props.inputFlag ?\n                    <input type=\"text\" className=\"form-control\" value={this.props.value} onChange={(e)=>this.props.onChange(e.target.value)}/> :\n                    this.props.value}\n            </div>\n        );\n    }\n}\n","import React,{Component} from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class EventDataLoader extends Component {\n    render() {\n        return (\n            <div className='loader'>\n                <h1>{this.props.name}</h1>\n                <h2>Loading</h2>\n                <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\"/>\n            </div>);\n    }\n}","import React, {Component} from 'react';\n\nimport \"./SwitchableInputText.css\";\nimport renderHTML from \"react-render-html\";\n\nexport default class SwitchableTextInput extends Component {\n    render() {\n        return (\n            <div data-testid=\"switchable-text-input\" className={this.props.className}>\n                <label>{this.props.label}</label><br/>\n                {this.props.displayFlag ?\n                    <div>{renderHTML(this.props.value)}</div> :\n                    <div></div>}\n            </div>\n        );\n    }\n}\n\n// {this.state.event.Details && this.state.event.Details.DescriptionHtml ?\n//     <div><h3>Description</h3><div>{renderHTML(this.state.event.Details.DescriptionHtml)}</div></div> :\n//     <div></div>}\n","import React, {Component} from 'react';\n\nimport \"./SwitchableButton.css\";\nimport {Button} from \"reactstrap\";\n\nexport default class SwitchableButton extends Component {\n    render() {\n        return <div className='SwitchableButton'>\n            {this.props.isVisible && <Button color={this.props.color} onClick={this.props.onClick} disabled={this.props.isDisabled}>{this.props.name}</Button>}\n        </div>\n    }\n}\n","import React, {Component} from 'react';\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEventById} from \"../../utils/WildApricotEvents\";\nimport SwitchableTextInput from \"../SwitchableTextInput\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport SwitchableHtmlDisplay from \"../SwitchableHtmlDisplay\";\nimport SwitchableButton from \"../SwitchableButton\";\nimport \"./EventDisplay.css\";\nimport {searchForSessionAndAdjustFields, buildRedirect} from \"../EventCommon\";\n\nexport default class EventDisplay extends Component {\n    state = {\n        fetch: true,\n        eventId: '',\n        waToken: {},\n        url: '',\n        event: null,\n        organizer: null,\n    }\n\n    async eventDetails() {\n    }\n\n    componentWillUnmount() {\n        console.log(\"unmounting########\");\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        console.log(\"STATE\",this.state);\n        // recurring event\n        if (this.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n            await getEventById(this.state.waToken, this.state.eventInfo.event.extendedProps.parentId, (data) => {\n                this.setState({\n                    event: searchForSessionAndAdjustFields(data, this.state.eventInfo.event.id),\n                    fetch:false\n                });\n            });\n        } else {\n            await getEventById(this.state.waToken, this.state.eventInfo.event.id, (data) => {\n                this.setState({\n                    event: data\n                });\n            });\n        }\n        console.log('state', this.state);\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.waToken, this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n                console.log(\"=====ORG\", data, this.state.organizer);\n            });\n            console.log(\"contact\", this.state.organizer);\n        }\n        console.log(\"state\", this.state);\n    }\n\n    handleEditClick() {\n        this.setState({editEvent: true});\n    }\n\n    canEdit() {\n        return this.member.isAdmin;\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return (<EventDataLoader name={this.props.location.state.name}/>);\n        } else if (this.state.editEvent) {\n            return buildRedirect('editEvent', this.state.member, this.state.eventInfo);\n        } else {\n            return (\n                <div>\n                    <SwitchableButton isVisible={this.canEdit} color=\"warning\" onClick={() => this.handleEditClick()} isDisabled={false} name=\"Edit\" />\n                    <h2>{this.state.event.Name}</h2>\n                    <SwitchableTextInput className=\"event_id\" label=\"Event Id: \" value={this.state.event.Id}/>\n                    <SwitchableTextInput className=\"event-title\" label=\"Event Name: \" value={this.state.event.Name}/>\n                    <SwitchableTextInput className=\"event-start\" label=\"Event Start Date/Time: \"\n                                         value={this.state.event.StartDate}/>\n                    <SwitchableTextInput className=\"event-end\" label=\"Event End Date/Time: \"\n                                         value={this.state.event.EndDate}/>\n                    <SwitchableTextInput className=\"location\" label=\"Event Location: \"\n                                         value={this.state.event.Location}/>\n                    {this.state.organizer && <SwitchableTextInput className=\"organizer\" label=\"Organizer: \"\n                                                                  value={this.state.organizer.displayName + '(' + this.state.organizer.email + ')'}/>}\n\n                    <SwitchableHtmlDisplay className=\"descriptionHtml\" label=\"Description\" value={this.state.event.Details.DescriptionHtml} displayFlag={this.state.event.Details && this.state.event.Details.DescriptionHtml} />\n                </div>\n            );\n        }\n    }\n}","import React, {Component} from 'react';\n// import SwitchableTextInput from \"../SwitchableTextInput\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n// import SwitchableDatePicker from \"../SwitchableDatePicker\";\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEventById} from \"../../utils/WildApricotEvents\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {searchForSessionAndAdjustFields} from \"../EventCommon\";\n\n// import Essentials from \"@ckeditor/ckeditor5-essentials\";\n// import Bold from \"@ckeditor/ckeditor5-basic-styles\";\n// import Italic from \"@ckeditor/ckeditor5-basic-styles\";\n// import Paragraph from \"@ckeditor/ckeditor5-paragraph\";\n\n// const editorConfiguration = {\n//     // plugins: [Essentials, Bold, Italic, Paragraph],\n//     // plugins: [Essentials],\n//     // toolbar: [\"bold\", \"italic\"]\n//     height: '500px',\n//     width: '80%'\n// };\n\n\nexport default class EventEditor extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            isEditing: true,\n            // date: props.location.state.eventInfo.date,\n            // description: \"\",\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        console.log(\"STATE\",this.state);\n        // recurring event\n        if (this.state.eventInfo.event && this.state.fetch) {   // user clicked on an event\n            if (this.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n                await getEventById(this.state.waToken, this.state.eventInfo.event.extendedProps.parentId, (data) => {\n                    this.setState({\n                        event: searchForSessionAndAdjustFields(data, this.state.eventInfo.event.id),\n                        fetch:false\n                    });\n                });\n            } else {\n                await getEventById(this.state.waToken, this.state.eventInfo.event.id, (data) => {\n                    this.setState({\n                        event: data\n                    });\n                });\n            }\n        } else if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            this.setState({\n                fetch: false,\n                event: {\n                    StartDate: new  Date(this.state.eventInfo.date),\n                    Details: {\n                        DescriptionHtml: \"\"\n                    }\n                }\n//                date: new Date(this.state.eventInfo.date), fetch: false\n            })\n        } else {\n            this.setState({\n                fetch: false,\n                event: {\n                    Details: {\n                        DescriptionHtml: \"\"\n                    }\n                }\n            });\n        }\n        console.log('===>state', this.state);\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.waToken, this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n                console.log(\"=====ORG\", data, this.state.organizer);\n            });\n            console.log(\"contact\", this.state.organizer);\n        }\n        console.log(\"state\", this.state);\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                    {/*<SwitchableDatePicker label=\"Date: \" editFlag={this.state.isEditing} selected={this.state.event.StartDate} handleChange={this.handleStartChange} />*/}\n                    <h2>Description</h2>\n                    <CKEditor\n                        editor={ ClassicEditor }\n                        data={this.state.event.Details.DescriptionHtml}\n                        onInit={ editor => {\n                            // You can store the \"editor\" and use when it is needed.\n                            console.log( 'Editor is ready to use!', editor );\n                        } }\n                        onChange={ ( event, editor ) => {\n                            const data = editor.getData();\n                            console.log( { event, editor, data } );\n                        } }\n                        onBlur={ ( event, editor ) => {\n                            console.log( 'Blur.', editor );\n                        } }\n                        onFocus={ ( event, editor ) => {\n                            console.log( 'Focus.', editor );\n                        } }\n                    />\n                </div>\n            )\n        }\n\n    }\n\n    handleStartChange = async (dt) => {\n        await this.setState({date: {...this.state.date, date: dt}});\n    }\n\n}\n\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\n//import logo from './logo.svg';\nimport './App.css';\nimport EventCalendar from \"./components/event-calendar/EventCalendar\";\nimport EventDisplay from \"./components/event-display/EventDisplay\";\nimport EventEditor from \"./components/event-edit/EventEditor\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router basename=\"/\">\n                <Switch>\n                    {/*<Route exact path=\"/:memberId\" component={EventCalendar}/>*/}\n                    <Route exact path=\"/\" component={EventCalendar} />\n                    <Route exact path=\"/showEvent\" component={EventDisplay}/>\n                    <Route exact path=\"/editEvent\" component={EventEditor}/>\n                </Switch>\n                {/*<EventCalendar />*/}\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\nconst qs = require('querystring');\n\nexport const getAuthTokens = async (cb) => {\n    console.log(\"url\", process.env.REACT_APP_WA_OAUTH_URL);\n    console.log(\"key\", process.env.REACT_APP_WA_API_KEY);\n\n    let basicAuthHeader = 'Basic ' + new Buffer('APIKEY:' + process.env.REACT_APP_WA_API_KEY).toString('base64');\n    let body = {\n        grant_type: 'client_credentials',\n        scope: 'auto',\n        obtain_refresh_token: true\n    };\n\n    const postConfig = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': basicAuthHeader},\n    }\n\n    await axios.post(process.env.REACT_APP_WA_OAUTH_URL, qs.stringify(body), postConfig)\n        .then( (result) => {\n            cb(result.data);\n        })\n        .catch( (err) => {\n            console.log('error', err);\n        });\n}\n\n","\nconst eventConvert = (waEvent) => {\n    let eList = [];\n    if( Array.isArray(waEvent)) {\n        waEvent.forEach((item) => {\n            let x = convertSingleEvent(item);\n            if( Array.isArray(x)) {\n                x.forEach((item) => {\n                    eList.push(item);\n                })\n            } else {\n                eList.push(x);\n            }\n        });\n    } else {\n        eList.push(convertSingleEvent(waEvent));\n    }\n    return eList;\n}\n\nconst convertSingleEvent = (waEvent) => {\n    let event = Object.assign({}, waEvent) ;\n\n    if ( waEvent.Sessions ) {\n        let eList = [];\n        waEvent.Sessions.forEach((item) => {\n            let e = Object.assign({}, event);\n            e.Id = item.Id;\n            e.parentId = event.Id;\n            e.Title = item.Title;\n            e.StartDate = item.StartDate;\n            e.EndDate = item.EndDate;\n            e.StartTimeSpecified = item.StartTimeSpecified;\n            e.EndTimeSpecified = item.EndTimeSpecified;\n            e.isRecurringSession = true;\n            e.isOrganizedEvent = item.Details && item.Details.Organizer;\n            delete e.Sessions\n            eList.push(e);\n        })\n        return eList;\n    } else {\n        return event;\n    }\n}\nmodule.exports = eventConvert;"],"sourceRoot":""}