{"version":3,"sources":["utils/WildApricotConversions.js","utils/WildApricotUtils.js","utils/WildApricotEvents.js","components/EventCommon.js","utils/WildApricotContacts.js","components/event-calendar/EventCalendar.js","components/event-data-loader/EventDataLoader.js","utils/WildApricotRegistrations.js","utils/WildApricotEmailSender.js","components/event-display/EventDisplay.js","components/date-time-range/DateTimeRange.js","components/event-edit/EventEditor.js","components/event-create/EventCreator.js","App.js","serviceWorker.js","index.js","utils/WildApricotOAuthUtils.js"],"names":["convertSingleEvent","waEvent","event","Object","assign","Sessions","eList","forEach","item","e","Id","parentId","Title","StartDate","EndDate","StartTimeSpecified","EndTimeSpecified","isRecurringSession","isOrganizedEvent","Details","Organizer","push","module","exports","Array","isArray","x","makeBaseUrl","token","process","Permissions","AccountId","makeAuthHeader","token_type","access_token","makeHeaders","axios","require","eventsUrl","createEvent","eventObj","cb","a","console","log","post","headers","then","result","data","catch","err","updateEvent","eventId","put","deleteEvent","delete","getEventById","url","method","getEvents","startDate","get","params","$filter","Events","searchForSessionAndAdjustFields","sessionData","sessionId","sess","filter","Number","Name","buildRedirect","path","member","eventInfo","to","pathname","state","getContact","contactId","id","firstName","FirstName","lastName","LastName","email","Email","displayName","DisplayName","isAdmin","FieldValues","Url","fields","adminField","SystemCode","length","Value","EventCalendar","props","setState","editEvent","isLoggedInUser","handleEventClick","arg","showEvent","handleDateClick","calendarComponentRef","React","createRef","events","calendarWeekends","waToken","xid","match","queryStringValues","queryString","parse","this","location","search","firstDate","Date","setFullYear","getFullYear","setMonth","getMonth","getAuthTokens","mid","contact","toISOString","myEvents","eventConvert","map","title","replace","start","end","Tags","backgroundColor","getEventColor","test","indexOf","updateSize","className","defaultView","firstDay","fixedWeekCount","handleWindowResize","contentHeight","height","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","bootstrapPlugin","themeSystem","displayEventTime","selectable","ref","weekends","dateClick","eventClick","windowResize","xs","onClick","Component","EventDataLoader","name","type","color","width","registrationsUrl","getRegistrationsForEventId","createInitialRegistrationForEvent","userId","regTypeId","getRegistrationTypesForEvent","updateRegistrationTypeForEvent","sendRegistrationForEvent","registerUserForEventId","regType","createRegistration","unregisterFromEvent","regId","updateRegistration","reg","updatedReg","memberId","message","numGuests","RegistrationDate","dateRegistered","regTypeUpdate","createRegistrationTypeUpdateRecord","msg","makeEmailUrl","sendEmail","recipArray","subject","text","makeMessage","Subject","Body","Recipients","processRecipients","EventId","recip","Type","EventDisplay","fetch","organizer","modalToggle","rsvpMessage","rsvpModalTitle","modalTextBoxType","toggle","bind","onChangeRsvpMessage","history","getEvent","regArray","convertRegistrationData","registrations","canEdit","extendedProps","Contact","Event","Memo","GuestRegistrationsSummary","NumberOfGuests","undefined","isUserEventOrganizer","findRegistrationByRegId","updateRegistrationInState","registration","messageSubject","memberMessage","toLocaleString","target","value","TotalDue","TotalPaid","index","key","regData","calendarViewClick","btnStyle","handleEditClick","handleMessagingClick","notAlreadyRegistered","canRegisterForEvent","handleRegisterClick","handleUnRegisterClick","handleAddGuest","addMessageModal","Location","renderHTML","DescriptionHtml","scope","renderRegistrationData","Modal","show","onHide","size","backdrop","aria-labelledby","centered","Header","closeButton","onChange","Footer","handleSendMessage","handleAddMessage","registerLocale","enGB","setDefaultLocale","DateTimeRange","endDate","maxDate","setHours","minDate","onChangeStartDate","onChangeStartTime","onChangeEndTime","date","newDate","getDate","getHours","getMinutes","myEndDate","getTime","onChangeEndDate","prevProps","prevState","snapshot","render","dateLabel","selected","placeholderText","startLabel","showTimeSelect","showTimeSelectOnly","timeIntervals","minTime","maxTime","timeCaption","dateFormat","endLabel","editorConfiguration","link","decorators","addTargetToExternalLinks","mode","callback","attributes","rel","EventEditor","handleStartChange","dt","EventType","RegistrationEnabled","RegistrationsLimit","AccessLevel","AccessControl","AvailableForAnyLevel","AvailableForLevels","AvailableForAnyGroup","AvailableForGroups","GuestRegistrationSettings","Enabled","CreateContactMode","isEditing","onSubmit","onChangeEventLocation","onChangeEventName","startDateHandler","endDateHandler","handleDelete","preventDefault","theEvent","style","config","editor","ClassicEditor","details","getData","EventCreator","App","basename","exact","component","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister","error","qs","basicAuthHeader","Buffer","toString","body","grant_type","obtain_refresh_token","postConfig","stringify"],"mappings":"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","file":"static/js/main.11f42fdb.chunk.js","sourcesContent":["\nconst eventConvert = (waEvent) => {\n    let eList = [];\n    if( Array.isArray(waEvent)) {\n        waEvent.forEach((item) => {\n            let x = convertSingleEvent(item);\n            if( Array.isArray(x)) {\n                x.forEach((item) => {\n                    eList.push(item);\n                })\n            } else {\n                eList.push(x);\n            }\n        });\n    } else {\n        eList.push(convertSingleEvent(waEvent));\n    }\n    return eList;\n}\n\nconst convertSingleEvent = (waEvent) => {\n    let event = Object.assign({}, waEvent) ;\n\n    if ( waEvent.Sessions ) {\n        let eList = [];\n        waEvent.Sessions.forEach((item) => {\n            let e = Object.assign({}, event);\n            e.Id = item.Id;\n            e.parentId = event.Id;\n            e.Title = item.Title;\n            e.StartDate = item.StartDate;\n            e.EndDate = item.EndDate;\n            e.StartTimeSpecified = item.StartTimeSpecified;\n            e.EndTimeSpecified = item.EndTimeSpecified;\n            e.isRecurringSession = true;\n            e.isOrganizedEvent = item.Details && item.Details.Organizer;\n            delete e.Sessions\n            eList.push(e);\n        })\n        return eList;\n    } else {\n        return event;\n    }\n}\nmodule.exports = eventConvert;","\nexport const makeBaseUrl = (token) => {\n    return process.env.REACT_APP_WA_BASE_URL + '/accounts/' + token.Permissions[0].AccountId;\n}\n\nexport const makeAuthHeader = (token) => {\n    return token.token_type + ' ' +token.access_token;\n}\n\nexport const makeHeaders = (token) => {\n    return {\n        'Content-Type': 'application/json',\n        'Authorization': makeAuthHeader(token)\n        // 'Host': 'api.wildapricot.org'\n    }\n}","import {makeBaseUrl, makeHeaders} from \"./WildApricotUtils\";\nconst axios = require('axios');\n\nconst eventsUrl = (token) => {\n    return makeBaseUrl(token)+'/events';\n}\n\nexport const createEvent = async (token, eventObj, cb) => {\n    console.log(\"creating new event\", eventObj);\n    await axios.post(eventsUrl(token), eventObj,{headers: makeHeaders(token)})\n        // eventsUrl(token), qs.stringify(eventObj), { headers: makeHeaders(token)})\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nexport const updateEvent = async (token, eventId, eventObj, cb) => {\n    console.log(\"creating new event\", eventObj);\n    await axios.put(eventsUrl(token)+'/'+eventId, eventObj,{headers: makeHeaders(token)})\n        // eventsUrl(token), qs.stringify(eventObj), { headers: makeHeaders(token)})\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nexport const deleteEvent = async (token, eventId, cb) => {\n    console.log(\"deleting event\", eventId);\n    await axios.delete(eventsUrl(token)+'/'+eventId, {headers: makeHeaders(token)})\n        // eventsUrl(token), qs.stringify(eventObj), { headers: makeHeaders(token)})\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nexport const getEventById = async (token, eventId, cb) => {\n    console.log(\"getEventById\", eventId);\n    await axios({\n        url: eventsUrl(token)+'/'+eventId,\n        method: 'GET',\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n             // return result.data;\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            cb({});\n        })\n}\n\nexport const getEvents = async (token, startDate, cb) => {\n    await axios.get(eventsUrl(token), {\n        headers: makeHeaders(token),\n        params: {\n            $filter: \"StartDate ge \"+startDate\n        }\n    })\n        .then((result) => {\n            cb(result.data.Events);\n        })\n        .catch((err) => {\n            console.log(\"Error\", err);\n            cb([]);\n        });\n};\n\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const memberEventTag = () => {\n    return 'member-event'\n}\nexport const searchForSessionAndAdjustFields = (sessionData, sessionId) => {\n    let e = Object.assign({}, sessionData);\n\n    let sess = sessionData.Sessions.filter(x => x.Id === Number(sessionId));\n    console.log(\"foundSession\", sess);\n    if (sess) {\n        e.sessionId = sess[0].Id;\n        e.Name = sess[0].Title;\n        e.StartDate = sess[0].StartDate;\n        e.EndDate = sess[0].EndDate;\n    }\n    console.log(\"theEvent\", e);\n    return e;\n}\n\nexport const calendarViewClick = () => {\n    this.props.history.push(`/?mid=${this.state.member.id}`);\n    console.log(\"CAL VIEW\", this.state.member);\n}\n\nexport const redirect = (path) => {\n    return <Redirect to={{pathname: path}} push />\n}\n\nexport const buildRedirect = (path, member, eventInfo) => {\n    return <Redirect to={{\n        pathname: path,\n        state: {\n            member: member,\n            eventInfo: eventInfo\n        }\n    }} push/>\n}\n\nexport const emptyEvent = () => {\n    return {\n        EventType: 'Rsvp',\n        StartDate: '',\n        EndDate: '',\n        Location: '',\n        RegistrationEnabled: true,\n        EndTimeSpecified: true,\n        RegistrationsLimit: 300,\n        Tags: [memberEventTag()],\n        AccessLevel: 'Public',\n        Details: {\n            DescriptionHtml: '',\n            Organizer: {\n                Id: 0,\n            },\n            AccessControl: {\n                AccessLevel: \"Public\",\n                AvailableForAnyLevel: false,\n                AvailableForLevels: [],\n                AvailableForAnyGroup: false,\n                AvailableForGroups: []\n            },\n            GuestRegistrationSettings: {\n                Enabled: true,\n                CreateContactMode: \"NeverCreateContact\"\n            }\n        },\n        Name: ''\n    }\n}\n\nexport const baseRegistration = (contactId, eventId, message) => {\n    return {\n        Event: {\n            Id: eventId\n        },\n        \"Contact\": {\n            \"Id\" : contactId\n        },\n        \"RegistrationTypeId\": 5895025,\n        \"GuestRegistrationsSummary\": {\n            \"NumberOfGuests\": 0,\n            \"NumberOfGuestsCheckedIn\": 0\n        },\n        \"IsCheckedIn\": false,\n        \"ShowToPublic\": true,\n        \"RegistrationDate\": new Date().toDateString(),\n        \"Memo\": message,\n        \"RecreateInvoice\": false\n    }\n}\n","import {makeBaseUrl, makeAuthHeader} from \"./WildApricotUtils\";\n\nconst axios = require('axios');\n\nexport const getContact = async (token, contactId, cb) => {\n    await axios.get(makeBaseUrl(token) + '/contacts/' + contactId, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        }\n    })\n        .then((result) => {\n            let e = {};\n\n            e.id = result.data.Id;\n            e.firstName = result.data.FirstName;\n            e.lastName = result.data.LastName;\n            e.email = result.data.Email;\n            e.displayName = result.data.DisplayName;\n            e.isAdmin = isAdmin(result.data.FieldValues);\n            e.url = result.data.Url;\n\n            cb(e);\n        })\n        .catch((err) => {\n            cb(null);\n        })\n}\n\nconst isAdmin = (fields) => {\n    let adminField = fields.filter(x => x.SystemCode === 'AdminRole');\n    return adminField.length>0 && adminField[0].Value.length > 0;\n}","import React, {Component} from 'react';\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEvents} from '../../utils/WildApricotEvents';\nimport eventConvert from '../../utils/WildApricotConversions';\nimport {buildRedirect,memberEventTag} from \"../EventCommon\";\n\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport listPlugin from '@fullcalendar/list';\nimport queryString from 'query-string';\nimport {Button} from \"react-bootstrap-buttons\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\n\nimport \"./EventCalendar.css\";\n\nexport default class EventCalendar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.calendarComponentRef = React.createRef()\n\n        this.state = {\n            events: [],\n            member: {id: 0, isAdmin: false},\n            calendarWeekends: true,\n            waToken: {},\n            showEvent: false,\n            editEvent: false,\n            xid: props.match.params.xid,\n            isLoggedInUser: false\n        }\n    }\n\n\n    async componentDidMount() {\n        const queryStringValues = queryString.parse(this.props.location.search);\n        console.log(\"QUERY_PARAMS\", this.props.location.search,queryStringValues);\n        let firstDate = new Date();\n        firstDate.setFullYear(firstDate.getFullYear() - 1);\n        firstDate.setMonth(firstDate.getMonth() - 6);\n        console.log(\"FIRST DATE\", firstDate)\n\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        if ( queryStringValues.mid && queryStringValues.mid !== \"0\") {\n            await getContact(this.state.waToken, queryStringValues.mid, (contact) => {this.setState({member: contact})})\n            console.log(\"Retrieve Member\", this.state.member);\n            this.setState({isLoggedInUser:true})\n        }\n        await getEvents(this.state.waToken, firstDate.toISOString(), (data) => {\n            var myEvents = eventConvert(data).map((event) => {\n                return {\n                    id: event.Id,\n                    title: event.Name.replace(\"Weekly Workout - \", \"\")\n                        .replace(\"Weekly Workout- \",\"\"),  // shorten string in event\n                    start: event.StartDate,\n                    end: event.EndDate,\n                    Url: event.Url,\n                    Tags: event.Tags,\n                    backgroundColor: this.getEventColor(event),\n                    parentId: event.parentId\n                }\n            });\n            this.setState({events: myEvents});\n        });\n        // console.log(\"EVENTS\", this.state.events);\n    }\n\n    getEventColor(event) {\n        if ( /Race/.test(event.Name) ) {\n            return 'red'\n        } else if ( event.Tags && event.Tags.indexOf(memberEventTag())> -1) {\n             return 'green'\n        }\n        return 'blue';\n    }\n\n    handleWindowResize(arg) {\n        console.log(\"RESIZE\", arg);\n        arg.updateSize();\n    }\n\n    createEvent = () => {\n        this.setState({editEvent: this.state.isLoggedInUser, eventInfo: {}})\n    }\n\n    handleEventClick = (arg) => {\n        console.log(\"going to event\", arg);\n        this.setState({showEvent: true, eventInfo: arg});\n    }\n\n    handleDateClick = (e) => {\n        console.log(\"DATE CLICKED\", e);\n        this.setState({editEvent: this.state.isLoggedInUser, eventInfo: e});\n    }\n\n    render() {\n        if (this.state.showEvent) {\n            return buildRedirect('showEvent', this.state.member, this.state.eventInfo);\n        }\n        if (this.state.editEvent) {\n            return buildRedirect('createEvent', this.state.member, this.state.eventInfo);\n        }\n        return (\n            <div className='EventCalendar'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    firstDay={1}\n                    fixedWeekCount={false}\n                    handleWindowResize={true}\n                    contentHeight='auto'\n                    height='auto'\n                    // aspectRatio={3}\n                    header={{\n                        left: 'prev today next',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,listMonth'\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, bootstrapPlugin]}\n                    themeSystem=\"bootstrap\"\n                    displayEventTime={true}\n                    selectable={true}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={this.state.events}\n                    dateClick={this.handleDateClick}\n                    eventClick={this.handleEventClick}\n                    windowResize={this.handleWindowResize}\n                />\n                {this.state.isLoggedInUser ? <Button xs onClick={this.createEvent}>Create Event</Button> : <div> </div> }\n            </div>\n        )\n    }\n}","import React,{Component} from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class EventDataLoader extends Component {\n    render() {\n        return (\n            <div className='loader'>\n                <h1>{this.props.name}</h1>\n                <h2>Loading</h2>\n                <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\"/>\n            </div>);\n    }\n}","import {makeBaseUrl, makeHeaders} from \"./WildApricotUtils\";\nconst axios = require('axios');\n\nconst registrationsUrl = (token) => {\n    return makeBaseUrl(token)+'/eventregistrations';\n}\n\nexport const getRegistrationsForEventId = async (token, eventId, cb) => {\n    console.log(\"getting registrations for eventId\", eventId);\n    await axios.get(registrationsUrl(token)+'?eventId='+eventId,{headers: makeHeaders(token)})\n        // eventsUrl(token), qs.stringify(eventObj), { headers: makeHeaders(token)})\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nexport const createInitialRegistrationForEvent = async (token, eventId, userId, cb) => {\n    let regTypeId = null;\n    await getRegistrationTypesForEvent(token, eventId, (data) => {\n        regTypeId = data[0].Id;\n    });\n    await updateRegistrationTypeForEvent(token, regTypeId, eventId, (data) => {\n        console.log(\"updated registration type\", data);\n    });\n    await sendRegistrationForEvent(token, eventId, userId, regTypeId, cb);\n}\n\nexport const registerUserForEventId = async (token, eventId, userId, cb) => {\n    console.log(\"registering user for event\", eventId, userId);\n    let regType = null;\n    await getRegistrationTypesForEvent(token, eventId,(data) => {\n        regType = data[0].Id;\n    })\n    await sendRegistrationForEvent(token, eventId, userId, regType, cb)\n}\n\nconst sendRegistrationForEvent = async (token, eventId, userId, regType, cb) => {\n    await axios.post(registrationsUrl(token), createRegistration(eventId, userId, '', 0, regType), {headers: makeHeaders(token)} )\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nexport const unregisterFromEvent = async (token, regId, cb) => {\n    console.log(\"unregistering\", regId);\n    await axios.delete(registrationsUrl(token)+'/'+regId, {headers: makeHeaders(token)})\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nexport const updateRegistration = async (token, reg, cb) => {\n    let updatedReg = createRegistration(reg.eventId, reg.memberId, reg.message, reg.numGuests);\n    updatedReg.Id = reg.regId;\n    updatedReg.RegistrationDate = reg.dateRegistered;\n\n    await axios.put(registrationsUrl(token)+'/'+ reg.regId, updatedReg, {headers: makeHeaders(token)})\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nconst getRegistrationTypesForEvent = async (token, eventId, cb) => {\n    await axios.get(makeBaseUrl(token)+'/EventRegistrationTypes?eventId='+eventId, {headers: makeHeaders(token)})\n        .then( (result) => {\n            console.log(\"registrationTypes result\", result);\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nconst updateRegistrationTypeForEvent = async (token, regTypeId, eventId, cb) => {\n    let regTypeUpdate = createRegistrationTypeUpdateRecord(regTypeId, eventId);\n    await axios.put(makeBaseUrl(token)+'/EventRegistrationTypes/'+regTypeId, regTypeUpdate, {headers: makeHeaders(token)})\n        .then( (result) => {\n            console.log(\"registrationTypes result\", result);\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nconst createRegistration = (eventId, userId, msg, numGuests, regType) => {\n    return {\n        \"Event\": {\n            \"Id\": eventId\n        },\n        \"Contact\": {\n            \"Id\" : userId\n        },\n        \"RegistrationTypeId\": regType,\n        \"GuestRegistrationsSummary\": {\n            \"NumberOfGuests\": numGuests,\n            \"NumberOfGuestsCheckedIn\": 0\n        },\n        \"IsCheckedIn\": false,\n        \"ShowToPublic\": true,\n        \"RegistrationDate\": new Date(),\n        \"Memo\": msg,\n        \"RecreateInvoice\": false\n    }\n}\n\nconst createRegistrationTypeUpdateRecord = (regTypeId, eventId) => {\n    return {\n        \"Id\": regTypeId,\n        \"EventId\": eventId,\n        \"IsEnabled\": true,\n        \"Description\": \"\",\n        \"BasePrice\": 0.0000,\n        \"GuestPrice\": 0.0000,\n        \"UseTaxScopeSettings\": null,\n        \"Availability\": \"Everyone\",\n        \"AvailableForMembershipLevels\": null,\n        \"GuestRegistrationPolicy\": \"NumberOfGuests\",\n        \"CurrentRegistrantsCount\": 0,\n        \"MultipleRegistrationAllowed\": false,\n        \"UnavailabilityPolicy\": \"Undefined\",\n        \"CancellationBehaviour\": \"DoNotAllow\",\n        \"CancellationDaysBeforeEvent\": null,\n        \"IsWaitlistEnabled\": false,\n        \"Name\": \"RSVP\"\n    }\n}","import {makeHeaders} from \"./WildApricotUtils\";\nconst axios = require('axios');\n\nconst makeEmailUrl = (token) => {\n    return 'https://cors-anywhere.herokuapp.com/https://api.wildapricot.org/v2.2/rpc/' + token.Permissions[0].AccountId + '/email/SendEmail';\n}\n\nexport const sendEmail = async (token, eventId, recipArray, subject, text, cb) => {\n    // let msg = makeMessage(eventId,recipArray,subject, text);\n\n    await axios.post(makeEmailUrl(token), makeMessage(eventId, recipArray, subject, text), {headers: makeHeaders(token)} )\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n\n}\n\nconst makeMessage = (eventId, recipArray, subject, text) => {\n    return {\n        Subject: subject,\n        Body: text,\n        Recipients: processRecipients(recipArray),\n        EventId: eventId\n    }\n}\n\nconst processRecipients = (recipArray) => {\n    let recipients = recipArray.map((recip) => {\n        return {\n            Id: recip.memberId,\n            Type: \"IndividualContactRecipient\"\n        }\n    });\n\n    return recipients;\n}\n","import React, {Component} from 'react';\nimport {Button} from 'react-bootstrap-buttons';\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEventById} from \"../../utils/WildApricotEvents\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport {searchForSessionAndAdjustFields, buildRedirect} from \"../EventCommon\";\nimport {getRegistrationsForEventId, registerUserForEventId, unregisterFromEvent, updateRegistration} from \"../../utils/WildApricotRegistrations\";\nimport {sendEmail} from \"../../utils/WildApricotEmailSender\";\nimport renderHTML from \"react-render-html\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./EventDisplay.css\";\n\nexport default class EventDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetch: true,\n            eventId: '',\n            waToken: {},\n            url: '',\n            event: null,\n            organizer: null,\n            modalToggle: false,\n            rsvpMessage: \"\",\n            rsvpModalTitle: \"\",\n            modalTextBoxType: \"\"\n        }\n        this.toggle = this.toggle.bind(this);\n        this.onChangeRsvpMessage = this.onChangeRsvpMessage.bind(this);\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n        console.log(\"CAL VIEW\", this.state.member);\n    }\n\n    toggle() {\n        this.setState({modalToggle:!this.state.modalToggle});\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        console.log(\"STATE\",this.state);\n        // recurring event\n        await this.getEvent();\n        await getRegistrationsForEventId(this.state.waToken, this.state.eventInfo.event.id, (data) => {\n            let regArray = data.map((reg) => this.convertRegistrationData(reg))\n            this.setState({registrations: regArray});\n        })\n        this.setState({fetch:false});\n        console.log('state', this.state);\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.waToken, this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n                console.log(\"=====ORG\", data, this.state.organizer);\n            });\n            console.log(\"contact\", this.state.organizer);\n        }\n        console.log(\"state\", this.state);\n        console.log(\"CAN EDIT\", this.canEdit());\n    }\n\n    async getEvent() {\n        if (this.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n            await getEventById(this.state.waToken, this.state.eventInfo.event.extendedProps.parentId, (data) => {\n                this.setState({event: searchForSessionAndAdjustFields(data, this.state.eventInfo.event.id),});\n            });\n        } else {\n            await getEventById(this.state.waToken, this.state.eventInfo.event.id, (data) => {\n                this.setState({event: data});\n            });\n        }\n\n    }\n\n    convertRegistrationData(reg) {\n        console.log(\"CONVERT REG\", reg);\n        return {\n            regId: reg.Id,\n            memberId: reg.Contact.Id,\n            eventId: reg.Event.Id,\n            name: reg.DisplayName,\n            message: reg.Memo,\n            numGuests: reg.GuestRegistrationsSummary && reg.GuestRegistrationsSummary.NumberOfGuests ? reg.GuestRegistrationsSummary.NumberOfGuests : 0,\n            dateRegistered: reg.RegistrationDate\n        }\n    }\n\n    handleEditClick() {\n        this.setState({editEvent: true});\n    }\n\n    canEdit() {\n        return  this.state.member && this.state.eventInfo.event.extendedProps.parentId === undefined && (\n            this.state.member.isAdmin || this.isUserEventOrganizer()\n        )\n    }\n\n    isUserEventOrganizer() {\n        return this.state.event.Details && this.state.event.Details.Organizer && this.state.member.id === this.state.event.Details.Organizer.Id;\n    }\n\n    notAlreadyRegistered() {\n        return this.state.member && this.state.registrations.filter( x => this.state.member.id === x.memberId).length === 0\n    }\n\n    async handleRegisterClick() {\n        await registerUserForEventId(this.state.waToken, this.state.event.Id, this.state.member.id, (data) => {\n            console.log(\"registration response\", data);\n            this.setState( state => {\n                const registrations = [this.convertRegistrationData(data), ...state.registrations];\n                return {\n                    registrations\n                }\n            });\n        });\n    }\n\n    async handleUnRegisterClick(regId) {\n        await unregisterFromEvent(this.state.waToken, regId, (data) => {});\n        this.setState( state => {\n            const registrations = state.registrations.filter(reg => reg.regId !== regId);\n            return {\n                registrations\n            }\n        })\n    }\n\n    async handleAddGuest(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        reg.numGuests = reg.numGuests+1;\n        await updateRegistration(this.state.waToken, reg, (data) => {\n            console.log(\"ADDED GUEST\", data);\n            this.updateRegistrationInState(reg, data);\n        });\n        console.log(\"STATE\", this.state);\n    }\n\n    async handleAddMessage() {\n        let reg = Object.assign({}, this.state.registration);\n        reg.message = this.state.rsvpMessage;\n\n        await updateRegistration(this.state.waToken, reg, (data)=> {\n            console.log(\"DATA from add MEssage\", data);\n            this.updateRegistrationInState(reg, data);\n        })\n\n        this.setState({registration:null, rsvpMessage:''});\n        this.toggle();\n        console.log(\"SAVED MESSAGE\");\n    }\n\n    async handleMessagingClick() {\n        await this.setState({rsvpModalTitle: \"Message to RSVP Contacts\", modalTextBoxType: \"textarea\"})\n        this.toggle();\n    }\n\n    async handleSendMessage() {\n        sendEmail(this.state.waToken, this.state.event.Id, this.state.registrations, this.messageSubject(), this.memberMessage(),(data)=>console.log(data));\n        await this.setState({\n            rsvpModalTitle: '',\n            rsvpMessage: '',\n            modalTextBoxType: \"text\"\n        });\n        this.toggle();\n    }\n    messageSubject() {\n        return \"Event Update: \"+this.state.event.Name+ \"  \"+ new Date(this.state.event.StartDate).toLocaleString();\n    }\n    memberMessage() {\n        return \"<html><body>This is concerning the event you RSVP'd to on: \"+new Date(this.state.event.StartDate).toLocaleString()+\"<h2>\"+this.state.event.Name\n        + \"</h2><p><h3><u>Message from the event organizer</u>:</h3>\"+ this.state.rsvpMessage+\"</body></html>\";\n    }\n\n    updateRegistrationInState(reg, data) {\n        this.setState(state => {\n            console.log(\"REGISTRATION convertedDAta\", this.convertRegistrationData(data));\n            const registrations = state.registrations.map((item) => {\n                return item.regId === reg.regId ? this.convertRegistrationData(data) : item;\n            });\n            console.log(\"REGISTRATION\", registrations);\n\n            return {\n                registrations\n            };\n        });\n    }\n\n    async addMessageModal(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        await this.setState({registration: reg, rsvpMessage: reg.message, rsvpModalTitle: \"RSVP Message\", modalTextBoxType: \"text\"});\n        this.toggle();\n    }\n\n    onChangeRsvpMessage(x) {\n        this.setState({rsvpMessage: x.target.value});\n    }\n\n    findRegistrationByRegId(regId) {\n        let regArray = this.state.registrations.filter(reg => reg.regId === regId);\n        if (regArray.length === 1) {\n            return regArray[0];\n        } else {\n            return null;\n        }\n    }\n    canRegisterForEvent() {\n        console.log(\"CHECKING IF CAN REGISTER\", this.state.event);\n        if (this.state.event.Details.TotalDue === 0 && this.state.event.Details.TotalPaid === 0 && this.state.member.id !== 0) {\n            return true;\n        }\n        return false;\n    }\n\n    renderRegistrationData() {\n        return this.state.registrations.map( (reg, index) => {\n            const { regId, name, message, numGuests /*, dateRegistered */} = reg;\n            return <tr key={regId}>\n                {/*<td>{regId}</td>*/}\n                <td>{name}</td>\n                <td>{numGuests}</td>\n                {/*<td>{dateRegistered}</td>*/}\n                <td>{message}</td>\n            </tr>\n        })\n    }\n\n    render() {\n        // console.log(\"STATE\", this.state);\n        let regData = this.state.registrations ? this.state.registrations.filter(reg => reg.memberId === this.state.member.id):[];\n\n        if (this.state.fetch) {\n            return (<EventDataLoader name={this.props.location.state.name}/>);\n        } else if (this.state.editEvent) {\n            return buildRedirect('editEvent', this.state.member, this.state.eventInfo);\n        } else {\n            return (\n                <div>\n                    <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                    {this.canEdit() && <Button xs btnStyle=\"primary\" onClick={() => this.handleEditClick()}>Edit Event</Button>}\n                    {this.canEdit() && <Button xs btnStyle=\"warning\" onClick={() => this.handleMessagingClick()}>Message RSVPd Members</Button>}\n                    {this.notAlreadyRegistered() && this.canRegisterForEvent() && <Button xs btnStyle=\"success\" onClick={() => this.handleRegisterClick()}>RSVP</Button>}\n                    {regData.length===1 && !this.isUserEventOrganizer() && <Button xs btnStyle=\"danger\" onClick={() => this.handleUnRegisterClick(regData[0].regId) }>Unregister</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.handleAddGuest(regData[0].regId)}>Add Guest</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.addMessageModal(regData[0].regId)}>Add/Edit Message</Button> }\n\n                    <h2>{this.state.event.Name}</h2>\n                    <div className=\"event_id\">\n                        <label>Event Id: </label>&nbsp;&nbsp;\n                        {this.state.event.Id}\n                    </div>\n                    <div className=\"event-title\">\n                        <label>Event Name: </label>&nbsp;&nbsp;\n                        {this.state.event.Name}\n                    </div>\n                    <div className=\"event-start\">\n                        <label>Event Start Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.StartDate).toLocaleString()}\n                    </div>\n                    <div className=\"event-end\">\n                        <label>Event End Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.EndDate).toLocaleString()}\n                    </div>\n                    <div className=\"location\">\n                        <label>Event Location: </label>&nbsp;&nbsp;\n                        {this.state.event.Location}\n                    </div>\n\n                    {this.state.organizer && <div className=\"organizer\">\n                        <label>Organizer: </label>&nbsp;&nbsp;\n                        {this.state.organizer.displayName + '(' + this.state.organizer.email + ')'}\n                    </div>}\n\n                    <div className=\"descriptionHtml\">\n                        <label>Description: </label><br/>&nbsp;&nbsp;\n                        <div>{renderHTML(this.state.event.Details.DescriptionHtml)}</div>\n                    </div>\n\n                    <div className=\"registrations\">\n                        <label>Registrations: </label><br/>\n                        <table id='registrations' className=\"table-striped\">\n                            <tbody>\n                                <tr>\n                                    {/*<th scope=\"col\">Registration Id</th>*/}\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">#Guests</th>\n                                    {/*<th scope=\"col\">Date Registered</th>*/}\n                                    <th scope=\"col\">Comments</th>\n                                </tr>\n                                {this.renderRegistrationData()}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <Modal\n                        show={this.state.modalToggle}\n                        onHide={this.toggle}\n                        size=\"lg\"\n                        backdrop=\"static\"\n                        aria-labelledby=\"contained-modal-title-vcenter\"\n                        centered\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\n                                {this.state.rsvpModalTitle}\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <h4>Please enter your message:</h4>\n                            <p>\n                                {this.state.modalTextBoxType==='textarea' ? <textarea\n                                        value={this.state.rsvpMessage}\n                                        className=\"form-control\"\n                                        onChange={this.onChangeRsvpMessage}\n                                    />\n                                    :\n                                    <input type=\"text\"\n                                       value={this.state.rsvpMessage}\n                                       className=\"form-control\"\n                                       onChange={this.onChangeRsvpMessage}\n                                       />\n                                    }\n                            </p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button xs btnStyle=\"danger\" onClick={this.toggle}>Cancel</Button>\n                            {this.state.modalTextBoxType === 'textarea' ?\n                                <Button xs onClick={() => this.handleSendMessage()}>Send Message</Button>\n                                :\n                                <Button xs onClick={() => this.handleAddMessage()}>Save</Button>\n                            }\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            );\n        }\n    }\n}","import React, {Component} from 'react';\nimport DatePicker from 'react-datepicker';\nimport {registerLocale, setDefaultLocale} from \"react-datepicker\";\nimport \"./DateTimeRange.css\";\nimport enGB from \"date-fns/locale/en-GB\";\n\nregisterLocale(\"en-GB\", enGB);\n\nsetDefaultLocale(\"en-GB\")\n\nexport default class DateTimeRange extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            startDate: this.props.startDate != null ? new Date(this.props.startDate) : null,\n            endDate: this.props.endDate != null ? new Date(this.props.endDate) : null,\n            maxDate: this.props.endDate ? new Date(new Date(this.props.endDate).setHours(23, 59, 59)) : null,\n            minDate: this.props.startDate ? new Date(new Date(this.props.startDate).setHours(0, 0, 0)) : null,\n        }\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeStartTime = this.onChangeStartTime.bind(this);\n        this.onChangeEndTime = this.onChangeEndTime.bind(this);\n    }\n\n    async onChangeStartDate(date) {\n        let newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes());\n        if (this.props.endDate === null) {\n            let myEndDate = new Date(newDate.getTime());\n            await this.setState({endDate: new Date(myEndDate.setHours(23, 59, 59, 0))});\n        }\n        await this.setState({\n            startDate: newDate,\n            endDate: new Date(this.state.endDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate())),\n            minDate: new Date(date.setHours(0, 0, 0, 0)),\n            maxDate: new Date(date.setHours(23, 59, 59, 0)),\n        });\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    async onChangeStartTime(date) {\n        if (this.state.endDate < this.state.startDate) {\n            await this.setState({\n                startDate: date,\n                endDate: date\n            })\n        } else {\n            await this.setState({startDate: date});\n        }\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    onChangeEndTime(date) {\n        this.setState({endDate: date})\n        this.props.onChangeEndDate(date);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.startDate !== prevState.startDate || this.state.endDate !== prevState.endDate) {\n            this.render();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"dateTimeRangeSelector\">\n                <div className=\"dateTimeRangeSelector-date\">\n                    <label>{this.props.dateLabel}</label>\n                    <DatePicker\n                        selected={this.props.startDate}\n                        placeholderText=\"Click to select a date\"\n                        onChange={date => this.onChangeStartDate(date)}\n                    />\n                </div>\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-start\">\n                            <label>{this.props.startLabel}</label>\n                            <DatePicker\n                                selected={this.props.startDate}\n                                onChange={date => this.onChangeStartTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.minDate}\n                                maxTime={this.state.endDate}\n                                timeCaption=\"Start Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n                        </div> : <div /> }\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-end\">\n                            <label>{this.props.endLabel}</label>\n                            <DatePicker\n                                selected={this.props.endDate}\n                                onChange={date => this.onChangeEndTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.startDate}\n                                maxTime={this.state.maxDate}\n                                timeCaption=\"End Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n\n                        </div>\n                    : <div/>}\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEventById, updateEvent, deleteEvent} from \"../../utils/WildApricotEvents\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {emptyEvent, searchForSessionAndAdjustFields} from \"../EventCommon\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {Button} from \"react-bootstrap-buttons\";\n\nimport \"./EventEditor.css\";\n\nconst editorConfiguration = {\n    link: {\n        link: {\n            decorators: {\n                addTargetToExternalLinks: {\n                    mode: 'automatic',\n                    callback: url => /^(https?:)?\\/\\//.test( url ),\n                    attributes: {\n                        target: '_blank',\n                        rel: 'noopener noreferrer'\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default class EventEditor extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        let theEvent = Object.assign({}, this.state.event);\n        console.log(\"SAVING EVENT\", this.state, theEvent);\n\n        updateEvent(this.state.waToken, this.state.event.Id, this.state.event, (data) => {console.log(\"UPDATE RESULT\", data)})\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        console.log(\"STATE\",this.state);\n        // recurring event\n        if (this.state.eventInfo.event && this.state.fetch) {   // user clicked on an event\n            if (this.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n                await getEventById(this.state.waToken, this.state.eventInfo.event.extendedProps.parentId, (data) => {\n                    this.setState({event: searchForSessionAndAdjustFields(data, this.state.eventInfo.event.id)});\n                });\n            } else {\n                await getEventById(this.state.waToken, this.state.eventInfo.event.id, (data) => {\n                    this.setState({event: data});\n                });\n            }\n        } else if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            this.setState({event: {...this.state.event, StartDate: new  Date(this.state.eventInfo.date)}})\n        }\n        this.setState({event:{...this.state.event,StartDate: new Date(this.state.event.StartDate)}});\n        this.setState({event:{...this.state.event,EndDate: new Date(this.state.event.EndDate)}});\n        console.log('===>state', this.state);\n        this.setState({fetch:false});\n\n        if (this.props.location.state.eventInfo.date) {\n            let maxTime = new Date(this.props.location.state.eventInfo.date.getTime());\n            this.setState({...this.state.event, startDate: this.props.location.state.eventInfo.date});\n            this.setState({...this.state.event, endDate: new Date(maxTime.setHours(23,59,59))});\n        }\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.waToken, this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n                console.log(\"=====ORG\", data, this.state.organizer);\n            });\n            console.log(\"contact\", this.state.organizer);\n        }\n        console.log(\"state\", this.state);\n    }\n\n    startDateHandler(date) {\n        console.log(\"CreatorState\", this.state);\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        console.log(\"CreatorState\", this.state);\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    handleDelete() {\n        console.log(\"Deleting Event\", this.state.event.Id);\n\n        deleteEvent(this.state.waToken, this.state.event.Id, (data) => {console.log(\"DELETE RESULT\", data)});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n        console.log(\"CAL VIEW\", this.state.member);\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <div className=\"form-group\" style={{'text-align':'center'}}>\n                             <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             <Button xs btnStyle=\"danger\" onClick={() => this.handleDelete()}>Delete Event</Button>\n                         </div>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Event Id: </label>\n                                {this.state.event.Id}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    config={editorConfiguration}\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                            let details = this.state.event.Details;\n                                            details.DescriptionHtml = editor.getData();\n                                            this.setState({event: {...this.state.event, Details: details}});\n                                        }\n                                    }\n                                />\n                            </div>\n\n                            <div className=\"form-group button\" style={{'text-align':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Save Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    handleStartChange = async (dt) => {\n        await this.setState({date: {...this.state.date, date: dt}});\n    }\n\n}\n\n","import React, {Component} from 'react';\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {createEvent} from \"../../utils/WildApricotEvents\";\nimport {emptyEvent} from \"../EventCommon\";\nimport \"./EventCreator.css\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {createInitialRegistrationForEvent} from \"../../utils/WildApricotRegistrations\";\nimport {Button} from \"react-bootstrap-buttons\";\n\nexport default class EventCreator extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        let theEvent = Object.assign({}, this.state.event);\n        theEvent.StartDate = theEvent.StartDate.toISOString();\n        theEvent.EndDate = theEvent.EndDate.toISOString();\n        console.log(\"SAVING EVENT\", this.state, theEvent);\n        createEvent(this.state.waToken, theEvent, (data) => {\n            console.log(\"CREATE RESULT\", data);\n            createInitialRegistrationForEvent(this.state.waToken, data, this.state.member.id, (data)=> {console.log(\"INITIAL REG\", data)});\n        });\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        console.log(\"STATE\",this.state);\n        if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            this.setState({event: {...this.state.event, StartDate: new  Date(new Date(this.state.eventInfo.date).setHours(8,0,0))}})\n            this.setState({event: {...this.state.event, EndDate: new  Date(new Date(this.state.eventInfo.date).setHours(20,0,0))}})\n        } else {\n            this.setState({event: {...this.state.event, StartDate: null}})\n            this.setState({event: {...this.state.event, EndDate: null}})\n        }\n        this.setState({fetch:false});\n        console.log('===>state', this.state);\n\n        let details = Object.assign({}, this.state.event.Details)\n         details.Organizer = {\n            Id: this.state.member.id\n        }\n        this.setState({event: {...this.state.event, Details:details}});\n        console.log(\"state\", this.state);\n    }\n\n    startDateHandler(date) {\n        console.log(\"CreatorState-start\", this.state);\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        console.log(\"CreatorState-end\", this.state);\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.event.StartDate !== prevState.event.StartDate || this.state.event.EndDate !== prevState.event.EndDate) {\n            this.render()\n        }\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n        console.log(\"CAL VIEW\", this.state.member);\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <form onSubmit={this.onSubmit}>\n                             <div className=\"form-group\" style={{'text-align':'center'}}>\n                                 <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                        let details = this.state.event.Details;\n                                        details.DescriptionHtml = editor.getData();\n                                        this.setState({event: {...this.state.event, Details: details}});\n                                    } }\n                                />\n                            </div>\n\n                            <div className=\"form-group\" style={{'text-align':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Create Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport EventCalendar from \"./components/event-calendar/EventCalendar\";\nimport EventDisplay from \"./components/event-display/EventDisplay\";\nimport EventEditor from \"./components/event-edit/EventEditor\";\nimport EventCreator from \"./components/event-create/EventCreator\";\n\nexport default class App extends Component {\n    render() {\n\n        return (\n            <Router basename=\"/\">\n                <div className=\"App container-fluid\">\n                    <Switch>\n                        <Route exact path=\"/\" component={EventCalendar}/>\n                        <Route exact path=\"/showEvent\" component={EventDisplay}/>\n                        <Route exact path=\"/editEvent\" component={EventEditor}/>\n                        <Route exact path=\"/createEvent\" component={EventCreator}/>\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\nconst qs = require('querystring');\n\nexport const getAuthTokens = async (cb) => {\n    console.log(\"url\", process.env.REACT_APP_WA_OAUTH_URL);\n    console.log(\"key\", process.env.REACT_APP_WA_API_KEY);\n\n    let basicAuthHeader = 'Basic ' + new Buffer('APIKEY:' + process.env.REACT_APP_WA_API_KEY).toString('base64');\n    let body = {\n        grant_type: 'client_credentials',\n        scope: 'auto',\n        obtain_refresh_token: true\n    };\n\n    const postConfig = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': basicAuthHeader},\n    }\n\n    await axios.post(process.env.REACT_APP_WA_OAUTH_URL, qs.stringify(body), postConfig)\n        .then( (result) => {\n            cb(result.data);\n        })\n        .catch( (err) => {\n            console.log('error', err);\n        });\n}\n\n"],"sourceRoot":""}