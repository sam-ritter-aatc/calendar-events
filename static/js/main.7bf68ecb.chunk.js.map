{"version":3,"sources":["utils/WildApricotConversions.js","utils/WildApricotUtils.js","utils/WildApricotEvents.js","components/EventCommon.js","utils/WildApricotContacts.js","components/event-calendar/EventCalendar.js","components/event-data-loader/EventDataLoader.js","utils/WildApricotRegistrations.js","utils/WildApricotEmailSender.js","components/event-display/EventDisplay.js","components/date-time-range/DateTimeRange.js","components/event-edit/EventEditor.js","components/event-create/EventCreator.js","App.js","serviceWorker.js","index.js","utils/WildApricotOAuthUtils.js"],"names":["convertSingleEvent","waEvent","event","Object","assign","Sessions","eList","forEach","item","e","Id","parentId","Title","StartDate","EndDate","StartTimeSpecified","EndTimeSpecified","isRecurringSession","isOrganizedEvent","Details","Organizer","push","module","exports","Array","isArray","x","makeBaseUrl","token","process","Permissions","AccountId","makeAuthHeader","token_type","access_token","makeHeaders","axios","require","eventsUrl","createEvent","eventObj","cb","a","console","log","method","url","data","headers","then","result","catch","err","updateEvent","eventId","deleteEvent","getEventById","getEvents","startDate","params","$filter","Events","searchForSessionAndAdjustFields","sessionData","sessionId","sess","filter","Number","Name","buildRedirect","path","member","eventInfo","to","pathname","state","firstDateEventsToRetrieve","firstDate","Date","setFullYear","getFullYear","setMonth","getMonth","toISOString","getContact","contactId","id","firstName","FirstName","lastName","LastName","email","Email","displayName","DisplayName","isAdmin","FieldValues","Url","fields","adminField","SystemCode","length","Value","EventCalendar","props","setState","editEvent","isLoggedInUser","handleEventClick","arg","showEvent","handleDateClick","calendarComponentRef","React","createRef","calendarWeekends","waToken","xid","match","queryStringValues","queryString","parse","this","location","search","getAuthTokens","mid","contact","myEvents","eventConvert","map","title","replace","start","end","Tags","backgroundColor","getEventColor","onEventChange","test","indexOf","updateSize","className","defaultView","firstDay","fixedWeekCount","handleWindowResize","contentHeight","height","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","bootstrapPlugin","themeSystem","displayEventTime","selectable","ref","weekends","events","dateClick","eventClick","windowResize","xs","onClick","Component","EventDataLoader","name","type","color","width","registrationsUrl","getRegistrationsForEventId","createInitialRegistrationForEvent","userId","regTypeId","getRegistrationTypesForEvent","updateRegistrationTypeForEvent","sendRegistrationForEvent","registerUserForEventId","regType","createRegistration","unregisterFromEvent","regId","updateRegistration","reg","updatedReg","memberId","message","numGuests","RegistrationDate","dateRegistered","regTypeUpdate","createRegistrationTypeUpdateRecord","msg","makeEmailUrl","sendEmail","recipArray","subject","text","makeMessage","Subject","Body","Recipients","processRecipients","EventId","recip","Type","EventDisplay","fetch","organizer","modalToggle","rsvpMessage","rsvpModalTitle","modalTextBoxType","toggle","bind","onChangeRsvpMessage","history","getEvent","regArray","convertRegistrationData","registrations","extendedProps","Contact","Event","Memo","GuestRegistrationsSummary","NumberOfGuests","undefined","isUserEventOrganizer","findRegistrationByRegId","updateRegistrationInState","registration","messageSubject","memberMessage","toLocaleString","target","value","TotalDue","TotalPaid","index","key","regData","calendarViewClick","canEdit","btnStyle","handleEditClick","handleMessagingClick","notAlreadyRegistered","canRegisterForEvent","handleRegisterClick","handleUnRegisterClick","handleAddGuest","addMessageModal","Location","renderHTML","DescriptionHtml","scope","renderRegistrationData","Modal","show","onHide","size","backdrop","aria-labelledby","centered","Header","closeButton","onChange","Footer","handleSendMessage","handleAddMessage","registerLocale","enGB","setDefaultLocale","DateTimeRange","endDate","maxDate","setHours","minDate","onChangeStartDate","onChangeStartTime","onChangeEndTime","date","newDate","getDate","getHours","getMinutes","myEndDate","getTime","onChangeEndDate","prevProps","prevState","snapshot","render","dateLabel","selected","placeholderText","startLabel","showTimeSelect","showTimeSelectOnly","timeIntervals","minTime","maxTime","timeCaption","dateFormat","endLabel","editorConfiguration","link","decorators","addTargetToExternalLinks","mode","callback","attributes","rel","EventEditor","handleStartChange","dt","EventType","RegistrationEnabled","RegistrationsLimit","AccessLevel","AccessControl","AvailableForAnyLevel","AvailableForLevels","AvailableForAnyGroup","AvailableForGroups","GuestRegistrationSettings","Enabled","CreateContactMode","isEditing","onSubmit","onChangeEventLocation","onChangeEventName","startDateHandler","endDateHandler","handleDelete","preventDefault","style","config","editor","ClassicEditor","details","getData","EventCreator","theEvent","App","handleEventsChange","basename","exact","component","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister","error","qs","basicAuthHeader","Buffer","toString","body","grant_type","obtain_refresh_token","stringify"],"mappings":"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","file":"static/js/main.7bf68ecb.chunk.js","sourcesContent":["\nconst eventConvert = (waEvent) => {\n    let eList = [];\n    if( Array.isArray(waEvent)) {\n        waEvent.forEach((item) => {\n            let x = convertSingleEvent(item);\n            if( Array.isArray(x)) {\n                x.forEach((item) => {\n                    eList.push(item);\n                })\n            } else {\n                eList.push(x);\n            }\n        });\n    } else {\n        eList.push(convertSingleEvent(waEvent));\n    }\n    return eList;\n}\n\nconst convertSingleEvent = (waEvent) => {\n    let event = Object.assign({}, waEvent) ;\n\n    if ( waEvent.Sessions ) {\n        let eList = [];\n        waEvent.Sessions.forEach((item) => {\n            let e = Object.assign({}, event);\n            e.Id = item.Id;\n            e.parentId = event.Id;\n            e.Title = item.Title;\n            e.StartDate = item.StartDate;\n            e.EndDate = item.EndDate;\n            e.StartTimeSpecified = item.StartTimeSpecified;\n            e.EndTimeSpecified = item.EndTimeSpecified;\n            e.isRecurringSession = true;\n            e.isOrganizedEvent = item.Details && item.Details.Organizer;\n            delete e.Sessions\n            eList.push(e);\n        })\n        return eList;\n    } else {\n        return event;\n    }\n}\nmodule.exports = eventConvert;","\nexport const makeBaseUrl = (token) => {\n    // console.log(\"TOKEN\", token)\n    return process.env.REACT_APP_WA_BASE_URL + '/accounts/' + token.Permissions[0].AccountId;\n}\n\nexport const makeAuthHeader = (token) => {\n    return token.token_type + ' ' +token.access_token;\n}\n\nexport const makeHeaders = (token) => {\n    return {\n        'Content-Type': 'application/json',\n        'Authorization': makeAuthHeader(token)\n     }\n}","import {makeBaseUrl, makeHeaders} from \"./WildApricotUtils\";\nconst axios = require('axios');\n\nconst eventsUrl = (token) => {\n    return makeBaseUrl(token)+'/events';\n}\n\nexport const createEvent = async (token, eventObj, cb) => {\n    console.log(\"creating new event\", eventObj);\n    await axios( {\n        method: 'POST',\n        url: eventsUrl(token),\n        data: eventObj,\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({err});\n        })\n}\n\nexport const updateEvent = async (token, eventId, eventObj, cb) => {\n    console.log(\"creating new event\", eventObj);\n    await axios({\n        method: 'PUT',\n        url: eventsUrl(token)+'/'+eventId,\n        data: eventObj,\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({err});\n        })\n}\n\nexport const deleteEvent = async (token, eventId, cb) => {\n    console.log(\"deleting event\", eventId);\n    await axios({\n        method: 'DELETE',\n        url: eventsUrl(token)+'/'+eventId,\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({err});\n        })\n}\n\nexport const getEventById = async (token, eventId, cb) => {\n    // console.log(\"getEventById\", eventId);\n    await axios({\n        url: eventsUrl(token)+'/'+eventId,\n        method: 'GET',\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({});\n        })\n}\n\nexport const getEvents = async (token, startDate, cb) => {\n    await axios({\n        method: 'GET',\n        url: eventsUrl(token),\n        headers: makeHeaders(token),\n        params: {\n            $filter: \"StartDate ge \"+startDate\n        }\n    })\n        .then((result) => {\n            cb(result.data.Events);\n        })\n        .catch((err) => {\n            cb([]);\n        });\n};\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const memberEventTag = () => {\n    return 'member-event'\n}\nexport const searchForSessionAndAdjustFields = (sessionData, sessionId) => {\n    let e = Object.assign({}, sessionData);\n\n    let sess = sessionData.Sessions.filter(x => x.Id === Number(sessionId));\n    // console.log(\"foundSession\", sess);\n    if (sess) {\n        e.sessionId = sess[0].Id;\n        e.Name = sess[0].Title;\n        e.StartDate = sess[0].StartDate;\n        e.EndDate = sess[0].EndDate;\n    }\n    // console.log(\"theEvent\", e);\n    return e;\n}\n\nexport const calendarViewClick = () => {\n    this.props.history.push(`/?mid=${this.state.member.id}`);\n    console.log(\"CAL VIEW\", this.state.member);\n}\n\nexport const redirect = (path) => {\n    return <Redirect to={{pathname: path}} push />\n}\n\nexport const buildRedirect = (path, member, eventInfo) => {\n    return <Redirect to={{\n        pathname: path,\n        state: {\n            member: member,\n            eventInfo: eventInfo\n        }\n    }} push/>\n}\n\nexport const emptyEvent = () => {\n    return {\n        EventType: 'Rsvp',\n        StartDate: '',\n        EndDate: '',\n        Location: '',\n        RegistrationEnabled: true,\n        EndTimeSpecified: true,\n        RegistrationsLimit: 300,\n        Tags: [memberEventTag()],\n        AccessLevel: 'Public',\n        Details: {\n            DescriptionHtml: '',\n            Organizer: {\n                Id: 0,\n            },\n            AccessControl: {\n                AccessLevel: \"Public\",\n                AvailableForAnyLevel: false,\n                AvailableForLevels: [],\n                AvailableForAnyGroup: false,\n                AvailableForGroups: []\n            },\n            GuestRegistrationSettings: {\n                Enabled: true,\n                CreateContactMode: \"NeverCreateContact\"\n            }\n        },\n        Name: ''\n    }\n}\n\nexport const baseRegistration = (contactId, eventId, message) => {\n    return {\n        Event: {\n            Id: eventId\n        },\n        \"Contact\": {\n            \"Id\" : contactId\n        },\n        \"RegistrationTypeId\": 5895025,\n        \"GuestRegistrationsSummary\": {\n            \"NumberOfGuests\": 0,\n            \"NumberOfGuestsCheckedIn\": 0\n        },\n        \"IsCheckedIn\": false,\n        \"ShowToPublic\": true,\n        \"RegistrationDate\": new Date().toDateString(),\n        \"Memo\": message,\n        \"RecreateInvoice\": false\n    }\n}\n\n\nexport const firstDateEventsToRetrieve = () => {\n    let firstDate = new Date();\n    firstDate.setFullYear(firstDate.getFullYear() - 1);\n    firstDate.setMonth(firstDate.getMonth() - 6);\n\n    console.log(\"FIRST DATE\", firstDate)\n\n    return firstDate.toISOString()\n}\n","import {makeBaseUrl, makeHeaders} from \"./WildApricotUtils\";\n\nconst axios = require('axios');\n\nexport const getContact = async (token, contactId, cb) => {\n    await axios({\n        method: 'GET',\n        url: makeBaseUrl(token) + '/contacts/' + contactId,\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            let e = {};\n\n            e.id = result.data.Id;\n            e.firstName = result.data.FirstName;\n            e.lastName = result.data.LastName;\n            e.email = result.data.Email;\n            e.displayName = result.data.DisplayName;\n            e.isAdmin = isAdmin(result.data.FieldValues);\n            e.url = result.data.Url;\n\n            cb(e);\n        })\n        .catch((err) => {cb(null);})\n}\n\nconst isAdmin = (fields) => {\n    let adminField = fields.filter(x => x.SystemCode === 'AdminRole');\n    return adminField.length>0 && adminField[0].Value.length > 0;\n}","import React, {Component} from 'react';\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEvents} from '../../utils/WildApricotEvents';\nimport eventConvert from '../../utils/WildApricotConversions';\nimport {buildRedirect,memberEventTag,firstDateEventsToRetrieve} from \"../EventCommon\";\n\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport listPlugin from '@fullcalendar/list';\nimport queryString from 'query-string';\nimport {Button} from \"react-bootstrap-buttons\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\n\nimport \"./EventCalendar.css\";\n\nexport default class EventCalendar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.calendarComponentRef = React.createRef()\n\n        this.state = {\n            member: {id: 0, isAdmin: false},\n            calendarWeekends: true,\n            waToken: {},\n            showEvent: false,\n            editEvent: false,\n            xid: props.match.params.xid,\n            isLoggedInUser: false\n        }\n    }\n\n\n    async componentDidMount() {\n        const queryStringValues = queryString.parse(this.props.location.search);\n        // console.log(\"QUERY_PARAMS\", this.props.location.search,queryStringValues);\n\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        if ( queryStringValues.mid && queryStringValues.mid !== \"0\") {\n            await getContact(this.state.waToken, queryStringValues.mid, (contact) => {this.setState({member: contact})})\n            // console.log(\"Retrieve Member\", this.state.member);\n            this.setState({isLoggedInUser:true})\n        }\n        await getEvents(this.state.waToken, firstDateEventsToRetrieve(), (data) => {\n            var myEvents = eventConvert(data).map((event) => {\n                return {\n                    id: event.Id,\n                    title: event.Name.replace(\"Weekly Workout - \", \"\")\n                        .replace(\"Weekly Workout- \",\"\"),  // shorten string in event\n                    start: event.StartDate,\n                    end: event.EndDate,\n                    Url: event.Url,\n                    Tags: event.Tags,\n                    backgroundColor: this.getEventColor(event),\n                    parentId: event.parentId\n                }\n            });\n            this.props.onEventChange(myEvents);\n        });\n    }\n\n    getEventColor(event) {\n        if ( /Race/.test(event.Name) ) {\n            return 'red'\n        } else if ( event.Tags && event.Tags.indexOf(memberEventTag())> -1) {\n             return 'green'\n        }\n        return 'blue';\n    }\n\n    handleWindowResize(arg) {\n        console.log(\"RESIZE\", arg);\n        arg.updateSize();\n    }\n\n    createEvent = () => {\n        this.setState({editEvent: this.state.isLoggedInUser, eventInfo: {}})\n    }\n\n    handleEventClick = (arg) => {\n        // console.log(\"going to event\", arg);\n        this.setState({showEvent: true, eventInfo: arg});\n    }\n\n    handleDateClick = (e) => {\n        // console.log(\"DATE CLICKED\", e);\n        this.setState({editEvent: this.state.isLoggedInUser, eventInfo: e});\n    }\n\n    render() {\n        if (this.state.showEvent) {\n            return buildRedirect('showEvent', this.state.member, this.state.eventInfo);\n        }\n        if (this.state.editEvent) {\n            return buildRedirect('createEvent', this.state.member, this.state.eventInfo);\n        }\n        return (\n            <div className='EventCalendar'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    firstDay={1}\n                    fixedWeekCount={false}\n                    handleWindowResize={true}\n                    contentHeight='auto'\n                    height='auto'\n                    // aspectRatio={3}\n                    header={{\n                        left: 'prev today next',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,listMonth'\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, bootstrapPlugin]}\n                    themeSystem=\"bootstrap\"\n                    displayEventTime={true}\n                    selectable={true}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={this.props.events}\n                    dateClick={this.handleDateClick}\n                    eventClick={this.handleEventClick}\n                    windowResize={this.handleWindowResize}\n                />\n                {this.state.isLoggedInUser ? <Button xs onClick={this.createEvent}>Create Event</Button> : <div> </div> }\n            </div>\n        )\n    }\n}","import React,{Component} from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class EventDataLoader extends Component {\n    render() {\n        return (\n            <div className='loader'>\n                <h1>{this.props.name}</h1>\n                <h2>Loading</h2>\n                <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\"/>\n            </div>);\n    }\n}","import {makeBaseUrl, makeHeaders} from \"./WildApricotUtils\";\nconst axios = require('axios');\n\nconst registrationsUrl = (token) => {\n    return makeBaseUrl(token)+'/eventregistrations';\n}\n\nexport const getRegistrationsForEventId = async (token, eventId, cb) => {\n    await axios({\n        method: 'GET',\n        url: registrationsUrl(token)+'?eventId='+eventId,\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({err });\n        })\n}\n\nexport const createInitialRegistrationForEvent = async (token, eventId, userId, cb) => {\n    let regTypeId = null;\n    await getRegistrationTypesForEvent(token, eventId, (data) => {\n        regTypeId = data[0].Id;\n    });\n    await updateRegistrationTypeForEvent(token, regTypeId, eventId, (data) => {\n        console.log(\"updated registration type\", data);\n    });\n    await sendRegistrationForEvent(token, eventId, userId, regTypeId, cb);\n}\n\nexport const registerUserForEventId = async (token, eventId, userId, cb) => {\n    console.log(\"registering user for event\", eventId, userId);\n    let regType = null;\n    await getRegistrationTypesForEvent(token, eventId,(data) => {\n        regType = data[0].Id;\n    })\n    await sendRegistrationForEvent(token, eventId, userId, regType, cb)\n}\n\nconst sendRegistrationForEvent = async (token, eventId, userId, regType, cb) => {\n    await axios({\n        method: 'POST',\n        url: registrationsUrl(token),\n        data: createRegistration(eventId, userId, '', 0, regType),\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({err});\n        })\n}\n\nexport const unregisterFromEvent = async (token, regId, cb) => {\n    console.log(\"unregistering\", regId);\n    await axios({\n        method: 'DELETE',\n        url: registrationsUrl(token)+'/'+regId,\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({err});\n        })\n}\n\nexport const updateRegistration = async (token, reg, cb) => {\n    let updatedReg = createRegistration(reg.eventId, reg.memberId, reg.message, reg.numGuests);\n    updatedReg.Id = reg.regId;\n    updatedReg.RegistrationDate = reg.dateRegistered;\n\n    await axios({\n        method: 'PUT',\n        url: registrationsUrl(token)+'/'+ reg.regId,\n        data: updatedReg,\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({err});\n        })\n}\n\nconst getRegistrationTypesForEvent = async (token, eventId, cb) => {\n    await axios({\n        method: 'GET',\n        url: makeBaseUrl(token)+'/EventRegistrationTypes?eventId='+eventId,\n        headers: makeHeaders(token)\n    })\n        .then( (result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({err});\n        })\n}\n\nconst updateRegistrationTypeForEvent = async (token, regTypeId, eventId, cb) => {\n    let regTypeUpdate = createRegistrationTypeUpdateRecord(regTypeId, eventId);\n    await axios({\n        method: 'PUT',\n        url: makeBaseUrl(token)+'/EventRegistrationTypes/'+regTypeId,\n        data: regTypeUpdate,\n        headers: makeHeaders(token)\n    })\n        .then( (result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({err});\n        })\n}\n\nconst createRegistration = (eventId, userId, msg, numGuests, regType) => {\n    return {\n        \"Event\": {\n            \"Id\": eventId\n        },\n        \"Contact\": {\n            \"Id\" : userId\n        },\n        \"RegistrationTypeId\": regType,\n        \"GuestRegistrationsSummary\": {\n            \"NumberOfGuests\": numGuests,\n            \"NumberOfGuestsCheckedIn\": 0\n        },\n        \"IsCheckedIn\": false,\n        \"ShowToPublic\": true,\n        \"RegistrationDate\": new Date(),\n        \"Memo\": msg,\n        \"RecreateInvoice\": false\n    }\n}\n\nconst createRegistrationTypeUpdateRecord = (regTypeId, eventId) => {\n    return {\n        \"Id\": regTypeId,\n        \"EventId\": eventId,\n        \"IsEnabled\": true,\n        \"Description\": \"\",\n        \"BasePrice\": 0.0000,\n        \"GuestPrice\": 0.0000,\n        \"UseTaxScopeSettings\": null,\n        \"Availability\": \"Everyone\",\n        \"AvailableForMembershipLevels\": null,\n        \"GuestRegistrationPolicy\": \"NumberOfGuests\",\n        \"CurrentRegistrantsCount\": 0,\n        \"MultipleRegistrationAllowed\": false,\n        \"UnavailabilityPolicy\": \"Undefined\",\n        \"CancellationBehaviour\": \"DoNotAllow\",\n        \"CancellationDaysBeforeEvent\": null,\n        \"IsWaitlistEnabled\": false,\n        \"Name\": \"RSVP\"\n    }\n}","import {makeHeaders} from \"./WildApricotUtils\";\nconst axios = require('axios');\n\nconst makeEmailUrl = (token) => {\n    return 'https://cors-anywhere.herokuapp.com/https://api.wildapricot.org/v2.2/rpc/' + token.Permissions[0].AccountId + '/email/SendEmail';\n}\n\nexport const sendEmail = async (token, eventId, recipArray, subject, text, cb) => {\n    // let msg = makeMessage(eventId,recipArray,subject, text);\n    await axios({\n        method: 'POST',\n        url: makeEmailUrl(token),\n        data: makeMessage(eventId, recipArray, subject, text),\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            cb(result.data);\n        })\n        .catch((err) => {\n            cb({err});\n        })\n\n}\n\nconst makeMessage = (eventId, recipArray, subject, text) => {\n    return {\n        Subject: subject,\n        Body: text,\n        Recipients: processRecipients(recipArray),\n        EventId: eventId\n    }\n}\n\nconst processRecipients = (recipArray) => {\n    let recipients = recipArray.map((recip) => {\n        return {\n            Id: recip.memberId,\n            Type: \"IndividualContactRecipient\"\n        }\n    });\n\n    return recipients;\n}\n","import React, {Component} from 'react';\nimport {Button} from 'react-bootstrap-buttons';\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEventById} from \"../../utils/WildApricotEvents\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport {searchForSessionAndAdjustFields, buildRedirect} from \"../EventCommon\";\nimport {getRegistrationsForEventId, registerUserForEventId, unregisterFromEvent, updateRegistration} from \"../../utils/WildApricotRegistrations\";\nimport {sendEmail} from \"../../utils/WildApricotEmailSender\";\nimport renderHTML from \"react-render-html\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./EventDisplay.css\";\n\nexport default class EventDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetch: true,\n            eventId: '',\n            waToken: {},\n            url: '',\n            event: null,\n            organizer: null,\n            modalToggle: false,\n            rsvpMessage: \"\",\n            rsvpModalTitle: \"\",\n            modalTextBoxType: \"\"\n        }\n        this.toggle = this.toggle.bind(this);\n        this.onChangeRsvpMessage = this.onChangeRsvpMessage.bind(this);\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    toggle() {\n        this.setState({modalToggle:!this.state.modalToggle});\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        // console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        // recurring event\n        await this.getEvent();\n        await getRegistrationsForEventId(this.state.waToken, this.state.eventInfo.event.id, (data) => {\n            let regArray = data.map((reg) => this.convertRegistrationData(reg))\n            this.setState({registrations: regArray});\n        })\n        this.setState({fetch:false});\n        // console.log('state', this.state);\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.waToken, this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n                // console.log(\"=====ORG\", data, this.state.organizer);\n            });\n            // console.log(\"contact\", this.state.organizer);\n        }\n        // console.log(\"state\", this.state);\n        // console.log(\"CAN EDIT\", this.canEdit());\n    }\n\n    async getEvent() {\n        if (this.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n            await getEventById(this.state.waToken, this.state.eventInfo.event.extendedProps.parentId, (data) => {\n                this.setState({event: searchForSessionAndAdjustFields(data, this.state.eventInfo.event.id),});\n            });\n        } else {\n            await getEventById(this.state.waToken, this.state.eventInfo.event.id, (data) => {\n                this.setState({event: data});\n            });\n        }\n\n    }\n\n    convertRegistrationData(reg) {\n        // console.log(\"CONVERT REG\", reg);\n        return {\n            regId: reg.Id,\n            memberId: reg.Contact.Id,\n            eventId: reg.Event.Id,\n            name: reg.DisplayName,\n            message: reg.Memo,\n            numGuests: reg.GuestRegistrationsSummary && reg.GuestRegistrationsSummary.NumberOfGuests ? reg.GuestRegistrationsSummary.NumberOfGuests : 0,\n            dateRegistered: reg.RegistrationDate\n        }\n    }\n\n    handleEditClick() {\n        this.setState({editEvent: true});\n    }\n\n    canEdit() {\n        return  this.state.member && this.state.eventInfo.event.extendedProps.parentId === undefined && (\n            this.state.member.isAdmin || this.isUserEventOrganizer()\n        )\n    }\n\n    isUserEventOrganizer() {\n        return this.state.event.Details && this.state.event.Details.Organizer && this.state.member.id === this.state.event.Details.Organizer.Id;\n    }\n\n    notAlreadyRegistered() {\n        return this.state.member && this.state.registrations.filter( x => this.state.member.id === x.memberId).length === 0\n    }\n\n    async handleRegisterClick() {\n        await registerUserForEventId(this.state.waToken, this.state.event.Id, this.state.member.id, (data) => {\n            console.log(\"registration response\", data);\n            this.setState( state => {\n                const registrations = [this.convertRegistrationData(data), ...state.registrations];\n                return {\n                    registrations\n                }\n            });\n        });\n    }\n\n    async handleUnRegisterClick(regId) {\n        await unregisterFromEvent(this.state.waToken, regId, (data) => {});\n        this.setState( state => {\n            const registrations = state.registrations.filter(reg => reg.regId !== regId);\n            return {\n                registrations\n            }\n        })\n    }\n\n    async handleAddGuest(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        reg.numGuests = reg.numGuests+1;\n        await updateRegistration(this.state.waToken, reg, (data) => {\n            // console.log(\"ADDED GUEST\", data);\n            this.updateRegistrationInState(reg, data);\n        });\n        // console.log(\"STATE\", this.state);\n    }\n\n    async handleAddMessage() {\n        let reg = Object.assign({}, this.state.registration);\n        reg.message = this.state.rsvpMessage;\n\n        await updateRegistration(this.state.waToken, reg, (data)=> {\n            // console.log(\"DATA from add MEssage\", data);\n            this.updateRegistrationInState(reg, data);\n        })\n\n        this.setState({registration:null, rsvpMessage:''});\n        this.toggle();\n        // console.log(\"SAVED MESSAGE\");\n    }\n\n    async handleMessagingClick() {\n        await this.setState({rsvpModalTitle: \"Message to RSVP Contacts\", modalTextBoxType: \"textarea\"})\n        this.toggle();\n    }\n\n    async handleSendMessage() {\n        sendEmail(this.state.waToken, this.state.event.Id, this.state.registrations, this.messageSubject(), this.memberMessage(),(data)=>console.log(data));\n        await this.setState({\n            rsvpModalTitle: '',\n            rsvpMessage: '',\n            modalTextBoxType: \"text\"\n        });\n        this.toggle();\n    }\n    messageSubject() {\n        return \"Event Update: \"+this.state.event.Name+ \"  \"+ new Date(this.state.event.StartDate).toLocaleString();\n    }\n    memberMessage() {\n        return \"<html><body>This is concerning the event you RSVP'd to on: \"+new Date(this.state.event.StartDate).toLocaleString()+\"<h2>\"+this.state.event.Name\n        + \"</h2><p><h3><u>Message from the event organizer</u>:</h3>\"+ this.state.rsvpMessage+\"</body></html>\";\n    }\n\n    updateRegistrationInState(reg, data) {\n        this.setState(state => {\n            // console.log(\"REGISTRATION convertedDAta\", this.convertRegistrationData(data));\n            const registrations = state.registrations.map((item) => {\n                return item.regId === reg.regId ? this.convertRegistrationData(data) : item;\n            });\n            // console.log(\"REGISTRATION\", registrations);\n\n            return {\n                registrations\n            };\n        });\n    }\n\n    async addMessageModal(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        await this.setState({registration: reg, rsvpMessage: reg.message, rsvpModalTitle: \"RSVP Message\", modalTextBoxType: \"text\"});\n        this.toggle();\n    }\n\n    onChangeRsvpMessage(x) {\n        this.setState({rsvpMessage: x.target.value});\n    }\n\n    findRegistrationByRegId(regId) {\n        let regArray = this.state.registrations.filter(reg => reg.regId === regId);\n        if (regArray.length === 1) {\n            return regArray[0];\n        } else {\n            return null;\n        }\n    }\n    canRegisterForEvent() {\n        // console.log(\"CHECKING IF CAN REGISTER\", this.state.event);\n        if (this.state.event.Details.TotalDue === 0 && this.state.event.Details.TotalPaid === 0 && this.state.member.id !== 0) {\n            return true;\n        }\n        return false;\n    }\n\n    renderRegistrationData() {\n        return this.state.registrations.map( (reg, index) => {\n            const { regId, name, message, numGuests /*, dateRegistered */} = reg;\n            return <tr key={regId}>\n                {/*<td>{regId}</td>*/}\n                <td>{name}</td>\n                <td>{numGuests}</td>\n                {/*<td>{dateRegistered}</td>*/}\n                <td>{message}</td>\n            </tr>\n        })\n    }\n\n    render() {\n        // console.log(\"STATE\", this.state);\n        let regData = this.state.registrations ? this.state.registrations.filter(reg => reg.memberId === this.state.member.id):[];\n\n        if (this.state.fetch) {\n            return (<EventDataLoader name={this.props.location.state.name}/>);\n        } else if (this.state.editEvent) {\n            return buildRedirect('editEvent', this.state.member, this.state.eventInfo);\n        } else {\n            return (\n                <div>\n                    <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                    {this.canEdit() && <Button xs btnStyle=\"primary\" onClick={() => this.handleEditClick()}>Edit Event</Button>}\n                    {this.canEdit() && <Button xs btnStyle=\"warning\" onClick={() => this.handleMessagingClick()}>Message RSVPd Members</Button>}\n                    {this.notAlreadyRegistered() && this.canRegisterForEvent() && <Button xs btnStyle=\"success\" onClick={() => this.handleRegisterClick()}>RSVP</Button>}\n                    {regData.length===1 && !this.isUserEventOrganizer() && <Button xs btnStyle=\"danger\" onClick={() => this.handleUnRegisterClick(regData[0].regId) }>Unregister</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.handleAddGuest(regData[0].regId)}>Add Guest</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.addMessageModal(regData[0].regId)}>Add/Edit Comment</Button> }\n\n                    <h2>{this.state.event.Name}</h2>\n                    <div className=\"event_id\">\n                        <label>Event Id: </label>&nbsp;&nbsp;\n                        {this.state.event.Id}\n                    </div>\n                    <div className=\"event-title\">\n                        <label>Event Name: </label>&nbsp;&nbsp;\n                        {this.state.event.Name}\n                    </div>\n                    <div className=\"event-start\">\n                        <label>Event Start Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.StartDate).toLocaleString()}\n                    </div>\n                    <div className=\"event-end\">\n                        <label>Event End Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.EndDate).toLocaleString()}\n                    </div>\n                    <div className=\"location\">\n                        <label>Event Location: </label>&nbsp;&nbsp;\n                        {this.state.event.Location}\n                    </div>\n\n                    {this.state.organizer && <div className=\"organizer\">\n                        <label>Organizer: </label>&nbsp;&nbsp;\n                        {this.state.organizer.displayName + '(' + this.state.organizer.email + ')'}\n                    </div>}\n\n                    <div className=\"descriptionHtml\">\n                        <label>Description: </label><br/>&nbsp;&nbsp;\n                        <div>{renderHTML(this.state.event.Details.DescriptionHtml)}</div>\n                    </div>\n\n                    <div className=\"registrations\">\n                        <label>Registrations: </label><br/>\n                        <table id='registrations' className=\"table-striped\">\n                            <tbody>\n                                <tr>\n                                    {/*<th scope=\"col\">Registration Id</th>*/}\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">#Guests</th>\n                                    {/*<th scope=\"col\">Date Registered</th>*/}\n                                    <th scope=\"col\">Comments</th>\n                                </tr>\n                                {this.renderRegistrationData()}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <Modal\n                        show={this.state.modalToggle}\n                        onHide={this.toggle}\n                        size=\"lg\"\n                        backdrop=\"static\"\n                        aria-labelledby=\"contained-modal-title-vcenter\"\n                        centered\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\n                                {this.state.rsvpModalTitle}\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <h4>Please enter your message:</h4>\n                            <p>\n                                {this.state.modalTextBoxType==='textarea' ? <textarea\n                                        value={this.state.rsvpMessage}\n                                        className=\"form-control\"\n                                        onChange={this.onChangeRsvpMessage}\n                                    />\n                                    :\n                                    <input type=\"text\"\n                                       value={this.state.rsvpMessage}\n                                       className=\"form-control\"\n                                       onChange={this.onChangeRsvpMessage}\n                                       />\n                                    }\n                            </p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button xs btnStyle=\"danger\" onClick={this.toggle}>Cancel</Button>\n                            {this.state.modalTextBoxType === 'textarea' ?\n                                <Button xs onClick={() => this.handleSendMessage()}>Send Message</Button>\n                                :\n                                <Button xs onClick={() => this.handleAddMessage()}>Save</Button>\n                            }\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            );\n        }\n    }\n}","import React, {Component} from 'react';\nimport DatePicker from 'react-datepicker';\nimport {registerLocale, setDefaultLocale} from \"react-datepicker\";\nimport \"./DateTimeRange.css\";\nimport enGB from \"date-fns/locale/en-GB\";\n\nregisterLocale(\"en-GB\", enGB);\n\nsetDefaultLocale(\"en-GB\")\n\nexport default class DateTimeRange extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            startDate: this.props.startDate != null ? new Date(this.props.startDate) : null,\n            endDate: this.props.endDate != null ? new Date(this.props.endDate) : null,\n            maxDate: this.props.endDate ? new Date(new Date(this.props.endDate).setHours(23, 59, 59)) : null,\n            minDate: this.props.startDate ? new Date(new Date(this.props.startDate).setHours(0, 0, 0)) : null,\n        }\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeStartTime = this.onChangeStartTime.bind(this);\n        this.onChangeEndTime = this.onChangeEndTime.bind(this);\n    }\n\n    async onChangeStartDate(date) {\n        let newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes());\n        if (this.props.endDate === null) {\n            let myEndDate = new Date(newDate.getTime());\n            await this.setState({endDate: new Date(myEndDate.setHours(23, 59, 59, 0))});\n        }\n        await this.setState({\n            startDate: newDate,\n            endDate: new Date(this.state.endDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate())),\n            minDate: new Date(date.setHours(0, 0, 0, 0)),\n            maxDate: new Date(date.setHours(23, 59, 59, 0)),\n        });\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    async onChangeStartTime(date) {\n        if (this.state.endDate < this.state.startDate) {\n            await this.setState({\n                startDate: date,\n                endDate: date\n            })\n        } else {\n            await this.setState({startDate: date});\n        }\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    onChangeEndTime(date) {\n        this.setState({endDate: date})\n        this.props.onChangeEndDate(date);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.startDate !== prevState.startDate || this.state.endDate !== prevState.endDate) {\n            this.render();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"dateTimeRangeSelector\">\n                <div className=\"dateTimeRangeSelector-date\">\n                    <label>{this.props.dateLabel}</label>\n                    <DatePicker\n                        selected={this.props.startDate}\n                        placeholderText=\"Click to select a date\"\n                        onChange={date => this.onChangeStartDate(date)}\n                    />\n                </div>\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-start\">\n                            <label>{this.props.startLabel}</label>\n                            <DatePicker\n                                selected={this.props.startDate}\n                                onChange={date => this.onChangeStartTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.minDate}\n                                maxTime={this.state.endDate}\n                                timeCaption=\"Start Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n                        </div> : <div /> }\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-end\">\n                            <label>{this.props.endLabel}</label>\n                            <DatePicker\n                                selected={this.props.endDate}\n                                onChange={date => this.onChangeEndTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.startDate}\n                                maxTime={this.state.maxDate}\n                                timeCaption=\"End Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n\n                        </div>\n                    : <div/>}\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEventById, updateEvent, deleteEvent} from \"../../utils/WildApricotEvents\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {emptyEvent, searchForSessionAndAdjustFields} from \"../EventCommon\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {Button} from \"react-bootstrap-buttons\";\n\nimport \"./EventEditor.css\";\n\nconst editorConfiguration = {\n    link: {\n        link: {\n            decorators: {\n                addTargetToExternalLinks: {\n                    mode: 'automatic',\n                    callback: url => /^(https?:)?\\/\\//.test( url ),\n                    attributes: {\n                        target: '_blank',\n                        rel: 'noopener noreferrer'\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default class EventEditor extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        // let theEvent = Object.assign({}, this.state.event);\n        // console.log(\"SAVING EVENT\", this.state, theEvent);\n\n        updateEvent(this.state.waToken, this.state.event.Id, this.state.event, (data) => {console.log(\"UPDATE RESULT\", data)})\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        // console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        // console.log(\"STATE\",this.state);\n        // recurring event\n        if (this.state.eventInfo.event && this.state.fetch) {   // user clicked on an event\n            if (this.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n                await getEventById(this.state.waToken, this.state.eventInfo.event.extendedProps.parentId, (data) => {\n                    this.setState({event: searchForSessionAndAdjustFields(data, this.state.eventInfo.event.id)});\n                });\n            } else {\n                await getEventById(this.state.waToken, this.state.eventInfo.event.id, (data) => {\n                    this.setState({event: data});\n                });\n            }\n        } else if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            this.setState({event: {...this.state.event, StartDate: new  Date(this.state.eventInfo.date)}})\n        }\n        this.setState({event:{...this.state.event,StartDate: new Date(this.state.event.StartDate)}});\n        this.setState({event:{...this.state.event,EndDate: new Date(this.state.event.EndDate)}});\n        // console.log('===>state', this.state);\n        this.setState({fetch:false});\n\n        if (this.props.location.state.eventInfo.date) {\n            let maxTime = new Date(this.props.location.state.eventInfo.date.getTime());\n            this.setState({...this.state.event, startDate: this.props.location.state.eventInfo.date});\n            this.setState({...this.state.event, endDate: new Date(maxTime.setHours(23,59,59))});\n        }\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.waToken, this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n                // console.log(\"=====ORG\", data, this.state.organizer);\n            });\n            console.log(\"contact\", this.state.organizer);\n        }\n        // console.log(\"state\", this.state);\n    }\n\n    startDateHandler(date) {\n        // console.log(\"CreatorState\", this.state);\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        // console.log(\"CreatorState\", this.state);\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    handleDelete() {\n        // console.log(\"Deleting Event\", this.state.event.Id);\n\n        deleteEvent(this.state.waToken, this.state.event.Id, (data) => {console.log(\"DELETE RESULT\", data)});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n        // console.log(\"CAL VIEW\", this.state.member);\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <div className=\"form-group\" style={{'text-align':'center'}}>\n                             <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             <Button xs btnStyle=\"danger\" onClick={() => this.handleDelete()}>Delete Event</Button>\n                         </div>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Event Id: </label>\n                                {this.state.event.Id}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    config={editorConfiguration}\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                            let details = this.state.event.Details;\n                                            details.DescriptionHtml = editor.getData();\n                                            this.setState({event: {...this.state.event, Details: details}});\n                                        }\n                                    }\n                                />\n                            </div>\n\n                            <div className=\"form-group button\" style={{'text-align':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Save Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    handleStartChange = async (dt) => {\n        await this.setState({date: {...this.state.date, date: dt}});\n    }\n\n}\n\n","import React, {Component} from 'react';\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {createEvent} from \"../../utils/WildApricotEvents\";\nimport {emptyEvent} from \"../EventCommon\";\nimport \"./EventCreator.css\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {createInitialRegistrationForEvent} from \"../../utils/WildApricotRegistrations\";\nimport {Button} from \"react-bootstrap-buttons\";\n\nexport default class EventCreator extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        let theEvent = Object.assign({}, this.state.event);\n        theEvent.StartDate = theEvent.StartDate.toISOString();\n        theEvent.EndDate = theEvent.EndDate.toISOString();\n        console.log(\"SAVING EVENT\", this.state, theEvent);\n        createEvent(this.state.waToken, theEvent, (data) => {\n            console.log(\"CREATE RESULT\", data);\n            createInitialRegistrationForEvent(this.state.waToken, data, this.state.member.id, (data)=> {console.log(\"INITIAL REG\", data)});\n        });\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        console.log(\"STATE\",this.state);\n        if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            this.setState({event: {...this.state.event, StartDate: new  Date(new Date(this.state.eventInfo.date).setHours(8,0,0))}})\n            this.setState({event: {...this.state.event, EndDate: new  Date(new Date(this.state.eventInfo.date).setHours(20,0,0))}})\n        } else {\n            this.setState({event: {...this.state.event, StartDate: null}})\n            this.setState({event: {...this.state.event, EndDate: null}})\n        }\n        this.setState({fetch:false});\n        console.log('===>state', this.state);\n\n        let details = Object.assign({}, this.state.event.Details)\n         details.Organizer = {\n            Id: this.state.member.id\n        }\n        this.setState({event: {...this.state.event, Details:details}});\n        console.log(\"state\", this.state);\n    }\n\n    startDateHandler(date) {\n        console.log(\"CreatorState-start\", this.state);\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        console.log(\"CreatorState-end\", this.state);\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.event.StartDate !== prevState.event.StartDate || this.state.event.EndDate !== prevState.event.EndDate) {\n            this.render()\n        }\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n        console.log(\"CAL VIEW\", this.state.member);\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <form onSubmit={this.onSubmit}>\n                             <div className=\"form-group\" style={{'text-align':'center'}}>\n                                 <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                        let details = this.state.event.Details;\n                                        details.DescriptionHtml = editor.getData();\n                                        this.setState({event: {...this.state.event, Details: details}});\n                                    } }\n                                />\n                            </div>\n\n                            <div className=\"form-group\" style={{'text-align':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Create Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport EventCalendar from \"./components/event-calendar/EventCalendar\";\nimport EventDisplay from \"./components/event-display/EventDisplay\";\nimport EventEditor from \"./components/event-edit/EventEditor\";\nimport EventCreator from \"./components/event-create/EventCreator\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            events: []\n        }\n    }\n\n    handleEventsChange = (events) => {\n        this.setState({events: events})\n    }\n\n    render() {\n\n        return (\n            <Router basename=\"/\">\n                <div className=\"App container-fluid\">\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <EventCalendar  {...props} onEventChange={this.handleEventsChange} events={this.state.events}/>}/>\n                        <Route exact path=\"/showEvent\" component={EventDisplay}/>\n                        <Route exact path=\"/editEvent\" component={EventEditor}/>\n                        <Route exact path=\"/createEvent\" component={EventCreator}/>\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\nconst qs = require('querystring');\n\nexport const getAuthTokens = async (cb) => {\n    let basicAuthHeader = 'Basic ' + new Buffer('APIKEY:' + process.env.REACT_APP_WA_API_KEY).toString('base64');\n    let body = {\n        grant_type: 'client_credentials',\n        scope: 'auto',\n        obtain_refresh_token: true\n    };\n\n    await axios({\n        method: 'POST',\n        url: process.env.REACT_APP_WA_OAUTH_URL,\n        data: qs.stringify(body),\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': basicAuthHeader},\n    })\n        .then( (result) => {\n            cb(result.data);\n        })\n        .catch( (err) => {\n            console.log('error', err);\n        });\n}\n\n"],"sourceRoot":""}