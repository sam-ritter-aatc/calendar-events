{"version":3,"sources":["utils/WildApricotUtils.js","utils/WildApricotEvents.js","components/event-calendar/EventCalendar.js","components/SwitchableTextInput.js","components/event-data-loader/EventDataLoader.js","utils/WildApricotContacts.js","components/event-display/EventDisplay.js","App.js","serviceWorker.js","index.js","utils/WildAppricotOAuthUtils.js","utils/WildApricotConversions.js"],"names":["makeBaseUrl","token","process","Permissions","AccountId","makeAuthHeader","token_type","access_token","axios","require","getEventById","eventId","cb","a","console","log","url","method","headers","then","result","data","catch","err","getEvents","startDate","get","params","$filter","Events","EventCalendar","props","calendarComponentRef","React","createRef","state","isCreateEvent","isEditing","currentEvent","id","title","description","location","organizer","start","Date","end","events","showCreateModal","calendarWeekends","waToken","modalToggle","setState","editToggle","userCanEdit","eventRsvp","event","alert","saveEvent","concat","Object","assign","idx","findIndex","x","eventsCopy","clearCurrentEvent","handleEventClick","arg","history","push","pathname","parseInt","name","extendedProps","Url","parentId","handleDateClick","e","date","getTime","setDate","getDate","uuid","showModal","createEvent","onChangeEventName","onChangeEventDescription","onChangeLocation","handleStartChange","handleEndChange","bind","getAuthTokens","this","myEvents","eventConvert","map","Id","Name","StartDate","EndDate","Tags","backgroundColor","getEventColor","test","isRecurringSession","className","defaultView","firstDay","fixedWeekCount","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","bootstrapPlugin","themeSystem","displayEventTime","selectable","ref","weekends","dateClick","eventClick","onClick","Component","SwitchableTextInput","data-testid","label","inputFlag","type","value","onChange","target","EventDataLoader","color","height","width","getContact","contactId","firstName","FirstName","lastName","LastName","email","Email","display","DisplayName","EventDisplay","fetch","sess","Sessions","filter","sessionId","Title","eventDetails","Details","Organizer","Location","DescriptionHtml","renderHTML","App","basename","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","qs","basicAuthHeader","Buffer","toString","body","grant_type","scope","obtain_refresh_token","postConfig","post","stringify","convertSingleEvent","waEvent","eList","forEach","item","StartTimeSpecified","EndTimeSpecified","isOrganizedEvent","module","exports","Array","isArray"],"mappings":"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","file":"static/js/main.b2467b69.chunk.js","sourcesContent":["\nexport const makeBaseUrl = (token) => {\n    return process.env.REACT_APP_WA_BASE_URL + '/accounts/' + token.Permissions[0].AccountId;\n}\n\nexport const makeAuthHeader = (token) => {\n    return token.token_type + ' ' +token.access_token;\n}","import {makeAuthHeader, makeBaseUrl} from \"./WildApricotUtils\";\nconst axios = require('axios');\n\nconst eventsUrlPart = '/events';\n\nexport const getEventById = async (token, eventId, cb) => {\n    console.log(\"getEventById\", eventId);\n    await axios({\n        url: makeBaseUrl(token)+eventsUrlPart+'/'+eventId,\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        }\n    })\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n             // return result.data;\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            cb({});\n        })\n}\n\nexport const getEvents = async (token, startDate, cb) => {\n    await axios.get(makeBaseUrl(token)+eventsUrlPart, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        },\n        params: {\n            $filter: \"StartDate ge \"+startDate\n        }\n    })\n        .then((result) => {\n            cb(result.data.Events);\n        })\n        .catch((err) => {\n            console.log(\"Error\", err);\n            cb([]);\n        });\n};\n\n","import React, {Component} from 'react';\n\nimport {getAuthTokens} from \"../../utils/WildAppricotOAuthUtils\";\nimport {getEvents} from '../../utils/WildApricotEvents';\nimport eventConvert from '../../utils/WildApricotConversions';\n\nimport uuid from \"react-uuid\";\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport listPlugin from '@fullcalendar/list';\n\n\nimport \"./EventCalendar.css\";\n\n// import SwitchableTextInput from \"./SwitchableTextInput\";\n// import SwitchableDatePicker from \"./SwitchableDatePicker\";\n// import SwitchableButton from \"./SwitchableButton\";\n\n\nexport default class EventCalendar extends Component {\n    constructor(props) {\n        super(props);\n        // this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.onChangeEventDescription = this.onChangeEventDescription.bind(this);\n        this.onChangeLocation = this.onChangeLocation.bind(this);\n        // this.handleStartChange = this.handleStartChange.bind(this);\n        // this.handleEndChange = this.handleEndChange.bind(this);\n        console.log('result', process.env.REACT_APP_WA_OAUTH_URL);\n    }\n\n    calendarComponentRef = React.createRef()\n\n    state = {\n        isCreateEvent: false,\n        isEditing: false,\n        currentEvent: {\n            id: '',\n            title: '',\n            description: '',\n            location: '',\n            organizer: '',\n            start: new Date(),\n            end: new Date()\n        },\n        events: [],\n        showCreateModal: false,\n        calendarWeekends: true,\n        waToken: {}\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        await getEvents(this.state.waToken, '2019-01-01', (data) => {\n            var myEvents = eventConvert(data).map((event) => {\n                return {\n                    id: event.Id,\n                    title: event.Name,\n                    start: event.StartDate,\n                    end: event.EndDate,\n                    Url: event.Url,\n                    Tags: event.Tags,\n                    backgroundColor: this.getEventColor(event),\n                    parentId: event.parentId\n                }\n            });\n            // console.log(\"myEvents\", myEvents);\n            this.setState({events: myEvents});\n        });\n    }\n\n    getEventColor(event) {\n        if ( /Ironman/.test(event.Name) ) {\n            return 'red'\n        }\n        if ( event.isRecurringSession ) {\n            return 'green';\n        }\n        return 'blue';\n    }\n\n    modalToggle = () => {\n        this.setState({showCreateModal: !this.state.showCreateModal});\n    }\n\n    editToggle = () => {\n        this.setState({isEditing: !this.state.isEditing});\n    }\n\n    render() {\n        return (\n            <div className='EventCalendar'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    firstDay={1}\n                    fixedWeekCount={false}\n                    header={{\n                        left: 'prev today next',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,listMonth'\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, bootstrapPlugin]}\n                    themeSystem=\"bootstrap\"\n                    displayEventTime={true}\n                    selectable={true}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={this.state.events}\n                    dateClick={this.handleDateClick}\n                    eventClick={this.handleEventClick}\n                />\n                <button onClick={this.createEvent}>Create Event</button>\n            </div>\n        )\n    }\n\n    userCanEdit = () => {\n        return true;\n    }\n\n    eventRsvp = (event) => {\n        console.log(\"event rsvp\", this.state.currentEvent);\n        alert(\"you have been registered for event: \" + this.state.currentEvent.title);\n    }\n\n    saveEvent = (event) => {\n        this.modalToggle();\n        console.log(\"saving event\", this.state.currentEvent);\n        if (this.state.isCreateEvent) {\n            this.setState({\n                events: this.state.events.concat(Object.assign({}, this.state.currentEvent))\n            })\n        } else {\n            let idx = this.state.events.findIndex(x => x.id === this.state.currentEvent.id)\n            let eventsCopy = [...this.state.events];\n            eventsCopy[idx] = this.state.currentEvent;\n            this.setState({events: eventsCopy});\n        }\n        this.clearCurrentEvent();\n    }\n\n    clearCurrentEvent = async () => {\n        await this.setState({currentEvent: {}});\n        console.log(\"state\", this.state);\n    }\n\n    handleEventClick = (arg) => {\n        console.log(\"going to event\", arg);\n        this.props.history.push({\n            pathname: '/showEvent',\n            state: {\n                id: parseInt(arg.event.id, 10),\n                name: arg.event.title,\n                url: arg.event.extendedProps.Url,\n                parentId: arg.event.extendedProps.parentId\n            }\n        });\n    }\n\n    handleDateClick = (e) => {\n        this.setState({\n            isCreateEvent: true,\n            isEditing: true,\n            currentEvent: e,\n        });\n        let start = new Date(e.date.getTime());\n        let end = new Date(e.date.getTime());\n        end.setDate(end.getDate() + 1);\n\n        this.setState({\n            currentEvent: {\n                id: uuid(),\n                start: start,\n                end: end\n            }\n        });\n\n        this.showModal(e);\n    }\n\n    createEvent = () => {\n        this.setState({\n            isCreateEvent: true,\n            isEditing: true,\n        });\n        let start = new Date();\n        let end = new Date();\n        end.setDate(end.getDate() + 1);\n\n        this.setState({\n            currentEvent: {\n                id: uuid(),\n                start: start,\n                end: end\n            }\n        });\n\n        this.showModal();\n    }\n\n    showModal = e => {\n        console.log(\"showModal - incoming e\", e);\n\n        this.modalToggle();\n    };\n\n    onChangeEventName = async (e) => {\n        await this.setState({currentEvent: {...this.state.currentEvent, title: e}});\n    }\n    onChangeEventDescription = async (e) => {\n        await this.setState({currentEvent: {...this.state.currentEvent, description: e}});\n    }\n    onChangeLocation = async (e) => {\n        await this.setState({currentEvent: {...this.state.currentEvent, location: e}});\n    }\n\n    handleStartChange = async (date) => {\n        await this.setState({currentEvent: {...this.state.currentEvent, start: date}});\n    }\n\n    handleEndChange = async (date) => {\n        await this.setState({currentEvent: {...this.state.currentEvent, end: date}});\n    }\n}\n","import React, {Component} from 'react';\n\nimport \"./SwitchableInputText.css\";\n\nexport default class SwitchableTextInput extends Component {\n    render() {\n        return (\n            <div data-testid=\"switchable-text-input\" className={this.props.className}>\n                <label>{this.props.label}</label>\n                {this.props.inputFlag ?\n                    <input type=\"text\" className=\"form-control\" value={this.props.value} onChange={(e)=>this.props.onChange(e.target.value)}/> :\n                    this.props.value}\n            </div>\n        );\n    }\n}\n","import React,{Component} from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class EventDataLoader extends Component {\n    render() {\n        return (\n            <div className='loader'>\n                <h1>{this.props.name}</h1>\n                <h2>Loading</h2>\n                <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\"/>\n            </div>);\n    }\n}","import {makeBaseUrl, makeAuthHeader} from \"./WildApricotUtils\";\n\nconst axios = require('axios');\n\nexport const getContact = async (token, contactId, cb) => {\n    await axios.get(makeBaseUrl(token) + '/contacts/' + contactId, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        }\n    })\n        .then((result) => {\n            let e = {};\n\n            e.firstName = result.data.FirstName;\n            e.lastName = result.data.LastName;\n            e.email = result.data.Email;\n            e.display = result.data.DisplayName;\n\n            cb(e);\n        })\n        .catch((err) => {\n            return {};\n        })\n}","import React, {Component} from 'react';\nimport {getAuthTokens} from \"../../utils/WildAppricotOAuthUtils\";\nimport {getEventById} from \"../../utils/WildApricotEvents\";\nimport SwitchableTextInput from \"../SwitchableTextInput\";\nimport renderHTML from 'react-render-html';\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\n\nexport default class EventDisplay extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     console.log(\"display\", props);\n    //\n    // }\n    state = {\n        fetch: true,\n        eventId: '',\n        waToken: {},\n        url: '',\n        event: null,\n        organizer: null,\n    }\n\n\n    async eventDetails() {\n        // recurring event\n        if (this.props.location.state.parentId && this.state.fetch) {\n            await getEventById(this.state.waToken, this.props.location.state.parentId, (data) => {\n                let e = Object.assign({}, data);\n                this.setState({fetch: false});\n                console.log(\"props\", this.props);\n\n                let sess = data.Sessions.filter(x => x.Id === this.props.location.state.id);\n                console.log(\"foundSession\", sess);\n                if (sess) {\n                    e.sessionId = sess[0].Id;\n                    e.Name = sess[0].Title;\n                    e.StartDate = sess[0].StartDate;\n                    e.EndDate = sess[0].EndDate;\n                }\n                console.log(\"theEvent\", e);\n                this.setState({event: e});\n                console.log('state', this.state);\n            });\n        } else {\n            await getEventById(this.state.waToken, this.props.location.state.id, (data) => {\n                this.setState({event: data});\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        console.log(\"unmounting########\");\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"Fetching event data\");\n        await this.eventDetails();\n        // console.log('contact values ->', this.state.event, this.state.event.Details, this.state.event.Details.Organizer);\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.waToken, this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n                console.log(\"=====ORG\", data, this.state.organizer);\n            });\n            console.log(\"contact\", this.state.organizer);\n        }\n        console.log(\"state\", this.state);\n    }\n\n    render() {\n        // console.log(\"eventDisplay\", this.props.location.state);\n        if (this.state.event === null) {\n            return (<EventDataLoader name={this.props.location.state.name}/>);\n        } else {\n            return (\n                <div>\n                    <h2>{this.state.event.Name}</h2>\n                    <SwitchableTextInput className=\"event_id\" label=\"Event Id: \" value={this.state.event.Id}/>\n                    <SwitchableTextInput className=\"event-title\" label=\"Event Name: \" value={this.state.event.Name}/>\n                    <SwitchableTextInput className=\"event-start\" label=\"Event Start Date/Time: \"\n                                         value={this.state.event.StartDate}/>\n                    <SwitchableTextInput className=\"event-end\" label=\"Event End Date/Time: \"\n                                         value={this.state.event.EndDate}/>\n                    <SwitchableTextInput className=\"location\" label=\"Event Location: \"\n                                         value={this.state.event.Location}/>\n                    {this.state.organizer && <SwitchableTextInput className=\"organizer\" label=\"Organizer: \"\n                                                                  value={this.state.organizer.display + '(' + this.state.organizer.email + ')'}/>}\n                    {this.state.event.Details && this.state.event.Details.DescriptionHtml ? <div><h3>Description</h3>\n                        <div>{renderHTML(this.state.event.Details.DescriptionHtml)}</div>\n                    </div> : <div></div>}\n                </div>\n            );\n        }\n    }\n}","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n//import logo from './logo.svg';\nimport './App.css';\nimport EventCalendar from \"./components/event-calendar/EventCalendar\";\nimport EventDisplay from \"./components/event-display/EventDisplay\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HashRouter basename=\"/\">\n            <Route exact path=\"/\" component={EventCalendar} />\n            <Route exact path=\"/showEvent\" component={EventDisplay} />\n        </HashRouter>\n      {/*<EventCalendar />*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\nconst qs = require('querystring');\n\nexport const getAuthTokens = async (cb) => {\n    console.log(\"url\", process.env.REACT_APP_WA_OAUTH_URL);\n    console.log(\"key\", process.env.REACT_APP_WA_API_KEY);\n\n    let basicAuthHeader = 'Basic ' + new Buffer('APIKEY:' + process.env.REACT_APP_WA_API_KEY).toString('base64');\n    let body = {\n        grant_type: 'client_credentials',\n        scope: 'auto',\n        obtain_refresh_token: true\n    };\n\n    const postConfig = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': basicAuthHeader},\n    }\n\n    await axios.post(process.env.REACT_APP_WA_OAUTH_URL, qs.stringify(body), postConfig)\n        .then( (result) => {\n            cb(result.data);\n        })\n        .catch( (err) => {\n            console.log('error', err);\n        });\n}\n\n","\nconst eventConvert = (waEvent) => {\n    let eList = [];\n    if( Array.isArray(waEvent)) {\n        waEvent.forEach((item) => {\n            let x = convertSingleEvent(item);\n            if( Array.isArray(x)) {\n                x.forEach((item) => {\n                    eList.push(item);\n                })\n            } else {\n                eList.push(x);\n            }\n        });\n    } else {\n        eList.push(convertSingleEvent(waEvent));\n    }\n    return eList;\n}\n\nconst convertSingleEvent = (waEvent) => {\n    let event = Object.assign({}, waEvent) ;\n\n    if ( waEvent.Sessions ) {\n        let eList = [];\n        waEvent.Sessions.forEach((item) => {\n            let e = Object.assign({}, event);\n            e.Id = item.Id;\n            e.parentId = event.Id;\n            e.Title = item.Title;\n            e.StartDate = item.StartDate;\n            e.EndDate = item.EndDate;\n            e.StartTimeSpecified = item.StartTimeSpecified;\n            e.EndTimeSpecified = item.EndTimeSpecified;\n            e.isRecurringSession = true;\n            e.isOrganizedEvent = item.Details && item.Details.Organizer;\n            delete e.Sessions\n            eList.push(e);\n        })\n        return eList;\n    } else {\n        return event;\n    }\n}\nmodule.exports = eventConvert;"],"sourceRoot":""}