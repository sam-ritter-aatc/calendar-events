{"version":3,"sources":["utils/WildApricotConversions.js","utils/WildApricotOAuthUtils.js","utils/WildApricotUtils.js","utils/WildApricotEvents.js","components/EventCommon.js","utils/WildApricotContacts.js","components/event-calendar/EventCalendar.js","components/SwitchableTextInput.js","components/event-data-loader/EventDataLoader.js","components/SwitchableHtmlDisplay.js","components/event-display/EventDisplay.js","components/date-time-range/DateTimeRange.js","components/event-edit/EventEditor.js","components/event-create/EventCreator.js","App.js","serviceWorker.js","index.js"],"names":["convertSingleEvent","waEvent","event","Object","assign","Sessions","eList","forEach","item","e","Id","parentId","Title","StartDate","EndDate","StartTimeSpecified","EndTimeSpecified","isRecurringSession","isOrganizedEvent","Details","Organizer","push","module","exports","Array","isArray","x","axios","require","qs","getAuthTokens","cb","a","console","log","process","basicAuthHeader","Buffer","toString","body","grant_type","scope","obtain_refresh_token","postConfig","headers","post","stringify","then","result","data","catch","err","makeBaseUrl","token","Permissions","AccountId","makeAuthHeader","token_type","access_token","makeHeaders","eventsUrl","createEvent","eventObj","updateEvent","eventId","put","deleteEvent","delete","getEventById","url","method","getEvents","startDate","get","params","$filter","Events","searchForSessionAndAdjustFields","sessionData","sessionId","sess","filter","Number","Name","buildRedirect","path","member","eventInfo","to","pathname","state","getContact","contactId","id","firstName","FirstName","lastName","LastName","email","Email","displayName","DisplayName","isAdmin","FieldValues","Url","fields","adminField","SystemCode","length","Value","EventCalendar","calendarComponentRef","React","createRef","events","calendarWeekends","waToken","showEvent","editEvent","setState","handleEventClick","arg","handleDateClick","queryStringValues","queryString","parse","this","props","location","search","firstDate","Date","setFullYear","getFullYear","setMonth","getMonth","mid","contact","toISOString","myEvents","eventConvert","map","title","replace","start","end","Tags","backgroundColor","getEventColor","test","indexOf","className","defaultView","firstDay","fixedWeekCount","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","bootstrapPlugin","themeSystem","displayEventTime","selectable","ref","weekends","dateClick","eventClick","onClick","Component","SwitchableTextInput","data-testid","label","inputFlag","type","value","onChange","target","EventDataLoader","name","color","height","width","displayFlag","renderHTML","EventDisplay","fetch","organizer","extendedProps","canEdit","undefined","handleEditClick","Location","DescriptionHtml","registerLocale","enGB","setDefaultLocale","DateTimeRange","getTime","endDate","maxDate","setHours","minDate","onChangeStartDate","bind","onChangeStartTime","onChangeEndTime","date","newDate","getDate","getHours","getMinutes","onChangeEndDate","prevProps","prevState","snapshot","render","renderComponent","dateLabel","selected","placeholderText","startLabel","showTimeSelect","showTimeSelectOnly","timeIntervals","minTime","maxTime","timeCaption","dateFormat","endLabel","EventEditor","handleStartChange","dt","EventType","RegistrationEnabled","RegistrationsLimit","AccessLevel","AccessControl","AvailableForAnyLevel","AvailableForLevels","AvailableForAnyGroup","AvailableForGroups","isEditing","onSubmit","onChangeEventLocation","onChangeEventName","startDateHandler","endDateHandler","handleDelete","preventDefault","theEvent","history","editor","ClassicEditor","details","getData","EventCreator","App","basename","exact","component","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4616e723.chunk.js","sourcesContent":["\nconst eventConvert = (waEvent) => {\n    let eList = [];\n    if( Array.isArray(waEvent)) {\n        waEvent.forEach((item) => {\n            let x = convertSingleEvent(item);\n            if( Array.isArray(x)) {\n                x.forEach((item) => {\n                    eList.push(item);\n                })\n            } else {\n                eList.push(x);\n            }\n        });\n    } else {\n        eList.push(convertSingleEvent(waEvent));\n    }\n    return eList;\n}\n\nconst convertSingleEvent = (waEvent) => {\n    let event = Object.assign({}, waEvent) ;\n\n    if ( waEvent.Sessions ) {\n        let eList = [];\n        waEvent.Sessions.forEach((item) => {\n            let e = Object.assign({}, event);\n            e.Id = item.Id;\n            e.parentId = event.Id;\n            e.Title = item.Title;\n            e.StartDate = item.StartDate;\n            e.EndDate = item.EndDate;\n            e.StartTimeSpecified = item.StartTimeSpecified;\n            e.EndTimeSpecified = item.EndTimeSpecified;\n            e.isRecurringSession = true;\n            e.isOrganizedEvent = item.Details && item.Details.Organizer;\n            delete e.Sessions\n            eList.push(e);\n        })\n        return eList;\n    } else {\n        return event;\n    }\n}\nmodule.exports = eventConvert;","const axios = require('axios');\nconst qs = require('querystring');\n\nexport const getAuthTokens = async (cb) => {\n    console.log(\"url\", process.env.REACT_APP_WA_OAUTH_URL);\n    console.log(\"key\", process.env.REACT_APP_WA_API_KEY);\n\n    let basicAuthHeader = 'Basic ' + new Buffer('APIKEY:' + process.env.REACT_APP_WA_API_KEY).toString('base64');\n    let body = {\n        grant_type: 'client_credentials',\n        scope: 'auto',\n        obtain_refresh_token: true\n    };\n\n    const postConfig = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': basicAuthHeader},\n    }\n\n    await axios.post(process.env.REACT_APP_WA_OAUTH_URL, qs.stringify(body), postConfig)\n        .then( (result) => {\n            cb(result.data);\n        })\n        .catch( (err) => {\n            console.log('error', err);\n        });\n}\n\n","\nexport const makeBaseUrl = (token) => {\n    return process.env.REACT_APP_WA_BASE_URL + '/accounts/' + token.Permissions[0].AccountId;\n}\n\nexport const makeAuthHeader = (token) => {\n    return token.token_type + ' ' +token.access_token;\n}\n\nexport const makeHeaders = (token) => {\n    return {\n        'Content-Type': 'application/json',\n        'Authorization': makeAuthHeader(token)\n        // 'Host': 'api.wildapricot.org'\n    }\n}","import {makeBaseUrl, makeHeaders} from \"./WildApricotUtils\";\nconst axios = require('axios');\n\nconst eventsUrl = (token) => {\n    return makeBaseUrl(token)+'/events';\n}\n\nexport const createEvent = async (token, eventObj, cb) => {\n    console.log(\"creating new event\", eventObj);\n    await axios.post(eventsUrl(token), eventObj,{headers: makeHeaders(token)})\n        // eventsUrl(token), qs.stringify(eventObj), { headers: makeHeaders(token)})\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nexport const updateEvent = async (token, eventId, eventObj, cb) => {\n    console.log(\"creating new event\", eventObj);\n    await axios.put(eventsUrl(token)+'/'+eventId, eventObj,{headers: makeHeaders(token)})\n        // eventsUrl(token), qs.stringify(eventObj), { headers: makeHeaders(token)})\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nexport const deleteEvent = async (token, eventId, cb) => {\n    console.log(\"deleting event\", eventId);\n    await axios.delete(eventsUrl(token)+'/'+eventId, {headers: makeHeaders(token)})\n        // eventsUrl(token), qs.stringify(eventObj), { headers: makeHeaders(token)})\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            console.log(\"error\", err);\n            cb({err});\n        })\n}\n\nexport const getEventById = async (token, eventId, cb) => {\n    console.log(\"getEventById\", eventId);\n    await axios({\n        url: eventsUrl(token)+'/'+eventId,\n        method: 'GET',\n        headers: makeHeaders(token)\n    })\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n             // return result.data;\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            cb({});\n        })\n}\n\nexport const getEvents = async (token, startDate, cb) => {\n    await axios.get(eventsUrl(token), {\n        headers: makeHeaders(token),\n        params: {\n            $filter: \"StartDate ge \"+startDate\n        }\n    })\n        .then((result) => {\n            cb(result.data.Events);\n        })\n        .catch((err) => {\n            console.log(\"Error\", err);\n            cb([]);\n        });\n};\n\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const memberEventTag = () => {\n    return 'member-event'\n}\nexport const searchForSessionAndAdjustFields = (sessionData, sessionId) => {\n    let e = Object.assign({}, sessionData);\n\n    let sess = sessionData.Sessions.filter(x => x.Id === Number(sessionId));\n    console.log(\"foundSession\", sess);\n    if (sess) {\n        e.sessionId = sess[0].Id;\n        e.Name = sess[0].Title;\n        e.StartDate = sess[0].StartDate;\n        e.EndDate = sess[0].EndDate;\n    }\n    console.log(\"theEvent\", e);\n    return e;\n}\n\nexport const buildRedirect = (path, member, eventInfo) => {\n    return <Redirect to={{\n        pathname: path,\n        state: {\n            member: member,\n            eventInfo: eventInfo\n        }\n    }} push/>\n}\n\nexport const emptyEvent = () => {\n    return {\n        // Id: '',\n        // Url: '',\n        EventType: 'Rsvp',\n        StartDate: '',\n        EndDate: '',\n        Location: '',\n        RegistrationEnabled: true,\n        EndTimeSpecified: true,\n        RegistrationsLimit: 100,\n        Tags: [memberEventTag()],\n        AccessLevel: 'Public',\n        Details: {\n            DescriptionHtml: '',\n            Organizer: {\n                Id: 0,\n                // Url: ''\n            },\n            AccessControl: {\n                AccessLevel: \"Public\",\n                AvailableForAnyLevel: false,\n                AvailableForLevels: [],\n                AvailableForAnyGroup: false,\n                AvailableForGroups: []\n            },\n\n        },\n        Name: ''\n    }\n}\n","import {makeBaseUrl, makeAuthHeader} from \"./WildApricotUtils\";\n\nconst axios = require('axios');\n\nexport const getContact = async (token, contactId, cb) => {\n    await axios.get(makeBaseUrl(token) + '/contacts/' + contactId, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        }\n    })\n        .then((result) => {\n            let e = {};\n\n            e.id = result.data.Id;\n            e.firstName = result.data.FirstName;\n            e.lastName = result.data.LastName;\n            e.email = result.data.Email;\n            e.displayName = result.data.DisplayName;\n            e.isAdmin = isAdmin(result.data.FieldValues);\n            e.url = result.data.Url;\n\n            cb(e);\n        })\n        .catch((err) => {\n            cb(null);\n        })\n}\n\nconst isAdmin = (fields) => {\n    let adminField = fields.filter(x => x.SystemCode === 'AdminRole');\n    return adminField.length>0 && adminField[0].Value.length > 0;\n}","import React, {Component} from 'react';\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEvents} from '../../utils/WildApricotEvents';\nimport eventConvert from '../../utils/WildApricotConversions';\nimport {buildRedirect,memberEventTag} from \"../EventCommon\";\n\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport listPlugin from '@fullcalendar/list';\nimport queryString from 'query-string';\n\nimport \"./EventCalendar.css\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\n\n\nexport default class EventCalendar extends Component {\n    calendarComponentRef = React.createRef()\n\n    state = {\n        events: [],\n        member: null,\n        calendarWeekends: true,\n        waToken: {},\n        showEvent: false,\n        editEvent: false\n    }\n\n    async componentDidMount() {\n        const queryStringValues = queryString.parse(this.props.location.search);\n        console.log(\"QUERY_PARAMS\", this.props.location.search,queryStringValues);\n        let firstDate = new Date();\n        firstDate.setFullYear(firstDate.getFullYear() - 1);\n        firstDate.setMonth(firstDate.getMonth() - 6);\n        console.log(\"FIRST DATE\", firstDate)\n\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        if ( queryStringValues.mid && queryStringValues.mid !== \"0\") {\n            await getContact(this.state.waToken, queryStringValues.mid, (contact) => {this.setState({member: contact})})\n            console.log(\"Retrieve Member\", this.state.member);\n        }\n        await getEvents(this.state.waToken, firstDate.toISOString(), (data) => {\n            var myEvents = eventConvert(data).map((event) => {\n                return {\n                    id: event.Id,\n                    title: event.Name.replace(\"Weekly Workout - \", \"\")\n                        .replace(\"Weekly Workout- \",\"\"),  // shorten string in event\n                    start: event.StartDate,\n                    end: event.EndDate,\n                    Url: event.Url,\n                    Tags: event.Tags,\n                    backgroundColor: this.getEventColor(event),\n                    parentId: event.parentId\n                }\n            });\n            this.setState({events: myEvents});\n        });\n        console.log(\"EVENTS\", this.state.events);\n    }\n\n    getEventColor(event) {\n        if ( /Race/.test(event.Name) ) {\n            return 'red'\n        } else if ( event.Tags && event.Tags.indexOf(memberEventTag())> -1) {\n             return '#66CC00'\n        }\n        return '#3399FF';\n    }\n\n    render() {\n        if (this.state.showEvent) {\n            return buildRedirect('showEvent', this.state.member, this.state.eventInfo);\n        }\n        if (this.state.editEvent) {\n            return buildRedirect('createEvent', this.state.member, this.state.eventInfo);\n        }\n        return (\n            <div className='EventCalendar'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    firstDay={1}\n                    fixedWeekCount={false}\n                    header={{\n                        left: 'prev today next',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,listMonth'\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, bootstrapPlugin]}\n                    themeSystem=\"bootstrap\"\n                    displayEventTime={true}\n                    selectable={true}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={this.state.events}\n                    dateClick={this.handleDateClick}\n                    eventClick={this.handleEventClick}\n                />\n                <button onClick={this.createEvent}>Create Event</button>\n            </div>\n        )\n    }\n\n    createEvent = () => {\n        this.setState({editEvent: true, eventInfo: {}})\n    }\n\n    handleEventClick = (arg) => {\n        console.log(\"going to event\", arg);\n        this.setState({showEvent: true, eventInfo: arg});\n    }\n\n    handleDateClick = (e) => {\n        console.log(\"DATE CLICKED\", e);\n        this.setState({editEvent: true, eventInfo: e});\n    }\n}","import React, {Component} from 'react';\n\nimport \"./SwitchableInputText.css\";\n\nexport default class SwitchableTextInput extends Component {\n    render() {\n        return (\n            <div data-testid=\"switchable-text-input\" className={this.props.className}>\n                <label>{this.props.label}</label>\n                {this.props.inputFlag ?\n                    <input type=\"text\" className=\"form-control\" value={this.props.value} onChange={(e)=>this.props.onChange(e.target.value)}/> :\n                    this.props.value}\n            </div>\n        );\n    }\n}\n","import React,{Component} from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class EventDataLoader extends Component {\n    render() {\n        return (\n            <div className='loader'>\n                <h1>{this.props.name}</h1>\n                <h2>Loading</h2>\n                <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\"/>\n            </div>);\n    }\n}","import React, {Component} from 'react';\n\nimport \"./SwitchableInputText.css\";\nimport renderHTML from \"react-render-html\";\n\nexport default class SwitchableTextInput extends Component {\n    render() {\n        return (\n            <div data-testid=\"switchable-text-input\" className={this.props.className}>\n                <label>{this.props.label}</label><br/>\n                {this.props.displayFlag ?\n                    <div>{renderHTML(this.props.value)}</div> :\n                    <div></div>}\n            </div>\n        );\n    }\n}\n\n// {this.state.event.Details && this.state.event.Details.DescriptionHtml ?\n//     <div><h3>Description</h3><div>{renderHTML(this.state.event.Details.DescriptionHtml)}</div></div> :\n//     <div></div>}\n","import React, {Component} from 'react';\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEventById} from \"../../utils/WildApricotEvents\";\nimport SwitchableTextInput from \"../SwitchableTextInput\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport SwitchableHtmlDisplay from \"../SwitchableHtmlDisplay\";\nimport \"./EventDisplay.css\";\nimport {searchForSessionAndAdjustFields, buildRedirect} from \"../EventCommon\";\n\nexport default class EventDisplay extends Component {\n    state = {\n        fetch: true,\n        eventId: '',\n        waToken: {},\n        url: '',\n        event: null,\n        organizer: null,\n    }\n\n    async eventDetails() {\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        console.log(\"STATE\",this.state);\n        // recurring event\n        if (this.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n            await getEventById(this.state.waToken, this.state.eventInfo.event.extendedProps.parentId, (data) => {\n                this.setState({event: searchForSessionAndAdjustFields(data, this.state.eventInfo.event.id),});\n            });\n        } else {\n            await getEventById(this.state.waToken, this.state.eventInfo.event.id, (data) => {\n                this.setState({event: data});\n            });\n        }\n        this.setState({fetch:false});\n        console.log('state', this.state);\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.waToken, this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n                console.log(\"=====ORG\", data, this.state.organizer);\n            });\n            console.log(\"contact\", this.state.organizer);\n        }\n        console.log(\"state\", this.state);\n        console.log(\"CAN EDIT\", this.canEdit());\n    }\n\n    handleEditClick() {\n        this.setState({editEvent: true});\n    }\n\n    canEdit() {\n        return  this.state.member && this.state.eventInfo.event.extendedProps.parentId === undefined && (\n            this.state.member.isAdmin\n            || (this.state.event.Details && this.state.event.Details.Organizer && this.state.member.id === this.state.event.Details.Organizer.Id)\n        )\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return (<EventDataLoader name={this.props.location.state.name}/>);\n        } else if (this.state.editEvent) {\n            return buildRedirect('editEvent', this.state.member, this.state.eventInfo);\n        } else {\n            return (\n                <div>\n                    {this.canEdit() && <input type=\"submit\" value=\"Edit Event\" className=\"btn btn-primary\" onClick={() => this.handleEditClick()} />}\n                    <h2>{this.state.event.Name}</h2>\n                    <SwitchableTextInput className=\"event_id\" label=\"Event Id: \" value={this.state.event.Id}/>\n                    <SwitchableTextInput className=\"event-title\" label=\"Event Name: \" value={this.state.event.Name}/>\n                    <SwitchableTextInput className=\"event-start\" label=\"Event Start Date/Time: \"\n                                         value={this.state.event.StartDate}/>\n                    <SwitchableTextInput className=\"event-end\" label=\"Event End Date/Time: \"\n                                         value={this.state.event.EndDate}/>\n                    <SwitchableTextInput className=\"location\" label=\"Event Location: \"\n                                         value={this.state.event.Location}/>\n                    {this.state.organizer && <SwitchableTextInput className=\"organizer\" label=\"Organizer: \"\n                                                                  value={this.state.organizer.displayName + '(' + this.state.organizer.email + ')'}/>}\n\n                    <SwitchableHtmlDisplay className=\"descriptionHtml\" label=\"Description\" value={this.state.event.Details.DescriptionHtml} displayFlag={this.state.event.Details && this.state.event.Details.DescriptionHtml} />\n                </div>\n            );\n        }\n    }\n}","import React, {Component} from 'react';\nimport DatePicker from 'react-datepicker';\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport \"./DateTimeRange.css\";\nimport enGB from \"date-fns/locale/en-GB\";\nregisterLocale(\"en-GB\", enGB);\n\nsetDefaultLocale(\"en-GB\")\n\nexport default class DateTimeRange extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log(\"PROPS\", props);\n        this.state = {\n            startDate: new Date(this.props.startDate.getTime()),\n            endDate: new Date(this.props.endDate.getTime()),\n            maxDate: this.props.endDate? new Date(new Date(this.props.endDate.getTime()).setHours(23,59,59)): null,\n            minDate: this.props.startDate? new Date(new Date(this.props.startDate.getTime()).setHours(0,0,0)): null,\n        }\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeStartTime = this.onChangeStartTime.bind(this);\n        this.onChangeEndTime = this.onChangeEndTime.bind(this);\n    }\n\n    async onChangeStartDate (date) {\n        let newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes());\n        console.log(\"Date from component\", date, newDate);\n        await this.setState({\n            startDate: newDate,\n            endDate: new Date(this.state.endDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate())),\n            minDate: new Date(date.setHours(0,0,0)),\n            maxDate: new Date(date.setHours(23,59,59)),\n        });\n        console.log(\"DTR STATE\", this.state);\n        console.log(\"CHILD ONCHANGE\", date)\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    async onChangeStartTime (date) {\n        if( this.state.endDate < this.state.startDate) {\n            await this.setState({\n                startDate: date,\n                endDate: date\n            })\n        } else {\n            await this.setState({startDate: date});\n        }\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n        console.log(\"State after start time change\", this.state);\n    }\n\n    onChangeEndTime (date) {\n        this.setState({endDate: date})\n        this.props.onChangeEndDate(date);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if( this.state.startDate !== prevState.startDate || this.state.endDate !== prevState.endDate) {\n            this.render();\n        }\n    }\n\n    render() {\n        return this.renderComponent();\n    }\n\n    renderComponent() {\n        return (\n            <div className=\"dateTimeRangeSelector\">\n                <div className=\"dateTimeRangeSelector-date\">\n                    <label>{this.props.dateLabel}</label>\n                    <DatePicker\n                        selected={this.props.startDate}\n                        placeholderText=\"Click to select a date\"\n                        onChange= {date => this.onChangeStartDate(date)}\n                    />\n                </div>\n                <div className=\"dateTimeRangeSelector-start\">\n                    <label>{this.props.startLabel}</label>\n                    <DatePicker\n                        selected={this.props.startDate}\n                        onChange={date => this.props.onChangeStartDate(date)}\n                        showTimeSelect\n                        showTimeSelectOnly\n                        timeIntervals={15}\n                        minTime={this.state.minDate}\n                        maxTime={this.state.endDate}\n                        timeCaption=\"Start Time\"\n                        dateFormat=\"h:mm aa\"\n                    />\n\n                </div>\n                <div className=\"dateTimeRangeSelector-end\">\n                    <label>{this.props.endLabel}</label>\n                    <DatePicker\n                        selected={this.props.endDate}\n                        onChange={date => this.onChangeEndTime(date)}\n                        showTimeSelect\n                        showTimeSelectOnly\n                        timeIntervals={15}\n                        minTime={this.state.startDate}\n                        maxTime={this.state.maxDate}\n                        timeCaption=\"End Time\"\n                        dateFormat=\"h:mm aa\"\n                    />\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport {getEventById, updateEvent, deleteEvent} from \"../../utils/WildApricotEvents\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {emptyEvent, searchForSessionAndAdjustFields} from \"../EventCommon\";\nimport \"./EventEditor.css\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\n\nexport default class EventEditor extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        let theEvent = Object.assign({}, this.state.event);\n        console.log(\"SAVING EVENT\", this.state, theEvent);\n\n        updateEvent(this.state.waToken, this.state.event.Id, this.state.event, (data) => {console.log(\"UPDATE RESULT\", data)})\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        console.log(\"STATE\",this.state);\n        // recurring event\n        if (this.state.eventInfo.event && this.state.fetch) {   // user clicked on an event\n            if (this.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n                await getEventById(this.state.waToken, this.state.eventInfo.event.extendedProps.parentId, (data) => {\n                    this.setState({event: searchForSessionAndAdjustFields(data, this.state.eventInfo.event.id)});\n                });\n            } else {\n                await getEventById(this.state.waToken, this.state.eventInfo.event.id, (data) => {\n                    this.setState({event: data});\n                });\n            }\n        } else if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            this.setState({event: {...this.state.event, StartDate: new  Date(this.state.eventInfo.date)}})\n        }\n        this.setState({event:{...this.state.event,StartDate: new Date(this.state.event.StartDate)}});\n        this.setState({event:{...this.state.event,EndDate: new Date(this.state.event.EndDate)}});\n        console.log('===>state', this.state);\n        this.setState({fetch:false});\n\n        if (this.props.location.state.eventInfo.date) {\n            let maxTime = new Date(this.props.location.state.eventInfo.date.getTime());\n            this.setState({...this.state.event, startDate: this.props.location.state.eventInfo.date});\n            this.setState({...this.state.event, endDate: new Date(maxTime.setHours(23,59,59))});\n        }\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.waToken, this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n                console.log(\"=====ORG\", data, this.state.organizer);\n            });\n            console.log(\"contact\", this.state.organizer);\n        }\n        console.log(\"state\", this.state);\n    }\n\n    startDateHandler(date) {\n        console.log(\"CreatorState\", this.state);\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        console.log(\"CreatorState\", this.state);\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    handleDelete() {\n        console.log(\"Deleting Event\", this.state.event.Id);\n\n        deleteEvent(this.state.waToken, this.state.event.Id, (data) => {console.log(\"DELETE RESULT\", data)});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Event Id: </label>\n                                {this.state.event.Id}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                        let details = this.state.event.Details;\n                                        details.DescriptionHtml = editor.getData();\n                                        this.setState({event: {...this.state.event, Details: details}});\n                                    } }\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <input type=\"submit\" value=\"Save Event\" className=\"btn btn-primary\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"button\" value=\"Delete Event\" className=\"btn btn-danger\" onClick={this.handleDelete}/>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    handleStartChange = async (dt) => {\n        await this.setState({date: {...this.state.date, date: dt}});\n    }\n\n}\n\n","import React, {Component} from 'react';\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport {getAuthTokens} from \"../../utils/WildApricotOAuthUtils\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {createEvent} from \"../../utils/WildApricotEvents\";\nimport {emptyEvent} from \"../EventCommon\";\nimport \"./EventCreator.css\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\n\nexport default class EventCreator extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        let theEvent = Object.assign({}, this.state.event);\n        theEvent.StartDate = theEvent.StartDate.toISOString();\n        theEvent.EndDate = theEvent.EndDate.toISOString();\n        console.log(\"SAVING EVENT\", this.state, theEvent);\n        createEvent(this.state.waToken, theEvent, (data) => {console.log(\"CREATE RESULT\", data)});\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"EVENT DETAILS\", this.props.location.state);\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        console.log(\"STATE\",this.state);\n        if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            this.setState({event: {...this.state.event, StartDate: new  Date(new Date(this.state.eventInfo.date).setHours(8,0,0))}})\n            this.setState({event: {...this.state.event, EndDate: new  Date(new Date(this.state.eventInfo.date).setHours(20,0,0))}})\n        }\n        this.setState({fetch:false});\n        console.log('===>state', this.state);\n\n        let details = Object.assign({}, this.state.event.Details)\n         details.Organizer = {\n            Id: this.state.member.id\n        }\n        this.setState({event: {...this.state.event, Details:details}});\n        console.log(\"state\", this.state);\n    }\n\n    startDateHandler(date) {\n        console.log(\"CreatorState-start\", this.state);\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        console.log(\"CreatorState-end\", this.state);\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.event.StartDate !== prevState.event.StartDate || this.state.event.EndDate !== prevState.event.EndDate) {\n            this.render()\n        }\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                        let details = this.state.event.Details;\n                                        details.DescriptionHtml = editor.getData();\n                                        this.setState({event: {...this.state.event, Details: details}});\n                                    } }\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <input type=\"submit\" value=\"Create Event\" className=\"btn btn-primary\" />\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport EventCalendar from \"./components/event-calendar/EventCalendar\";\nimport EventDisplay from \"./components/event-display/EventDisplay\";\nimport EventEditor from \"./components/event-edit/EventEditor\";\nimport EventCreator from \"./components/event-create/EventCreator\";\n\nfunction App() {\n    return (\n        <Router basename=\"/\">\n            <div className=\"App container-fluid\">\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    {/*<a className=\"navbar-brand\" href=\"\" target=\"_blank\">*/}\n                    {/*    <img src=\"logo\" width=\"30\" height=\"30\"></img>*/}\n                    {/*</a>*/}\n                </nav>\n                <Switch>\n                    <Route exact path=\"/\" component={EventCalendar}/>\n                    <Route exact path=\"/showEvent\" component={EventDisplay}/>\n                    <Route exact path=\"/editEvent\" component={EventEditor}/>\n                    <Route exact path=\"/createEvent\" component={EventCreator}/>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}