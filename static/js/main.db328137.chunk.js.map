{"version":3,"sources":["utils/WildApricotConversions.js","utils/WildApricotUtils.js","utils/WildApricotEvents.js","utils/WildApricotContacts.js","components/event-calendar/EventCalendar.js","components/SwitchableTextInput.js","components/event-data-loader/EventDataLoader.js","components/event-display/EventDisplay.js","components/SwitchableDatePicker.js","components/event-edit/EventEditor.js","App.js","serviceWorker.js","index.js","utils/WildAppricotOAuthUtils.js"],"names":["convertSingleEvent","waEvent","event","Object","assign","Sessions","eList","forEach","item","e","Id","parentId","Title","StartDate","EndDate","StartTimeSpecified","EndTimeSpecified","isRecurringSession","isOrganizedEvent","Details","Organizer","push","module","exports","Array","isArray","x","makeBaseUrl","token","process","Permissions","AccountId","makeAuthHeader","token_type","access_token","axios","require","getEventById","eventId","cb","a","console","log","url","method","headers","then","result","data","catch","err","getEvents","startDate","get","params","$filter","Events","getContact","contactId","firstName","FirstName","lastName","LastName","email","Email","displayName","DisplayName","isAdmin","FieldValues","fields","adminField","filter","SystemCode","length","Value","EventCalendar","props","calendarComponentRef","React","createRef","state","isCreateEvent","isEditing","events","member","showCreateModal","calendarWeekends","waToken","modalToggle","setState","editToggle","userCanEdit","eventRsvp","currentEvent","alert","title","saveEvent","concat","idx","findIndex","id","eventsCopy","clearCurrentEvent","handleEventClick","arg","history","pathname","parseInt","name","extendedProps","Url","handleDateClick","date","Date","getTime","createEvent","start","end","setDate","getDate","uuid","showModal","onChangeEventName","onChangeEventDescription","description","onChangeLocation","location","handleStartChange","handleEndChange","match","memberId","bind","firstDate","setFullYear","getFullYear","setMonth","getMonth","getAuthTokens","this","contact","toISOString","myEvents","eventConvert","map","Name","Tags","backgroundColor","getEventColor","test","className","defaultView","firstDay","fixedWeekCount","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","bootstrapPlugin","themeSystem","displayEventTime","selectable","ref","weekends","dateClick","eventClick","onClick","Component","SwitchableTextInput","data-testid","label","inputFlag","type","value","onChange","target","EventDataLoader","color","height","width","EventDisplay","fetch","organizer","sess","sessionId","eventDetails","Location","display","DescriptionHtml","renderHTML","SwitchableDatePicker","editFlag","selected","handleChange","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","endDate","minDate","toLocaleString","EventEditor","dt","editor","ClassicEditor","onInit","getData","onBlur","onFocus","App","basename","exact","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","qs","basicAuthHeader","Buffer","toString","body","grant_type","scope","obtain_refresh_token","postConfig","post","stringify"],"mappings":"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","file":"static/js/main.db328137.chunk.js","sourcesContent":["\nconst eventConvert = (waEvent) => {\n    let eList = [];\n    if( Array.isArray(waEvent)) {\n        waEvent.forEach((item) => {\n            let x = convertSingleEvent(item);\n            if( Array.isArray(x)) {\n                x.forEach((item) => {\n                    eList.push(item);\n                })\n            } else {\n                eList.push(x);\n            }\n        });\n    } else {\n        eList.push(convertSingleEvent(waEvent));\n    }\n    return eList;\n}\n\nconst convertSingleEvent = (waEvent) => {\n    let event = Object.assign({}, waEvent) ;\n\n    if ( waEvent.Sessions ) {\n        let eList = [];\n        waEvent.Sessions.forEach((item) => {\n            let e = Object.assign({}, event);\n            e.Id = item.Id;\n            e.parentId = event.Id;\n            e.Title = item.Title;\n            e.StartDate = item.StartDate;\n            e.EndDate = item.EndDate;\n            e.StartTimeSpecified = item.StartTimeSpecified;\n            e.EndTimeSpecified = item.EndTimeSpecified;\n            e.isRecurringSession = true;\n            e.isOrganizedEvent = item.Details && item.Details.Organizer;\n            delete e.Sessions\n            eList.push(e);\n        })\n        return eList;\n    } else {\n        return event;\n    }\n}\nmodule.exports = eventConvert;","\nexport const makeBaseUrl = (token) => {\n    return process.env.REACT_APP_WA_BASE_URL + '/accounts/' + token.Permissions[0].AccountId;\n}\n\nexport const makeAuthHeader = (token) => {\n    return token.token_type + ' ' +token.access_token;\n}","import {makeAuthHeader, makeBaseUrl} from \"./WildApricotUtils\";\nconst axios = require('axios');\n\nconst eventsUrlPart = '/events';\n\nexport const getEventById = async (token, eventId, cb) => {\n    console.log(\"getEventById\", eventId);\n    await axios({\n        url: makeBaseUrl(token)+eventsUrlPart+'/'+eventId,\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        }\n    })\n        .then((result) => {\n            console.log(\"RESULT\", result)\n            cb(result.data);\n             // return result.data;\n        })\n        .catch((err) => {\n            console.log(\"## Error ##\", err);\n            cb({});\n        })\n}\n\nexport const getEvents = async (token, startDate, cb) => {\n    await axios.get(makeBaseUrl(token)+eventsUrlPart, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        },\n        params: {\n            $filter: \"StartDate ge \"+startDate\n        }\n    })\n        .then((result) => {\n            cb(result.data.Events);\n        })\n        .catch((err) => {\n            console.log(\"Error\", err);\n            cb([]);\n        });\n};\n\n","import {makeBaseUrl, makeAuthHeader} from \"./WildApricotUtils\";\n\nconst axios = require('axios');\n\nexport const getContact = async (token, contactId, cb) => {\n    await axios.get(makeBaseUrl(token) + '/contacts/' + contactId, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': makeAuthHeader(token)\n        }\n    })\n        .then((result) => {\n            let e = {};\n\n            e.firstName = result.data.FirstName;\n            e.lastName = result.data.LastName;\n            e.email = result.data.Email;\n            e.displayName = result.data.DisplayName;\n            e.isAdmin = isAdmin(result.data.FieldValues);\n\n            cb(e);\n        })\n        .catch((err) => {\n            cb(null);\n        })\n}\n\nconst isAdmin = (fields) => {\n    let adminField = fields.filter(x => x.SystemCode === 'AdminRole');\n    return adminField.length>0 && adminField[0].Value.length > 0;\n}","import React, {Component} from 'react';\n\nimport {getAuthTokens} from \"../../utils/WildAppricotOAuthUtils\";\nimport {getEvents} from '../../utils/WildApricotEvents';\nimport eventConvert from '../../utils/WildApricotConversions';\n\nimport uuid from \"react-uuid\";\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport listPlugin from '@fullcalendar/list';\n\n\nimport \"./EventCalendar.css\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\n\n// import SwitchableTextInput from \"./SwitchableTextInput\";\n// import SwitchableDatePicker from \"./SwitchableDatePicker\";\n// import SwitchableButton from \"./SwitchableButton\";\n\n\nexport default class EventCalendar extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"CREATEING EVENT CALENDAR\");\n        if (this.props.match.params.memberId) {\n            console.log(\"RECEIVED MEMBERID\", this.props.match.params.memberId);\n        }\n        // this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.onChangeEventDescription = this.onChangeEventDescription.bind(this);\n        this.onChangeLocation = this.onChangeLocation.bind(this);\n        // this.handleStartChange = this.handleStartChange.bind(this);\n        // this.handleEndChange = this.handleEndChange.bind(this);\n        console.log('result', process.env.REACT_APP_WA_OAUTH_URL);\n    }\n\n    calendarComponentRef = React.createRef()\n\n    state = {\n        isCreateEvent: false,\n        isEditing: false,\n        // currentEvent: {\n        //     id: '',\n        //     title: '',\n        //     description: '',\n        //     location: '',\n        //     organizer: '',\n        //     start: new Date(),\n        //     end: new Date()\n        // },\n        events: [],\n        member: null,\n        showCreateModal: false,\n        calendarWeekends: true,\n        waToken: {}\n    }\n\n    async componentDidMount() {\n        let firstDate = new Date();\n        firstDate.setFullYear(firstDate.getFullYear() - 1);\n        firstDate.setMonth(firstDate.getMonth() - 6);\n        console.log(\"FIRST DATE\", firstDate)\n\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        if ( this.props.match.params.memberId && this.props.match.params.memberId !== \"0\") {\n            await getContact(this.state.waToken, this.props.match.params.memberId, (contact) => {this.setState({member: contact})})\n            console.log(\"Retrieve Member\", this.state.member);\n        }\n        await getEvents(this.state.waToken, firstDate.toISOString(), (data) => {\n            var myEvents = eventConvert(data).map((event) => {\n                return {\n                    id: event.Id,\n                    title: event.Name,\n                    start: event.StartDate,\n                    end: event.EndDate,\n                    Url: event.Url,\n                    Tags: event.Tags,\n                    backgroundColor: this.getEventColor(event),\n                    parentId: event.parentId\n                }\n            });\n            // console.log(\"myEvents\", myEvents);\n            this.setState({events: myEvents});\n        });\n    }\n\n    getEventColor(event) {\n        if ( /Race/.test(event.Name) ) {\n            return 'red'\n        }\n        return 'blue';\n    }\n\n    modalToggle = () => {\n        this.setState({showCreateModal: !this.state.showCreateModal});\n    }\n\n    editToggle = () => {\n        this.setState({isEditing: !this.state.isEditing});\n    }\n\n    render() {\n        return (\n            <div className='EventCalendar'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    firstDay={1}\n                    fixedWeekCount={false}\n                    header={{\n                        left: 'prev today next',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,listMonth'\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, bootstrapPlugin]}\n                    themeSystem=\"bootstrap\"\n                    displayEventTime={true}\n                    selectable={true}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={this.state.events}\n                    dateClick={this.handleDateClick}\n                    eventClick={this.handleEventClick}\n                />\n                <button onClick={this.createEvent}>Create Event</button>\n            </div>\n        )\n    }\n\n    userCanEdit = () => {\n        return true;\n    }\n\n    eventRsvp = (event) => {\n        console.log(\"event rsvp\", this.state.currentEvent);\n        alert(\"you have been registered for event: \" + this.state.currentEvent.title);\n    }\n\n    saveEvent = (event) => {\n        this.modalToggle();\n        console.log(\"saving event\", this.state.currentEvent);\n        if (this.state.isCreateEvent) {\n            this.setState({\n                events: this.state.events.concat(Object.assign({}, this.state.currentEvent))\n            })\n        } else {\n            let idx = this.state.events.findIndex(x => x.id === this.state.currentEvent.id)\n            let eventsCopy = [...this.state.events];\n            eventsCopy[idx] = this.state.currentEvent;\n            this.setState({events: eventsCopy});\n        }\n        this.clearCurrentEvent();\n    }\n\n    clearCurrentEvent = async () => {\n        await this.setState({currentEvent: {}});\n        console.log(\"state\", this.state);\n    }\n\n    handleEventClick = (arg) => {\n        console.log(\"going to event\", arg);\n        this.props.history.push({\n            pathname: '/showEvent',\n            state: {\n                id: parseInt(arg.event.id, 10),\n                name: arg.event.title,\n                url: arg.event.extendedProps.Url,\n                parentId: arg.event.extendedProps.parentId\n            }\n        });\n    }\n\n    handleDateClick = (e) => {\n        console.log(\"DATE CLICKED\", e);\n        this.props.history.push({\n            pathname: '/editEvent',\n            state: {\n                date: new Date(e.date.getTime())\n            }\n        })\n    }\n\n    createEvent = () => {\n        this.setState({\n            isCreateEvent: true,\n            isEditing: true,\n        });\n        let start = new Date();\n        let end = new Date();\n        end.setDate(end.getDate() + 1);\n\n        this.setState({\n            currentEvent: {\n                id: uuid(),\n                start: start,\n                end: end\n            }\n        });\n\n        this.showModal();\n    }\n    //\n    // showModal = e => {\n    //     console.log(\"showModal - incoming e\", e);\n    //\n    //     this.modalToggle();\n    // };\n\n    onChangeEventName = async (e) => {\n        await this.setState({currentEvent: {...this.state.currentEvent, title: e}});\n    }\n    onChangeEventDescription = async (e) => {\n        await this.setState({currentEvent: {...this.state.currentEvent, description: e}});\n    }\n    onChangeLocation = async (e) => {\n        await this.setState({currentEvent: {...this.state.currentEvent, location: e}});\n    }\n\n    handleStartChange = async (date) => {\n        await this.setState({currentEvent: {...this.state.currentEvent, start: date}});\n    }\n\n    handleEndChange = async (date) => {\n        await this.setState({currentEvent: {...this.state.currentEvent, end: date}});\n    }\n}\n","import React, {Component} from 'react';\n\nimport \"./SwitchableInputText.css\";\n\nexport default class SwitchableTextInput extends Component {\n    render() {\n        return (\n            <div data-testid=\"switchable-text-input\" className={this.props.className}>\n                <label>{this.props.label}</label>\n                {this.props.inputFlag ?\n                    <input type=\"text\" className=\"form-control\" value={this.props.value} onChange={(e)=>this.props.onChange(e.target.value)}/> :\n                    this.props.value}\n            </div>\n        );\n    }\n}\n","import React,{Component} from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class EventDataLoader extends Component {\n    render() {\n        return (\n            <div className='loader'>\n                <h1>{this.props.name}</h1>\n                <h2>Loading</h2>\n                <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\"/>\n            </div>);\n    }\n}","import React, {Component} from 'react';\nimport {getAuthTokens} from \"../../utils/WildAppricotOAuthUtils\";\nimport {getEventById} from \"../../utils/WildApricotEvents\";\nimport SwitchableTextInput from \"../SwitchableTextInput\";\nimport renderHTML from 'react-render-html';\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\n\nexport default class EventDisplay extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     console.log(\"display\", props);\n    //\n    // }\n    state = {\n        fetch: true,\n        eventId: '',\n        waToken: {},\n        url: '',\n        event: null,\n        organizer: null,\n    }\n\n\n    async eventDetails() {\n        // recurring event\n        if (this.props.location.state.parentId && this.state.fetch) {\n            await getEventById(this.state.waToken, this.props.location.state.parentId, (data) => {\n                let e = Object.assign({}, data);\n                this.setState({fetch: false});\n                console.log(\"props\", this.props);\n\n                let sess = data.Sessions.filter(x => x.Id === this.props.location.state.id);\n                console.log(\"foundSession\", sess);\n                if (sess) {\n                    e.sessionId = sess[0].Id;\n                    e.Name = sess[0].Title;\n                    e.StartDate = sess[0].StartDate;\n                    e.EndDate = sess[0].EndDate;\n                }\n                console.log(\"theEvent\", e);\n                this.setState({event: e});\n                console.log('state', this.state);\n            });\n        } else {\n            await getEventById(this.state.waToken, this.props.location.state.id, (data) => {\n                this.setState({event: data});\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        console.log(\"unmounting########\");\n    }\n\n    async componentDidMount() {\n        await getAuthTokens((data) => this.setState({waToken: data}));\n        console.log(\"Fetching event data\");\n        await this.eventDetails();\n        // console.log('contact values ->', this.state.event, this.state.event.Details, this.state.event.Details.Organizer);\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.waToken, this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n                console.log(\"=====ORG\", data, this.state.organizer);\n            });\n            console.log(\"contact\", this.state.organizer);\n        }\n        console.log(\"state\", this.state);\n    }\n\n    render() {\n        // console.log(\"eventDisplay\", this.props.location.state);\n        if (this.state.event === null) {\n            return (<EventDataLoader name={this.props.location.state.name}/>);\n        } else {\n            return (\n                <div>\n                    <h2>{this.state.event.Name}</h2>\n                    <SwitchableTextInput className=\"event_id\" label=\"Event Id: \" value={this.state.event.Id}/>\n                    <SwitchableTextInput className=\"event-title\" label=\"Event Name: \" value={this.state.event.Name}/>\n                    <SwitchableTextInput className=\"event-start\" label=\"Event Start Date/Time: \"\n                                         value={this.state.event.StartDate}/>\n                    <SwitchableTextInput className=\"event-end\" label=\"Event End Date/Time: \"\n                                         value={this.state.event.EndDate}/>\n                    <SwitchableTextInput className=\"location\" label=\"Event Location: \"\n                                         value={this.state.event.Location}/>\n                    {this.state.organizer && <SwitchableTextInput className=\"organizer\" label=\"Organizer: \"\n                                                                  value={this.state.organizer.display + '(' + this.state.organizer.email + ')'}/>}\n                    {this.state.event.Details && this.state.event.Details.DescriptionHtml ? <div><h3>Description</h3>\n                        <div>{renderHTML(this.state.event.Details.DescriptionHtml)}</div>\n                    </div> : <div></div>}\n                </div>\n            );\n        }\n    }\n}","import React, {Component} from 'react';\n\nimport \"./SwitchableDatePicker.css\";\nimport DatePicker from \"react-datepicker\";\n\nexport default class SwitchableDatePicker extends Component {\n    render() {\n        return (\n            <div className=\"form-group\">\n                <label>{this.props.label}</label>\n                {!this.props.editFlag ? this.props.selected.toLocaleString() :\n                <DatePicker\n                    className=\"dateEntry\"\n                    selected={this.props.selected}\n                    onChange={this.props.handleChange}\n                    showTimeSelect\n                    timeFormat=\"HH:mm\"\n                    timeIntervals={15}\n                    timeCaption=\"time\"\n                    dateFormat=\"MMM d, yyyy h:mm aa\"\n                    startDate={this.props.start}\n                    endDate={this.props.end}\n                    minDate={this.props.minDate}\n                />\n                }\n            </div>\n        );\n\n    }\n}","import React, {Component} from 'react';\n// import {getAuthTokens} from \"../../utils/WildAppricotOAuthUtils\";\n// import {getEventById} from \"../../utils/WildApricotEvents\";\n// import SwitchableTextInput from \"../SwitchableTextInput\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\n// NOTE: Use the editor from source (not a build)!\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport SwitchableDatePicker from \"../SwitchableDatePicker\";\n// import Essentials from \"@ckeditor/ckeditor5-essentials\";\n// import Bold from \"@ckeditor/ckeditor5-basic-styles\";\n// import Italic from \"@ckeditor/ckeditor5-basic-styles\";\n// import Paragraph from \"@ckeditor/ckeditor5-paragraph\";\n\n// const editorConfiguration = {\n//     // plugins: [Essentials, Bold, Italic, Paragraph],\n//     plugins: [Essentials],\n//     toolbar: [\"bold\", \"italic\"]\n// };\n\n\nexport default class EventEditor extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            isEditing: true,\n            date: props.location.state.date,\n            description: \"\"\n        }\n    }\n\n    // componentDidMount() {\n    //     console.log(\"INCOMING DATE\", this.props);\n    //     this.setState({date: this.props.location.state.date});\n    //\n    //     console.log(\"STATE\", this.state);\n    // }\n\n    render() {\n\n        return (\n            <div className=\"App\">\n                <SwitchableDatePicker label=\"Date: \" editFlag={this.state.isEditing} selected={this.state.date} handleChange={this.handleStartChange} start={this.state.date} end={this.state.date}/>\n                <h2>Description</h2>\n                <CKEditor\n                    editor={ ClassicEditor }\n                    data=\"<p>Hello, csharp corner!</p><br/><br/> <b>This is demo for ckeditor 5 with React</br>\"\n                    onInit={ editor => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log( 'Editor is ready to use!', editor );\n                    } }\n                    onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n                        console.log( { event, editor, data } );\n                    } }\n                    onBlur={ ( event, editor ) => {\n                        console.log( 'Blur.', editor );\n                    } }\n                    onFocus={ ( event, editor ) => {\n                        console.log( 'Focus.', editor );\n                    } }\n                />\n            </div>\n        )\n    }\n\n    handleStartChange = async (dt) => {\n        await this.setState({date: {...this.state.date, date: dt}});\n    }\n\n}\n\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n//import logo from './logo.svg';\nimport './App.css';\nimport EventCalendar from \"./components/event-calendar/EventCalendar\";\nimport EventDisplay from \"./components/event-display/EventDisplay\";\nimport EventEditor from \"./components/event-edit/EventEditor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HashRouter basename=\"/\">\n            <Route exact path=\"/:memberId\" component={EventCalendar} />\n            <Route exact path=\"/\" component={EventCalendar} />\n            <Route exact path=\"/showEvent\" component={EventDisplay} />\n            <Route exact path=\"/editEvent\" component={EventEditor} />\n        </HashRouter>\n      {/*<EventCalendar />*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\nconst qs = require('querystring');\n\nexport const getAuthTokens = async (cb) => {\n    console.log(\"url\", process.env.REACT_APP_WA_OAUTH_URL);\n    console.log(\"key\", process.env.REACT_APP_WA_API_KEY);\n\n    let basicAuthHeader = 'Basic ' + new Buffer('APIKEY:' + process.env.REACT_APP_WA_API_KEY).toString('base64');\n    let body = {\n        grant_type: 'client_credentials',\n        scope: 'auto',\n        obtain_refresh_token: true\n    };\n\n    const postConfig = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': basicAuthHeader},\n    }\n\n    await axios.post(process.env.REACT_APP_WA_OAUTH_URL, qs.stringify(body), postConfig)\n        .then( (result) => {\n            cb(result.data);\n        })\n        .catch( (err) => {\n            console.log('error', err);\n        });\n}\n\n"],"sourceRoot":""}