{"version":3,"sources":["utils/WildApricotUtils.js","utils/WildApricotEvents.js","utils/WildApricotConversions.js","components/EventCommon.js","components/event-data-loader/EventDataLoader.js","utils/WildApricotContacts.js","components/event-calendar/EventCalendar.js","utils/WildApricotRegistrations.js","utils/WildApricotEmailSender.js","components/event-display/EventDisplay.js","components/date-time-range/DateTimeRange.js","components/event-edit/EventEditor.js","components/event-create/EventCreator.js","App.js","serviceWorker.js","index.js"],"names":["qs","require","_getAuthTokens","a","body","grant_type","scope","obtain_refresh_token","_axiosAuthRequest","_refreshAuthTokens","refresh_token","localStorage","getItem","isRefreshing","subscribers","subscribeTokenRefresh","cb","push","subscribersOnRefreshed","map","axios","interceptors","response","use","err","console","log","config","status","data","reason","makeHeaders","headers","requestSubscribers","Promise","resolve","makeBaseUrl","_getTokensIfFirstCall","process","makeAuthHeader","_getAuthUrl","stringify","Buffer","toString","method","url","then","result","token","setItem","Permissions","AccountId","access_token","token_type","catch","error","axiosCall","_axiosCall","axiosGetCallWithParams","params","methd","errorCb","eventsUrl","createEvent","eventObj","updateEvent","eventId","deleteEvent","getEventById","getEvents","startDate","$filter","Events","convertSingleEvent","waEvent","event","Object","assign","Sessions","eList","forEach","item","e","Id","parentId","Title","StartDate","EndDate","StartTimeSpecified","EndTimeSpecified","isRecurringSession","isOrganizedEvent","Details","Organizer","searchForSessionAndAdjustFields","sessionData","sessionId","sess","filter","x","Number","Name","buildRedirect","path","member","eventInfo","to","pathname","state","firstDateEventsToRetrieve","firstDate","Date","setMonth","getMonth","toISOString","fullSetStartDate","setFullYear","getFullYear","EventDataLoader","className","this","props","name","type","color","height","width","Component","getContact","contactId","convertContactData","id","firstName","FirstName","lastName","LastName","email","Email","displayName","DisplayName","isAdmin","FieldValues","Url","fields","adminField","SystemCode","length","Value","EventCalendar","setState","editEvent","isLoggedInUser","handleEventClick","arg","showEvent","handleDateClick","calendarComponentRef","React","createRef","calendarWeekends","fetch","xid","match","queryStringValues","queryString","parse","location","search","mid","contact","onMemberChange","myEvents","convertEventData","onEventChange","eventData","events","Array","isArray","eventConvert","title","replace","start","end","Tags","backgroundColor","getEventColor","test","indexOf","updateSize","defaultView","firstDay","fixedWeekCount","handleWindowResize","contentHeight","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","bootstrapPlugin","themeSystem","displayEventTime","selectable","ref","weekends","dateClick","eventClick","windowResize","xs","onClick","registrationsUrl","getRegistrationsForEventId","createInitialRegistrationForEvent","userId","regTypeId","getRegistrationTypesForEvent","updateRegistrationTypeForEvent","sendRegistrationForEvent","registerUserForEventId","regType","createRegistration","unregisterFromEvent","regId","updateRegistration","reg","updatedReg","memberId","message","numGuests","RegistrationDate","dateRegistered","regTypeUpdate","createRegistrationTypeUpdateRecord","msg","sendEmail","recipArray","subject","text","makeMessage","Subject","Body","Recipients","processRecipients","EventId","recip","Type","EventDisplay","organizer","modalToggle","rsvpMessage","rsvpModalTitle","modalTextBoxType","toggle","bind","onChangeRsvpMessage","history","getEvent","regArray","convertRegistrationData","registrations","extendedProps","Contact","Event","Memo","GuestRegistrationsSummary","NumberOfGuests","undefined","isUserEventOrganizer","findRegistrationByRegId","updateRegistrationInState","registration","messageSubject","memberMessage","toLocaleString","target","value","fee","guestFee","RegistrationTypes","BasePrice","GuestPrice","TotalDue","TotalPaid","index","key","regData","calendarViewClick","canEdit","btnStyle","handleEditClick","handleMessagingClick","notAlreadyRegistered","canRegisterForEvent","handleRegisterClick","handleUnRegisterClick","handleAddGuest","addMessageModal","Location","renderHTML","DescriptionHtml","renderRegistrationData","Modal","show","onHide","size","backdrop","aria-labelledby","centered","Header","closeButton","onChange","Footer","handleSendMessage","handleAddMessage","registerLocale","enGB","setDefaultLocale","DateTimeRange","endDate","maxDate","setHours","minDate","onChangeStartDate","onChangeStartTime","onChangeEndTime","date","newDate","getDate","getHours","getMinutes","myEndDate","getTime","onChangeEndDate","prevProps","prevState","snapshot","render","dateLabel","selected","placeholderText","startLabel","showTimeSelect","showTimeSelectOnly","timeIntervals","minTime","maxTime","timeCaption","dateFormat","endLabel","editorConfiguration","link","decorators","addTargetToExternalLinks","mode","callback","attributes","rel","EventEditor","handleStartChange","dt","EventType","RegistrationEnabled","RegistrationsLimit","AccessLevel","AccessControl","AvailableForAnyLevel","AvailableForLevels","AvailableForAnyGroup","AvailableForGroups","GuestRegistrationSettings","Enabled","CreateContactMode","isEditing","onSubmit","onChangeEventLocation","onChangeEventName","startDateHandler","endDateHandler","handleDelete","preventDefault","style","editor","ClassicEditor","details","getData","EventCreator","theEvent","App","handleEventsChange","updateMember","updateToken","timestamp","now","waToken","clear","basename","exact","onTokenChange","component","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.363bafca.chunk.js","sourcesContent":["import axios from 'axios';\nconst qs = require('querystring');\n\n// const instance = axios.create();\n\n\nconst _getAuthTokens = async () => {\n    let body = {\n        grant_type: 'client_credentials',\n        scope: 'auto',\n        obtain_refresh_token: true\n    };\n    await _axiosAuthRequest(body);\n}\n\nconst _refreshAuthTokens = async () => {\n    let body = {\n        grant_type: 'refresh_token',\n        refresh_token: localStorage.getItem('refresh_token')\n    }\n    return _axiosAuthRequest(body);\n}\n\n\nlet isRefreshing = false;\nlet subscribers = [];\n\nconst subscribeTokenRefresh = async (cb) => {\n    subscribers.push(cb);\n}\n\nconst subscribersOnRefreshed = async () => {\n    subscribers.map(cb => cb());\n}\n\naxios.interceptors.response.use(\n    response => response,\n    async err => {\n        console.log('======>', err);\n        const {\n            config,\n            status,\n            data,\n        } = err.response;\n\n\n        if( status===401 && data.reason === 'invalid_token') {\n            if( !isRefreshing) {\n                isRefreshing = true;\n                await _refreshAuthTokens();\n                isRefreshing = false;\n            }\n            config.headers = await makeHeaders();\n            const requestSubscribers = new Promise(resolve => {\n                subscribeTokenRefresh(() => resolve(axios(config)));    // original request\n            });\n\n            subscribersOnRefreshed();\n\n            return requestSubscribers;\n        }\n    }\n);\n\nexport const makeBaseUrl = async () => {\n    await _getTokensIfFirstCall();\n    return process.env.REACT_APP_WA_BASE_URL + '/accounts/' + localStorage.getItem('AccountId');\n}\n\nconst makeAuthHeader = async () => {\n    await _getTokensIfFirstCall();\n    return localStorage.getItem('token_type') + ' ' + localStorage.getItem('access_token');\n}\n\nconst makeHeaders = async () => {\n    await _getTokensIfFirstCall();\n    return {\n        'Content-Type': 'application/json',\n        'Authorization': await makeAuthHeader()\n    }\n}\n\nconst makeBasicAuthHeader = () => {\n    return 'Basic ' + new Buffer('APIKEY:' + process.env.REACT_APP_WA_API_KEY).toString('base64');\n}\n\nconst _saveTokenBitsToLocalStorage = (token) => {\n    localStorage.setItem('AccountId', token.Permissions[0].AccountId);\n    localStorage.setItem('access_token', token.access_token);\n    localStorage.setItem('refresh_token', token.refresh_token);\n    localStorage.setItem('token_type', token.token_type);\n}\n\nconst _getAuthUrl = async () => {\n    return await process.env.REACT_APP_WA_OAUTH_URL;\n}\n\nconst _axiosAuthRequest = async (body) => {\n    await axios({\n        method: 'POST',\n        url: await _getAuthUrl(),\n        data: qs.stringify(body),\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': makeBasicAuthHeader()\n        },\n    })\n        .then((result) => _saveTokenBitsToLocalStorage(result.data))\n        .catch((err) => {\n            console.error('error', err);\n        });\n}\n\nexport const axiosCall = async (method, url, body, cb) => {\n    // console.log(\"Calling - \", url, body, localStorage.getItem('access_token'));\n    await _axiosCall(method,url,null,body,cb, err => cb({err}));\n}\n\nexport const axiosGetCallWithParams = async (url, params, cb) => {\n    await _axiosCall('GET',url, params, null,  cb, err => cb([]));\n}\n\nconst _getTokensIfFirstCall = async () => {\n    if(!localStorage.getItem('access_token')) {\n        await _getAuthTokens();\n    }\n}\n\nconst _axiosCall = async (methd, url, params, body, cb, errorCb) => {\n    await axios({\n        method: methd,\n        url: url,\n        headers: await makeHeaders(),\n        data: body,\n        params: params\n    })\n        .then(result => {\n            // console.log(\"RESULT FROM WA\", result);\n            cb(result.data);\n        })\n        .catch(err => {\n            console.log(\"*****ERROR*******\", err);\n            errorCb(err);\n        });\n}\n\n\n","import {makeBaseUrl, axiosCall, axiosGetCallWithParams} from \"./WildApricotUtils\";\n\nconst eventsUrl = async () => {\n    return await makeBaseUrl()+'/events';\n}\n\nexport const createEvent = async (eventObj, cb) => {\n    // console.log(\"creating new event\", eventObj);\n    await axiosCall('POST', await eventsUrl(), eventObj, cb);\n}\n\nexport const updateEvent = async (eventId, eventObj, cb) => {\n    // console.log(\"creating new event\", eventObj);\n    await axiosCall('PUT', await eventsUrl()+'/'+eventId, eventObj, cb);\n}\n\nexport const deleteEvent = async (eventId, cb) => {\n    // console.log(\"deleting event\", eventId);\n    await axiosCall('DELETE', await eventsUrl()+'/'+eventId, null, cb);\n}\n\nexport const getEventById = async (eventId, cb) => {\n    // console.log(\"getEventById\", eventId);\n    await axiosCall('GET', await eventsUrl()+'/'+eventId, null, cb);\n}\n\nexport const getEvents = async (startDate, cb) => {\n    await axiosGetCallWithParams(await eventsUrl(), {$filter: \"StartDate ge \"+startDate}, result => cb(result.Events) );\n};\n","\nexport const eventConvert = (waEvent) => {\n    let eList = [];\n    if( Array.isArray(waEvent)) {\n        waEvent.forEach((item) => {\n            let x = convertSingleEvent(item);\n            if( Array.isArray(x)) {\n                x.forEach((item) => {\n                    eList.push(item);\n                })\n            } else {\n                eList.push(x);\n            }\n        });\n    } else {\n        eList.push(convertSingleEvent(waEvent));\n    }\n    return eList;\n}\n\nconst convertSingleEvent = (waEvent) => {\n    let event = Object.assign({}, waEvent) ;\n    if ( waEvent.Sessions ) {\n        let eList = [];\n        waEvent.Sessions.forEach((item) => {\n            let e = Object.assign({}, event);\n            e.Id = item.Id;\n            e.parentId = event.Id;\n            e.Title = item.Title;\n            e.StartDate = item.StartDate;\n            e.EndDate = item.EndDate;\n            e.StartTimeSpecified = item.StartTimeSpecified;\n            e.EndTimeSpecified = item.EndTimeSpecified;\n            e.isRecurringSession = true;\n            e.isOrganizedEvent = item.Details && item.Details.Organizer;\n            delete e.Sessions\n            eList.push(e);\n        })\n        return eList;\n    } else {\n        return event;\n    }\n}","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const memberEventTag = () => {\n    return 'member-event'\n}\nexport const searchForSessionAndAdjustFields = (sessionData, sessionId) => {\n    let e = Object.assign({}, sessionData);\n\n    let sess = sessionData.Sessions.filter(x => x.Id === Number(sessionId));\n    // console.log(\"foundSession\", sess);\n    if (sess) {\n        e.sessionId = sess[0].Id;\n        e.Name = sess[0].Title;\n        e.StartDate = sess[0].StartDate;\n        e.EndDate = sess[0].EndDate;\n    }\n    // console.log(\"theEvent\", e);\n    return e;\n}\n\nexport const calendarViewClick = () => {\n    this.props.history.push(`/?mid=${this.state.member.id}`);\n    // console.log(\"CAL VIEW\", this.state.member);\n}\n\nexport const redirect = (path) => {\n    return <Redirect to={{pathname: path}} push />\n}\n\nexport const buildRedirect = (path, member, eventInfo) => {\n    return <Redirect to={{\n        pathname: path,\n        state: {\n            member: member,\n            eventInfo: eventInfo\n        }\n    }} push/>\n}\n\nexport const emptyEvent = () => {\n    return {\n        EventType: 'Rsvp',\n        StartDate: '',\n        EndDate: '',\n        Location: '',\n        RegistrationEnabled: true,\n        EndTimeSpecified: true,\n        RegistrationsLimit: 300,\n        Tags: [memberEventTag()],\n        AccessLevel: 'Public',\n        Details: {\n            DescriptionHtml: '',\n            Organizer: {\n                Id: 0,\n            },\n            AccessControl: {\n                AccessLevel: \"Public\",\n                AvailableForAnyLevel: false,\n                AvailableForLevels: [],\n                AvailableForAnyGroup: false,\n                AvailableForGroups: []\n            },\n            GuestRegistrationSettings: {\n                Enabled: true,\n                CreateContactMode: \"NeverCreateContact\"\n            }\n        },\n        Name: ''\n    }\n}\n\nexport const baseRegistration = (contactId, eventId, message) => {\n    return {\n        Event: {\n            Id: eventId\n        },\n        \"Contact\": {\n            \"Id\" : contactId\n        },\n        \"RegistrationTypeId\": 5895025,\n        \"GuestRegistrationsSummary\": {\n            \"NumberOfGuests\": 0,\n            \"NumberOfGuestsCheckedIn\": 0\n        },\n        \"IsCheckedIn\": false,\n        \"ShowToPublic\": true,\n        \"RegistrationDate\": new Date().toDateString(),\n        \"Memo\": message,\n        \"RecreateInvoice\": false\n    }\n}\n\n\nexport const firstDateEventsToRetrieve = () => {\n    let firstDate = new Date();\n    // firstDate.setFullYear(firstDate.getFullYear() - 1);\n    firstDate.setMonth(firstDate.getMonth() - 6);\n\n    console.log(\"FIRST DATE\", firstDate)\n\n    return firstDate.toISOString()\n}\n\nexport const fullSetStartDate = () => {\n    let firstDate = new Date();\n    firstDate.setFullYear(firstDate.getFullYear() - 1);\n    firstDate.setMonth(firstDate.getMonth() - 6);\n\n    console.log(\"FIRST DATE\", firstDate)\n\n    return firstDate.toISOString()\n}\n","import React,{Component} from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class EventDataLoader extends Component {\n    render() {\n        return (\n            <div className='loader'>\n                <h1>{this.props.name}</h1>\n                <h2>Loading</h2>\n                <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\"/>\n            </div>);\n    }\n}","import {makeBaseUrl, axiosCall} from \"./WildApricotUtils\";\n\nexport const getContact = async (contactId, cb) => {\n    await axiosCall('GET', await makeBaseUrl() + '/contacts/' + contactId, null, result => convertContactData(result, cb));\n}\n\nconst convertContactData = async (data, cb) => {\n    let e = {};\n\n    e.id = data.Id;\n    e.firstName = data.FirstName;\n    e.lastName = data.LastName;\n    e.email = data.Email;\n    e.displayName = data.DisplayName;\n    e.isAdmin = isAdmin(data.FieldValues);\n    e.url = data.Url;\n\n    cb(e);\n}\n\nconst isAdmin = (fields) => {\n    let adminField = fields.filter(x => x.SystemCode === 'AdminRole');\n    return adminField.length>0 && adminField[0].Value.length > 0;\n}","import React, {Component} from 'react';\nimport {getEvents} from '../../utils/WildApricotEvents';\nimport {eventConvert} from '../../utils/WildApricotConversions';\nimport {buildRedirect, memberEventTag, firstDateEventsToRetrieve, fullSetStartDate} from \"../EventCommon\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\n\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport listPlugin from '@fullcalendar/list';\nimport queryString from 'query-string';\nimport {Button} from \"react-bootstrap-buttons\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\n\nimport \"./EventCalendar.css\";\n\nexport default class EventCalendar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.calendarComponentRef = React.createRef()\n\n        this.state = {\n            calendarWeekends: true,\n            fetch: true,\n            showEvent: false,\n            editEvent: false,\n            xid: props.match.params.xid,\n            isLoggedInUser: false\n        }\n    }\n\n\n    async componentDidMount() {\n        const queryStringValues = queryString.parse(this.props.location.search);\n\n        if (queryStringValues.mid && queryStringValues.mid !== \"0\") {\n            await getContact(queryStringValues.mid, (contact) => this.props.onMemberChange(contact))\n            this.setState({isLoggedInUser: true})\n        }\n        // console.log(\"===> getting events.\")\n        await getEvents(firstDateEventsToRetrieve(), data => {\n            var myEvents = this.convertEventData(data);\n            this.props.onEventChange(myEvents);\n            this.setState({fetch: false});\n            // console.log(\"events have been reloaded\")\n        });\n\n        // let's fill out more data for the user.\n        getEvents(fullSetStartDate(), eventData => {\n            var events = this.convertEventData(eventData);\n            // console.log(\"all events = \", events);\n            this.props.onEventChange(events);\n        });\n    }\n\n    convertEventData(eventData) {\n        return eventConvert(eventData).map((event) => {\n            return {\n                id: event.Id,\n                title: event.Name.replace(\"Weekly Workout - \", \"\")\n                    .replace(\"Weekly Workout- \", \"\"),  // shorten string in event\n                start: event.StartDate,\n                end: event.EndDate,\n                Url: event.Url,\n                Tags: event.Tags,\n                backgroundColor: this.getEventColor(event),\n                parentId: event.parentId\n            }\n        });\n    }\n\n    getEventColor(event) {\n        if (/Race/.test(event.Name)) {\n            return 'red'\n        } else if (event.Tags && event.Tags.indexOf(memberEventTag()) > -1) {\n            return 'green'\n        }\n        return 'blue';\n    }\n\n    handleWindowResize(arg) {\n        // console.log(\"RESIZE\", arg);\n        arg.updateSize();\n    }\n\n    createEvent = () => {\n        this.setState({editEvent: this.state.isLoggedInUser, eventInfo: {}})\n    }\n\n    handleEventClick = (arg) => {\n        // console.log(\"going to event\", arg);\n        this.setState({showEvent: true, eventInfo: arg});\n    }\n\n    handleDateClick = (e) => {\n        // console.log(\"DATE CLICKED\", e);\n        this.setState({editEvent: this.state.isLoggedInUser, eventInfo: e});\n    }\n\n    render() {\n        if (this.state.showEvent) {\n            return buildRedirect('showEvent', this.props.member, this.state.eventInfo);\n        }\n        if (this.state.editEvent) {\n            return buildRedirect('createEvent', this.props.member, this.state.eventInfo);\n        }\n        // console.log(\"###STATE\", this.state);\n        // console.log(\"SWTICH\", localStorage.getItem('firstInFromWildApricot'));\n\n        if (this.state.fetch) {\n            // console.log('showing loader');\n            return (<EventDataLoader name=\"Event Calendar\"/>);\n        } else {\n            return (\n                <div className='EventCalendar'>\n                    <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        firstDay={1}\n                        fixedWeekCount={false}\n                        handleWindowResize={true}\n                        contentHeight='auto'\n                        height='auto'\n                        // aspectRatio={3}\n                        header={{\n                            left: 'prev today next',\n                            center: 'title',\n                            right: 'dayGridMonth,timeGridWeek,listMonth'\n                        }}\n                        plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, bootstrapPlugin]}\n                        themeSystem=\"bootstrap\"\n                        displayEventTime={true}\n                        selectable={true}\n                        ref={this.calendarComponentRef}\n                        weekends={this.state.calendarWeekends}\n                        events={this.props.events}\n                        dateClick={this.handleDateClick}\n                        eventClick={this.handleEventClick}\n                        windowResize={this.handleWindowResize}\n                    />\n                    {this.state.isLoggedInUser ? <Button xs onClick={this.createEvent}>Create Event</Button> :\n                        <div></div>}\n                    <div className=\"userName\">\n                        {this.props.member.displayName != null ? this.props.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            )\n        }\n    }\n}","import {makeBaseUrl, axiosCall} from \"./WildApricotUtils\";\n\nconst registrationsUrl = async () => {\n    return await makeBaseUrl()+'/eventregistrations';\n}\n\nexport const getRegistrationsForEventId = async ( eventId, cb) => {\n    await axiosCall( 'GET',await registrationsUrl()+'?eventId='+eventId, null, cb );\n}\n\nexport const createInitialRegistrationForEvent = async (eventId, userId, cb) => {\n    let regTypeId = null;\n    await getRegistrationTypesForEvent(eventId, data => {regTypeId = data[0].Id;});\n    await updateRegistrationTypeForEvent(regTypeId, eventId, data => {\n        // console.log(\"updated registration type\", data);\n    });\n    await sendRegistrationForEvent(eventId, userId, regTypeId, cb);\n}\n\nexport const registerUserForEventId = async (eventId, userId, cb) => {\n    let regType = null;\n    await getRegistrationTypesForEvent(eventId,(data) => {\n        console.log(\"Registration Data -> \", data);\n        regType = data[0].Id;\n    })\n    await sendRegistrationForEvent(eventId, userId, regType, cb)\n}\n\nconst sendRegistrationForEvent = async (eventId, userId, regType, cb) => {\n    await axiosCall('POST', await registrationsUrl(),createRegistration(eventId, userId, '', 0, regType), cb);\n}\n\nexport const unregisterFromEvent = async (regId, cb) => {\n    console.log(\"unregistering\", regId);\n    await axiosCall('DELETE', await registrationsUrl()+'/'+regId, null, cb);\n}\n\nexport const updateRegistration = async (reg, cb) => {\n    let updatedReg = createRegistration(reg.eventId, reg.memberId, reg.message, reg.numGuests);\n    updatedReg.Id = reg.regId;\n    updatedReg.RegistrationDate = reg.dateRegistered;\n\n    await axiosCall('PUT', await registrationsUrl()+'/'+ reg.regId, updatedReg, cb)\n}\n\nconst getRegistrationTypesForEvent = async (eventId, cb) => {\n    await axiosCall('GET', await makeBaseUrl()+'/EventRegistrationTypes?eventId='+eventId, null, cb);\n}\n\nconst updateRegistrationTypeForEvent = async (regTypeId, eventId, cb) => {\n    let regTypeUpdate = createRegistrationTypeUpdateRecord(regTypeId, eventId);\n    await axiosCall('PUT', await makeBaseUrl()+'/EventRegistrationTypes/'+regTypeId, regTypeUpdate, cb);\n}\n\n\nconst createRegistration = (eventId, userId, msg, numGuests, regType) => {\n    return {\n        \"Event\": {\n            \"Id\": eventId\n        },\n        \"Contact\": {\n            \"Id\" : userId\n        },\n        \"RegistrationTypeId\": regType,\n        \"GuestRegistrationsSummary\": {\n            \"NumberOfGuests\": numGuests,\n            \"NumberOfGuestsCheckedIn\": 0\n        },\n        \"IsCheckedIn\": false,\n        \"ShowToPublic\": true,\n        \"RegistrationDate\": new Date(),\n        \"Memo\": msg,\n        \"RecreateInvoice\": false\n    }\n}\n\nconst createRegistrationTypeUpdateRecord = (regTypeId, eventId) => {\n    return {\n        \"Id\": regTypeId,\n        \"EventId\": eventId,\n        \"IsEnabled\": true,\n        \"Description\": \"\",\n        \"BasePrice\": 0.0000,\n        \"GuestPrice\": 0.0000,\n        \"UseTaxScopeSettings\": null,\n        \"Availability\": \"Everyone\",\n        \"AvailableForMembershipLevels\": null,\n        \"GuestRegistrationPolicy\": \"NumberOfGuests\",\n        \"CurrentRegistrantsCount\": 0,\n        \"MultipleRegistrationAllowed\": false,\n        \"UnavailabilityPolicy\": \"Undefined\",\n        \"CancellationBehaviour\": \"DoNotAllow\",\n        \"CancellationDaysBeforeEvent\": null,\n        \"IsWaitlistEnabled\": false,\n        \"Name\": \"RSVP\"\n    }\n}","import {axiosCall} from \"./WildApricotUtils\";\n\nconst makeEmailUrl = () => {\n    return 'https://cors-anywhere.herokuapp.com/https://api.wildapricot.org/v2.2/rpc/' + localStorage.getItem('AccountId') + '/email/SendEmail';\n}\n\nexport const sendEmail = async (eventId, recipArray, subject, text, cb) => {\n    // let msg = makeMessage(eventId,recipArray,subject, text);\n    axiosCall('POST', makeEmailUrl(), makeMessage(eventId, recipArray, subject, text), cb);\n}\n\nconst makeMessage = (eventId, recipArray, subject, text) => {\n    return {\n        Subject: subject,\n        Body: text,\n        Recipients: processRecipients(recipArray),\n        EventId: eventId\n    }\n}\n\nconst processRecipients = (recipArray) => {\n    let recipients = recipArray.map((recip) => {\n        return {\n            Id: recip.memberId,\n            Type: \"IndividualContactRecipient\"\n        }\n    });\n\n    return recipients;\n}\n","import React, {Component} from 'react';\nimport {Button} from 'react-bootstrap-buttons';\nimport {getEventById} from \"../../utils/WildApricotEvents\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport {searchForSessionAndAdjustFields, buildRedirect} from \"../EventCommon\";\nimport {getRegistrationsForEventId, registerUserForEventId, unregisterFromEvent, updateRegistration} from \"../../utils/WildApricotRegistrations\";\nimport {sendEmail} from \"../../utils/WildApricotEmailSender\";\nimport renderHTML from \"react-render-html\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./EventDisplay.css\";\n\nexport default class EventDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetch: true,\n            eventId: '',\n            url: '',\n            event: null,\n            organizer: null,\n            modalToggle: false,\n            rsvpMessage: \"\",\n            rsvpModalTitle: \"\",\n            modalTextBoxType: \"\"\n        }\n        this.toggle = this.toggle.bind(this);\n        this.onChangeRsvpMessage = this.onChangeRsvpMessage.bind(this);\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    toggle() {\n        this.setState({modalToggle:!this.state.modalToggle});\n    }\n\n    async componentDidMount() {\n        // console.log(\"incoming props => \", this.props);\n        // console.log(\"Display Event Info: \", this.props.location.state.eventInfo);\n\n        // recurring event\n        await this.getEvent();\n        await getRegistrationsForEventId(this.props.location.state.eventInfo.event.id, async (data) => {\n            let regArray = data.map((reg) => this.convertRegistrationData(reg));\n            await this.setState({registrations: regArray});\n        })\n        this.setState({fetch:false});\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n            });\n        }\n    }\n\n    async getEvent() {\n        if (this.props.location.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n            await getEventById(this.props.location.state.eventInfo.event.extendedProps.parentId, async (data) => {\n                await this.setState({event: searchForSessionAndAdjustFields(data, this.props.location.state.eventInfo.event.id),});\n            });\n        } else {\n            await getEventById(this.props.location.state.eventInfo.event.id, async (data) => {\n                await this.setState({event: data});\n            });\n        }\n\n    }\n\n    convertRegistrationData(reg) {\n        // console.log(\"CONVERT REG\", reg);\n        return {\n            regId: reg.Id,\n            memberId: reg.Contact.Id,\n            eventId: reg.Event.Id,\n            name: reg.DisplayName,\n            message: reg.Memo,\n            numGuests: reg.GuestRegistrationsSummary && reg.GuestRegistrationsSummary.NumberOfGuests ? reg.GuestRegistrationsSummary.NumberOfGuests : 0,\n            dateRegistered: reg.RegistrationDate\n        }\n    }\n\n    handleEditClick() {\n        this.setState({editEvent: true});\n    }\n\n    canEdit() {\n        return  this.props.location.state.member && this.props.location.state.eventInfo.event.extendedProps.parentId === undefined && (\n            this.props.location.state.member.isAdmin || this.isUserEventOrganizer()\n        )\n    }\n\n    isUserEventOrganizer() {\n        return this.state.event.Details && this.state.event.Details.Organizer && this.props.location.state.member.id === this.state.event.Details.Organizer.Id;\n    }\n\n    notAlreadyRegistered() {\n        return this.props.location.state.member && this.state.registrations.filter( x => this.props.location.state.member.id === x.memberId).length === 0\n    }\n\n    async handleRegisterClick() {\n        await registerUserForEventId(this.props.location.state.eventInfo.event.id, this.props.location.state.member.id, (data) => {\n            this.setState( state => {\n                const registrations = [this.convertRegistrationData(data), ...state.registrations];\n                return {\n                    registrations\n                }\n            });\n        });\n    }\n\n    async handleUnRegisterClick(regId) {\n        await unregisterFromEvent(regId, (data) => {});\n        this.setState( state => {\n            const registrations = state.registrations.filter(reg => reg.regId !== regId);\n            return {\n                registrations\n            }\n        })\n    }\n\n    async handleAddGuest(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        reg.numGuests = reg.numGuests+1;\n        // console.log(\"Registrations \", reg);\n        await updateRegistration(reg, async (data) => {\n            await this.updateRegistrationInState(reg, data);\n        });\n    }\n\n    async handleAddMessage() {\n        let reg = Object.assign({}, this.state.registration);\n        reg.message = this.state.rsvpMessage;\n\n        await updateRegistration(reg, async (data)=> {\n            await this.updateRegistrationInState(reg, data);\n        })\n\n        this.setState({registration:null, rsvpMessage:''});\n        this.toggle();\n    }\n\n    async handleMessagingClick() {\n        await this.setState({rsvpModalTitle: \"Message to RSVP Contacts\", modalTextBoxType: \"textarea\"})\n        this.toggle();\n    }\n\n    async handleSendMessage() {\n        sendEmail(this.state.event.Id, this.state.registrations, this.messageSubject(), this.memberMessage(),data=> {\n            // console.log(data)\n        });\n        await this.setState({\n            rsvpModalTitle: '',\n            rsvpMessage: '',\n            modalTextBoxType: \"text\"\n        });\n        this.toggle();\n    }\n    messageSubject() {\n        return \"Event Update: \"+this.state.event.Name+ \"  \"+ new Date(this.state.event.StartDate).toLocaleString();\n    }\n    memberMessage() {\n        return \"<html><body>This is concerning the event you RSVP'd to on: \"+new Date(this.state.event.StartDate).toLocaleString()+\"<h2>\"+this.state.event.Name\n        + \"</h2><p><h3><u>Message from the event organizer</u>:</h3>\"+ this.state.rsvpMessage+\"</body></html>\";\n    }\n\n    async updateRegistrationInState(reg, data) {\n        await this.setState(state => {\n            const registrations = state.registrations.map((item) => {\n                return item.regId === reg.regId ? this.convertRegistrationData(data) : item;\n            });\n\n            return {\n                registrations\n            };\n        });\n    }\n\n    async addMessageModal(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        await this.setState({registration: reg, rsvpMessage: reg.message, rsvpModalTitle: \"RSVP Message\", modalTextBoxType: \"text\"});\n        this.toggle();\n    }\n\n    onChangeRsvpMessage(x) {\n        this.setState({rsvpMessage: x.target.value});\n    }\n\n    findRegistrationByRegId(regId) {\n        let regArray = this.state.registrations.filter(reg => reg.regId === regId);\n        if (regArray.length === 1) {\n            // console.log(\"find reg returning -> \", regArray[0]);\n            return regArray[0];\n        } else {\n            // console.log(\"find reg by reg id -- returning null\");\n            return null;\n        }\n    }\n    canRegisterForEvent() {\n        let fee = 0.0;\n        let guestFee = 0.0;\n\n        this.state.event.Details.RegistrationTypes.map(reg => {\n            fee += reg.BasePrice;\n            guestFee += reg.GuestPrice;\n            return null;\n        })\n\n        if (this.state.event.Details.TotalDue === 0 && this.state.event.Details.TotalPaid === 0 && this.props.location.state.member.id !== 0\n            && fee === 0.0 && guestFee === 0.0 && !this.state.event.Sessions) {\n            return true;\n        }\n        return false;\n    }\n\n    renderRegistrationData() {\n        return this.state.registrations.map( (reg, index) => {\n            const { regId, name, message, numGuests } = reg;\n            return <tr key={regId}>\n                <td>{name}</td>\n                <td>{numGuests}</td>\n                <td>{message}</td>\n            </tr>\n        })\n    }\n\n    render() {\n        let regData = this.state.registrations ? this.state.registrations.filter(reg => reg.memberId === this.props.location.state.member.id):[];\n\n        if (this.state.fetch) {\n            return (<EventDataLoader name={this.props.location.state.name}/>);\n        } else if (this.state.editEvent) {\n            return buildRedirect('editEvent', this.props.location.state.member, this.props.location.state.eventInfo);\n        } else {\n            return (\n                <div>\n                    <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                    {this.canEdit() && <Button xs btnStyle=\"primary\" onClick={() => this.handleEditClick()}>Edit Event</Button>}\n                    {this.canEdit() && <Button xs btnStyle=\"warning\" onClick={() => this.handleMessagingClick()}>Message RSVPd Members</Button>}\n                    {this.notAlreadyRegistered() && this.canRegisterForEvent() && <Button xs btnStyle=\"success\" onClick={() => this.handleRegisterClick()}>RSVP</Button>}\n                    {regData.length===1 && !this.isUserEventOrganizer() && <Button xs btnStyle=\"danger\" onClick={() => this.handleUnRegisterClick(regData[0].regId) }>Unregister</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.handleAddGuest(regData[0].regId)}>Add Guest</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.addMessageModal(regData[0].regId)}>Add/Edit Comment</Button> }\n\n                    <h2>{this.state.event.Name}</h2>\n                    <div className=\"event_id\">\n                        <label>Event Id: </label>&nbsp;&nbsp;\n                        {this.state.event.Id}\n                    </div>\n                    <div className=\"event-title\">\n                        <label>Event Name: </label>&nbsp;&nbsp;\n                        {this.state.event.Name}\n                    </div>\n                    <div className=\"event-start\">\n                        <label>Event Start Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.StartDate).toLocaleString()}\n                    </div>\n                    <div className=\"event-end\">\n                        <label>Event End Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.EndDate).toLocaleString()}\n                    </div>\n                    <div className=\"location\">\n                        <label>Event Location: </label>&nbsp;&nbsp;\n                        {this.state.event.Location}\n                    </div>\n\n                    {this.state.organizer && <div className=\"organizer\">\n                        <label>Organizer: </label>&nbsp;&nbsp;\n                        {this.state.organizer.displayName + '(' + this.state.organizer.email + ')'}\n                    </div>}\n\n                    <div className=\"descriptionHtml\">\n                        <label>Description: </label><br/>&nbsp;&nbsp;\n                        <div>{renderHTML(this.state.event.Details.DescriptionHtml)}</div>\n                    </div>\n\n                    <div className=\"registrations\">\n                        <label>Registrations: </label><br/>\n                        <table id='registrations' className=\"table-striped\">\n                            <tbody>\n                                <tr>\n                                    {/*<th scope=\"col\">Registration Id</th>*/}\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">#Guests</th>\n                                    {/*<th scope=\"col\">Date Registered</th>*/}\n                                    <th scope=\"col\">Comments</th>\n                                </tr>\n                                {this.renderRegistrationData()}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <Modal\n                        show={this.state.modalToggle}\n                        onHide={this.toggle}\n                        size=\"lg\"\n                        backdrop=\"static\"\n                        aria-labelledby=\"contained-modal-title-vcenter\"\n                        centered\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\n                                {this.state.rsvpModalTitle}\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <h4>Please enter your message:</h4>\n                            <p>\n                                {this.state.modalTextBoxType==='textarea' ? <textarea\n                                        value={this.state.rsvpMessage}\n                                        className=\"form-control\"\n                                        onChange={this.onChangeRsvpMessage}\n                                    />\n                                    :\n                                    <input type=\"text\"\n                                       value={this.state.rsvpMessage}\n                                       className=\"form-control\"\n                                       onChange={this.onChangeRsvpMessage}\n                                       />\n                                    }\n                            </p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button xs btnStyle=\"danger\" onClick={this.toggle}>Cancel</Button>\n                            {this.state.modalTextBoxType === 'textarea' ?\n                                <Button xs onClick={() => this.handleSendMessage()}>Send Message</Button>\n                                :\n                                <Button xs onClick={() => this.handleAddMessage()}>Save</Button>\n                            }\n                        </Modal.Footer>\n                    </Modal>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            );\n        }\n    }\n}","import React, {Component} from 'react';\nimport DatePicker from 'react-datepicker';\nimport {registerLocale, setDefaultLocale} from \"react-datepicker\";\nimport \"./DateTimeRange.css\";\nimport enGB from \"date-fns/locale/en-GB\";\n\nregisterLocale(\"en-GB\", enGB);\n\nsetDefaultLocale(\"en-GB\")\n\nexport default class DateTimeRange extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            startDate: this.props.startDate != null ? new Date(this.props.startDate) : null,\n            endDate: this.props.endDate != null ? new Date(this.props.endDate) : null,\n            maxDate: this.props.endDate ? new Date(new Date(this.props.endDate).setHours(23, 59, 59)) : null,\n            minDate: this.props.startDate ? new Date(new Date(this.props.startDate).setHours(0, 0, 0)) : null,\n        }\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeStartTime = this.onChangeStartTime.bind(this);\n        this.onChangeEndTime = this.onChangeEndTime.bind(this);\n    }\n\n    async onChangeStartDate(date) {\n        let newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes());\n        if (this.props.endDate === null) {\n            let myEndDate = new Date(newDate.getTime());\n            await this.setState({endDate: new Date(myEndDate.setHours(23, 59, 59, 0))});\n        }\n        await this.setState({\n            startDate: newDate,\n            endDate: new Date(this.state.endDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate())),\n            minDate: new Date(date.setHours(0, 0, 0, 0)),\n            maxDate: new Date(date.setHours(23, 59, 59, 0)),\n        });\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    async onChangeStartTime(date) {\n        if (this.state.endDate < this.state.startDate) {\n            await this.setState({\n                startDate: date,\n                endDate: date\n            })\n        } else {\n            await this.setState({startDate: date});\n        }\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    onChangeEndTime(date) {\n        this.setState({endDate: date})\n        this.props.onChangeEndDate(date);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.startDate !== prevState.startDate || this.state.endDate !== prevState.endDate) {\n            this.render();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"dateTimeRangeSelector\">\n                <div className=\"dateTimeRangeSelector-date\">\n                    <label>{this.props.dateLabel}</label>\n                    <DatePicker\n                        selected={this.props.startDate}\n                        placeholderText=\"Click to select a date\"\n                        onChange={date => this.onChangeStartDate(date)}\n                    />\n                </div>\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-start\">\n                            <label>{this.props.startLabel}</label>\n                            <DatePicker\n                                selected={this.props.startDate}\n                                onChange={date => this.onChangeStartTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.minDate}\n                                maxTime={this.state.endDate}\n                                timeCaption=\"Start Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n                        </div> : <div /> }\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-end\">\n                            <label>{this.props.endLabel}</label>\n                            <DatePicker\n                                selected={this.props.endDate}\n                                onChange={date => this.onChangeEndTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.startDate}\n                                maxTime={this.state.maxDate}\n                                timeCaption=\"End Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n\n                        </div>\n                    : <div/>}\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport {getEventById, updateEvent, deleteEvent} from \"../../utils/WildApricotEvents\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {emptyEvent, searchForSessionAndAdjustFields} from \"../EventCommon\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {Button} from \"react-bootstrap-buttons\";\n\nimport \"./EventEditor.css\";\n\nconst editorConfiguration = {\n    link: {\n        link: {\n            decorators: {\n                addTargetToExternalLinks: {\n                    mode: 'automatic',\n                    callback: url => /^(https?:)?\\/\\//.test( url ),\n                    attributes: {\n                        target: '_blank',\n                        rel: 'noopener noreferrer'\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default class EventEditor extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        // let theEvent = Object.assign({}, this.state.event);\n        updateEvent(this.state.event.Id, this.state.event, data => {\n            // console.log(\"UPDATE RESULT\", data)\n        })\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        // await getAuthTokens((data) => this.setState({waToken: data}));\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        // recurring event\n        if (this.props.location.state.eventInfo.event && this.state.fetch) {   // user clicked on an event\n            if (this.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n                await getEventById(this.state.eventInfo.event.extendedProps.parentId, (data) => {\n                    this.setState({event: searchForSessionAndAdjustFields(data, this.state.eventInfo.event.id)});\n                });\n            } else {\n                await getEventById(this.state.eventInfo.event.id, (data) => {\n                    this.setState({event: data});\n                });\n            }\n        } else if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            this.setState({event: {...this.state.event, StartDate: new  Date(this.state.eventInfo.date)}})\n        }\n        this.setState({event:{...this.state.event,StartDate: new Date(this.state.event.StartDate)}});\n        this.setState({event:{...this.state.event,EndDate: new Date(this.state.event.EndDate)}});\n        this.setState({fetch:false});\n\n        if (this.props.location.state.eventInfo.date) {\n            let maxTime = new Date(this.props.location.state.eventInfo.date.getTime());\n            this.setState({...this.state.event, startDate: this.props.location.state.eventInfo.date});\n            this.setState({...this.state.event, endDate: new Date(maxTime.setHours(23,59,59))});\n        }\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n            });\n            // console.log(\"contact\", this.state.organizer);\n        }\n    }\n\n    startDateHandler(date) {\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    handleDelete() {\n        deleteEvent(this.state.event.Id, data => {\n            // console.log(\"DELETE RESULT\", data)\n        });\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    handleStartChange = async (dt) => {\n        await this.setState({date: {...this.state.date, date: dt}});\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <div className=\"form-group\" style={{'textAlign':'center'}}>\n                             <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             <Button xs btnStyle=\"danger\" onClick={() => this.handleDelete()}>Delete Event</Button>\n                         </div>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Event Id: </label>\n                                {this.state.event.Id}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    config={editorConfiguration}\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                            let details = this.state.event.Details;\n                                            details.DescriptionHtml = editor.getData();\n                                            this.setState({event: {...this.state.event, Details: details}});\n                                        }\n                                    }\n                                />\n                            </div>\n\n                            <div className=\"form-group button\" style={{'textAlign':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Save Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {createEvent} from \"../../utils/WildApricotEvents\";\nimport {emptyEvent} from \"../EventCommon\";\nimport \"./EventCreator.css\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {createInitialRegistrationForEvent} from \"../../utils/WildApricotRegistrations\";\nimport {Button} from \"react-bootstrap-buttons\";\n\nexport default class EventCreator extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        let theEvent = Object.assign({}, this.state.event);\n        theEvent.StartDate = theEvent.StartDate.toISOString();\n        theEvent.EndDate = theEvent.EndDate.toISOString();\n        createEvent(theEvent, (data) => {\n            createInitialRegistrationForEvent(data, this.props.location.state.member.id, data=> {\n                // console.log(\"INITIAL REG\", data)\n            });\n        });\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        let startDate = null;\n        let endDate = null;\n\n        await this.setState({\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        // console.log(\"STATE\",this.state);\n        if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            startDate = new  Date(new Date(this.state.eventInfo.date).setHours(8,0,0));\n            endDate = new  Date(new Date(this.state.eventInfo.date).setHours(20,0,0));\n        }\n\n        await this.setState({event: {...this.state.event, StartDate: startDate}});\n        await this.setState({event: {...this.state.event, EndDate: endDate}});\n        await this.setState({fetch:false});\n\n        let details = Object.assign({}, this.state.event.Details)\n         details.Organizer = {\n            Id: this.props.location.state.member.id\n        }\n        this.setState({event: {...this.state.event, Details:details}});\n        // console.log(\"STATE\", this.state);\n    }\n\n    startDateHandler(date) {\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.event.StartDate !== prevState.event.StartDate || this.state.event.EndDate !== prevState.event.EndDate) {\n            this.render()\n        }\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <form onSubmit={this.onSubmit}>\n                             <div className=\"form-group\" style={{'text-align':'center'}}>\n                                 <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                        let details = this.state.event.Details;\n                                        details.DescriptionHtml = editor.getData();\n                                        this.setState({event: {...this.state.event, Details: details}});\n                                    } }\n                                />\n                            </div>\n\n                            <div className=\"form-group\" style={{'text-align':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Create Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport EventCalendar from \"./components/event-calendar/EventCalendar\";\nimport EventDisplay from \"./components/event-display/EventDisplay\";\nimport EventEditor from \"./components/event-edit/EventEditor\";\nimport EventCreator from \"./components/event-create/EventCreator\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        localStorage.clear();\n        this.state = {\n            member: {id: 0, isAdmin: false},\n            events: []\n        }\n    }\n\n    handleEventsChange = (events) => {\n        this.setState({events: events})\n    }\n\n    updateMember = (member) => {\n        // console.log(\"Setting member data -> \", member)\n        if (member != null) {\n            this.setState({member: member});\n        }\n    }\n\n    updateToken = (token) => {\n        // console.log(\"Updating Token -> \", token)\n        this.setState( {token: {timestamp: Date.now(), waToken: token}})\n    }\n\n    render() {\n        return (\n            <Router basename=\"/\">\n                <div className=\"App container-fluid\">\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <EventCalendar  {...props}\n                                                                               onEventChange={this.handleEventsChange}\n                                                                               events={this.state.events}\n                                                                               onTokenChange={this.updateToken}\n                                                                               token={this.state.token}\n                                                                               onMemberChange={this.updateMember}\n                                                                               member={this.state.member}\n                        />}/>\n                        <Route exact path=\"/showEvent\" component={EventDisplay}/>\n                        <Route exact path=\"/editEvent\" component={EventEditor}/>\n                        <Route exact path=\"/createEvent\" component={EventCreator}/>\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}