{"version":3,"sources":["utils/WildApricotUtils.js","utils/WildApricotEvents.js","utils/WildApricotConversions.js","components/EventCommon.js","utils/WildApricotContacts.js","components/event-calendar/EventCalendar.js","components/event-data-loader/EventDataLoader.js","utils/WildApricotRegistrations.js","utils/WildApricotEmailSender.js","components/event-display/EventDisplay.js","components/date-time-range/DateTimeRange.js","components/event-edit/EventEditor.js","components/event-create/EventCreator.js","App.js","serviceWorker.js","index.js"],"names":["qs","require","instance","axios","create","_getAuthTokens","a","body","grant_type","scope","obtain_refresh_token","_axiosAuthRequest","_refreshAuthTokens","refresh_token","localStorage","getItem","isRefreshing","subscribers","subscribeTokenRefresh","cb","push","subscribersOnRefreshed","map","interceptors","response","use","err","config","status","data","reason","makeHeaders","headers","requestSubscribers","Promise","resolve","makeBaseUrl","_getTokensIfFirstCall","process","makeAuthHeader","_getAuthUrl","stringify","Buffer","toString","method","url","then","result","token","setItem","Permissions","AccountId","access_token","token_type","catch","console","error","axiosCall","_axiosCall","axiosGetCallWithParams","params","methd","errorCb","log","eventsUrl","createEvent","eventObj","updateEvent","eventId","deleteEvent","getEventById","getEvents","startDate","$filter","Events","eventConvert","waEvent","eList","Array","isArray","forEach","item","x","convertSingleEvent","event","Object","assign","Sessions","e","Id","parentId","Title","StartDate","EndDate","StartTimeSpecified","EndTimeSpecified","isRecurringSession","isOrganizedEvent","Details","Organizer","searchForSessionAndAdjustFields","sessionData","sessionId","sess","filter","Number","Name","buildRedirect","path","member","eventInfo","to","pathname","state","firstDateEventsToRetrieve","firstDate","Date","setFullYear","getFullYear","setMonth","getMonth","toISOString","getContact","contactId","convertContactData","id","firstName","FirstName","lastName","LastName","email","Email","displayName","DisplayName","isAdmin","FieldValues","Url","fields","adminField","SystemCode","length","Value","EventCalendar","props","setState","editEvent","isLoggedInUser","handleEventClick","arg","showEvent","handleDateClick","calendarComponentRef","React","createRef","calendarWeekends","xid","match","queryStringValues","queryString","parse","this","location","search","mid","contact","onMemberChange","myEvents","title","replace","start","end","Tags","backgroundColor","getEventColor","onEventChange","test","indexOf","updateSize","className","defaultView","firstDay","fixedWeekCount","handleWindowResize","contentHeight","height","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","bootstrapPlugin","themeSystem","displayEventTime","selectable","ref","weekends","events","dateClick","eventClick","windowResize","xs","onClick","Component","EventDataLoader","name","type","color","width","registrationsUrl","getRegistrationsForEventId","createInitialRegistrationForEvent","userId","regTypeId","getRegistrationTypesForEvent","updateRegistrationTypeForEvent","sendRegistrationForEvent","registerUserForEventId","regType","createRegistration","unregisterFromEvent","regId","updateRegistration","reg","updatedReg","memberId","message","numGuests","RegistrationDate","dateRegistered","regTypeUpdate","createRegistrationTypeUpdateRecord","msg","sendEmail","recipArray","subject","text","makeMessage","Subject","Body","Recipients","processRecipients","EventId","recip","Type","EventDisplay","fetch","organizer","modalToggle","rsvpMessage","rsvpModalTitle","modalTextBoxType","toggle","bind","onChangeRsvpMessage","history","getEvent","regArray","convertRegistrationData","registrations","extendedProps","Contact","Event","Memo","GuestRegistrationsSummary","NumberOfGuests","undefined","isUserEventOrganizer","findRegistrationByRegId","updateRegistrationInState","registration","messageSubject","memberMessage","toLocaleString","target","value","fee","guestFee","RegistrationTypes","BasePrice","GuestPrice","TotalDue","TotalPaid","index","key","regData","calendarViewClick","canEdit","btnStyle","handleEditClick","handleMessagingClick","notAlreadyRegistered","canRegisterForEvent","handleRegisterClick","handleUnRegisterClick","handleAddGuest","addMessageModal","Location","renderHTML","DescriptionHtml","renderRegistrationData","Modal","show","onHide","size","backdrop","aria-labelledby","centered","Header","closeButton","onChange","Footer","handleSendMessage","handleAddMessage","registerLocale","enGB","setDefaultLocale","DateTimeRange","endDate","maxDate","setHours","minDate","onChangeStartDate","onChangeStartTime","onChangeEndTime","date","newDate","getDate","getHours","getMinutes","myEndDate","getTime","onChangeEndDate","prevProps","prevState","snapshot","render","dateLabel","selected","placeholderText","startLabel","showTimeSelect","showTimeSelectOnly","timeIntervals","minTime","maxTime","timeCaption","dateFormat","endLabel","editorConfiguration","link","decorators","addTargetToExternalLinks","mode","callback","attributes","rel","EventEditor","handleStartChange","dt","EventType","RegistrationEnabled","RegistrationsLimit","AccessLevel","AccessControl","AvailableForAnyLevel","AvailableForLevels","AvailableForAnyGroup","AvailableForGroups","GuestRegistrationSettings","Enabled","CreateContactMode","isEditing","onSubmit","onChangeEventLocation","onChangeEventName","startDateHandler","endDateHandler","handleDelete","preventDefault","style","editor","ClassicEditor","details","getData","EventCreator","theEvent","App","handleEventsChange","updateMember","updateToken","timestamp","now","waToken","clear","basename","exact","onTokenChange","component","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.1d6457e1.chunk.js","sourcesContent":["import axios from 'axios';\nconst qs = require('querystring');\n\nconst instance = axios.create();\n\n\nconst _getAuthTokens = async () => {\n    let body = {\n        grant_type: 'client_credentials',\n        scope: 'auto',\n        obtain_refresh_token: true\n    };\n    await _axiosAuthRequest(body);\n}\n\nconst _refreshAuthTokens = async () => {\n    let body = {\n        grant_type: 'refresh_token',\n        refresh_token: localStorage.getItem('refresh_token')\n    }\n    return _axiosAuthRequest(body);\n}\n\n\nlet isRefreshing = false;\nlet subscribers = [];\n\nconst subscribeTokenRefresh = async (cb) => {\n    subscribers.push(cb);\n}\n\nconst subscribersOnRefreshed = async () => {\n    subscribers.map(cb => cb());\n}\n\ninstance.interceptors.response.use(\n    response => response,\n    async err => {\n        const {\n            config,\n            status,\n            data,\n        } = err.response;\n\n\n        if( status===401 && data.reason === 'invalid_token') {\n            if( !isRefreshing) {\n                isRefreshing = true;\n                await _refreshAuthTokens();\n                isRefreshing = false;\n            }\n            config.headers = await makeHeaders();\n            const requestSubscribers = new Promise(resolve => {\n                subscribeTokenRefresh(() => resolve(axios(config)));    // original request\n            });\n\n            subscribersOnRefreshed();\n\n            return requestSubscribers;\n        }\n    }\n);\n\nexport const makeBaseUrl = async () => {\n    await _getTokensIfFirstCall();\n    return process.env.REACT_APP_WA_BASE_URL + '/accounts/' + localStorage.getItem('AccountId');\n}\n\nconst makeAuthHeader = async () => {\n    await _getTokensIfFirstCall();\n    return localStorage.getItem('token_type') + ' ' + localStorage.getItem('access_token');\n}\n\nconst makeHeaders = async () => {\n    await _getTokensIfFirstCall();\n    return {\n        'Content-Type': 'application/json',\n        'Authorization': await makeAuthHeader()\n    }\n}\n\nconst makeBasicAuthHeader = () => {\n    return 'Basic ' + new Buffer('APIKEY:' + process.env.REACT_APP_WA_API_KEY).toString('base64');\n}\n\nconst _saveTokenBitsToLocalStorage = (token) => {\n    localStorage.setItem('AccountId', token.Permissions[0].AccountId);\n    localStorage.setItem('access_token', token.access_token);\n    localStorage.setItem('refresh_token', token.refresh_token);\n    localStorage.setItem('token_type', token.token_type);\n}\n\nconst _getAuthUrl = async () => {\n    return await process.env.REACT_APP_WA_OAUTH_URL;\n}\n\nconst _axiosAuthRequest = async (body) => {\n    await instance({\n        method: 'POST',\n        url: await _getAuthUrl(),\n        data: qs.stringify(body),\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': makeBasicAuthHeader()\n        },\n    })\n        .then((result) => _saveTokenBitsToLocalStorage(result.data))\n        .catch((err) => {\n            console.error('error', err);\n        });\n}\n\nexport const axiosCall = async (method, url, body, cb) => {\n    // console.log(\"Calling - \", url, body, localStorage.getItem('access_token'));\n    await _axiosCall(method,url,null,body,cb, err => cb({err}));\n}\n\nexport const axiosGetCallWithParams = async (url, params, cb) => {\n    await _axiosCall('GET',url, params, null,  cb, err => cb([]));\n}\n\nconst _getTokensIfFirstCall = async () => {\n    if(!localStorage.getItem('access_token')) {\n        await _getAuthTokens();\n    }\n}\n\nconst _axiosCall = async (methd, url, params, body, cb, errorCb) => {\n    await instance({\n        method: methd,\n        url: url,\n        headers: await makeHeaders(),\n        data: body,\n        params: params\n    })\n        .then(result => {\n            // console.log(\"RESULT FROM WA\", result);\n            cb(result.data);\n        })\n        .catch(err => {\n            console.log(\"*****ERROR*******\", err);\n            errorCb(err);\n        });\n}\n\n\n","import {makeBaseUrl, axiosCall, axiosGetCallWithParams} from \"./WildApricotUtils\";\n\nconst eventsUrl = async () => {\n    return await makeBaseUrl()+'/events';\n}\n\nexport const createEvent = async (eventObj, cb) => {\n    // console.log(\"creating new event\", eventObj);\n    await axiosCall('POST', await eventsUrl(), eventObj, cb);\n}\n\nexport const updateEvent = async (eventId, eventObj, cb) => {\n    // console.log(\"creating new event\", eventObj);\n    await axiosCall('PUT', await eventsUrl()+'/'+eventId, eventObj, cb);\n}\n\nexport const deleteEvent = async (eventId, cb) => {\n    // console.log(\"deleting event\", eventId);\n    await axiosCall('DELETE', await eventsUrl()+'/'+eventId, null, cb);\n}\n\nexport const getEventById = async (eventId, cb) => {\n    // console.log(\"getEventById\", eventId);\n    await axiosCall('GET', await eventsUrl()+'/'+eventId, null, cb);\n}\n\nexport const getEvents = async (startDate, cb) => {\n    await axiosGetCallWithParams(await eventsUrl(), {$filter: \"StartDate ge \"+startDate}, result => cb(result.Events) );\n};\n","\nexport const eventConvert = (waEvent) => {\n    let eList = [];\n    if( Array.isArray(waEvent)) {\n        waEvent.forEach((item) => {\n            let x = convertSingleEvent(item);\n            if( Array.isArray(x)) {\n                x.forEach((item) => {\n                    eList.push(item);\n                })\n            } else {\n                eList.push(x);\n            }\n        });\n    } else {\n        eList.push(convertSingleEvent(waEvent));\n    }\n    return eList;\n}\n\nconst convertSingleEvent = (waEvent) => {\n    let event = Object.assign({}, waEvent) ;\n    if ( waEvent.Sessions ) {\n        let eList = [];\n        waEvent.Sessions.forEach((item) => {\n            let e = Object.assign({}, event);\n            e.Id = item.Id;\n            e.parentId = event.Id;\n            e.Title = item.Title;\n            e.StartDate = item.StartDate;\n            e.EndDate = item.EndDate;\n            e.StartTimeSpecified = item.StartTimeSpecified;\n            e.EndTimeSpecified = item.EndTimeSpecified;\n            e.isRecurringSession = true;\n            e.isOrganizedEvent = item.Details && item.Details.Organizer;\n            delete e.Sessions\n            eList.push(e);\n        })\n        return eList;\n    } else {\n        return event;\n    }\n}","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\n\nexport const memberEventTag = () => {\n    return 'member-event'\n}\nexport const searchForSessionAndAdjustFields = (sessionData, sessionId) => {\n    let e = Object.assign({}, sessionData);\n\n    let sess = sessionData.Sessions.filter(x => x.Id === Number(sessionId));\n    // console.log(\"foundSession\", sess);\n    if (sess) {\n        e.sessionId = sess[0].Id;\n        e.Name = sess[0].Title;\n        e.StartDate = sess[0].StartDate;\n        e.EndDate = sess[0].EndDate;\n    }\n    // console.log(\"theEvent\", e);\n    return e;\n}\n\nexport const calendarViewClick = () => {\n    this.props.history.push(`/?mid=${this.state.member.id}`);\n    // console.log(\"CAL VIEW\", this.state.member);\n}\n\nexport const redirect = (path) => {\n    return <Redirect to={{pathname: path}} push />\n}\n\nexport const buildRedirect = (path, member, eventInfo) => {\n    return <Redirect to={{\n        pathname: path,\n        state: {\n            member: member,\n            eventInfo: eventInfo\n        }\n    }} push/>\n}\n\nexport const emptyEvent = () => {\n    return {\n        EventType: 'Rsvp',\n        StartDate: '',\n        EndDate: '',\n        Location: '',\n        RegistrationEnabled: true,\n        EndTimeSpecified: true,\n        RegistrationsLimit: 300,\n        Tags: [memberEventTag()],\n        AccessLevel: 'Public',\n        Details: {\n            DescriptionHtml: '',\n            Organizer: {\n                Id: 0,\n            },\n            AccessControl: {\n                AccessLevel: \"Public\",\n                AvailableForAnyLevel: false,\n                AvailableForLevels: [],\n                AvailableForAnyGroup: false,\n                AvailableForGroups: []\n            },\n            GuestRegistrationSettings: {\n                Enabled: true,\n                CreateContactMode: \"NeverCreateContact\"\n            }\n        },\n        Name: ''\n    }\n}\n\nexport const baseRegistration = (contactId, eventId, message) => {\n    return {\n        Event: {\n            Id: eventId\n        },\n        \"Contact\": {\n            \"Id\" : contactId\n        },\n        \"RegistrationTypeId\": 5895025,\n        \"GuestRegistrationsSummary\": {\n            \"NumberOfGuests\": 0,\n            \"NumberOfGuestsCheckedIn\": 0\n        },\n        \"IsCheckedIn\": false,\n        \"ShowToPublic\": true,\n        \"RegistrationDate\": new Date().toDateString(),\n        \"Memo\": message,\n        \"RecreateInvoice\": false\n    }\n}\n\n\nexport const firstDateEventsToRetrieve = () => {\n    let firstDate = new Date();\n    firstDate.setFullYear(firstDate.getFullYear() - 1);\n    firstDate.setMonth(firstDate.getMonth() - 6);\n\n    // console.log(\"FIRST DATE\", firstDate)\n\n    return firstDate.toISOString()\n}\n","import {makeBaseUrl, axiosCall} from \"./WildApricotUtils\";\n\nexport const getContact = async (contactId, cb) => {\n    await axiosCall('GET', await makeBaseUrl() + '/contacts/' + contactId, null, result => convertContactData(result, cb));\n}\n\nconst convertContactData = async (data, cb) => {\n    let e = {};\n\n    e.id = data.Id;\n    e.firstName = data.FirstName;\n    e.lastName = data.LastName;\n    e.email = data.Email;\n    e.displayName = data.DisplayName;\n    e.isAdmin = isAdmin(data.FieldValues);\n    e.url = data.Url;\n\n    cb(e);\n}\n\nconst isAdmin = (fields) => {\n    let adminField = fields.filter(x => x.SystemCode === 'AdminRole');\n    return adminField.length>0 && adminField[0].Value.length > 0;\n}","import React, {Component} from 'react';\nimport {getEvents} from '../../utils/WildApricotEvents';\nimport {eventConvert} from '../../utils/WildApricotConversions';\nimport {buildRedirect,memberEventTag,firstDateEventsToRetrieve} from \"../EventCommon\";\n\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport listPlugin from '@fullcalendar/list';\nimport queryString from 'query-string';\nimport {Button} from \"react-bootstrap-buttons\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\n\nimport \"./EventCalendar.css\";\n\nexport default class EventCalendar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.calendarComponentRef = React.createRef()\n\n        this.state = {\n            calendarWeekends: true,\n            showEvent: false,\n            editEvent: false,\n            xid: props.match.params.xid,\n            isLoggedInUser: false\n        }\n    }\n\n\n    async componentDidMount() {\n        const queryStringValues = queryString.parse(this.props.location.search);\n\n        if ( queryStringValues.mid && queryStringValues.mid !== \"0\") {\n            await getContact(queryStringValues.mid, (contact) => this.props.onMemberChange(contact))\n            this.setState({isLoggedInUser:true})\n        }\n        // console.log(\"===> getting events.\")\n        await getEvents(firstDateEventsToRetrieve(), (data) => {\n            var myEvents = eventConvert(data).map((event) => {\n                return {\n                    id: event.Id,\n                    title: event.Name.replace(\"Weekly Workout - \", \"\")\n                        .replace(\"Weekly Workout- \",\"\"),  // shorten string in event\n                    start: event.StartDate,\n                    end: event.EndDate,\n                    Url: event.Url,\n                    Tags: event.Tags,\n                    backgroundColor: this.getEventColor(event),\n                    parentId: event.parentId\n                }\n            });\n            this.props.onEventChange(myEvents);\n            // console.log(\"events have been reloaded\")\n        });\n    }\n\n    getEventColor(event) {\n        if ( /Race/.test(event.Name) ) {\n            return 'red'\n        } else if ( event.Tags && event.Tags.indexOf(memberEventTag())> -1) {\n             return 'green'\n        }\n        return 'blue';\n    }\n\n    handleWindowResize(arg) {\n        // console.log(\"RESIZE\", arg);\n        arg.updateSize();\n    }\n\n    createEvent = () => {\n        this.setState({editEvent: this.state.isLoggedInUser, eventInfo: {}})\n    }\n\n    handleEventClick = (arg) => {\n        // console.log(\"going to event\", arg);\n        this.setState({showEvent: true, eventInfo: arg});\n    }\n\n    handleDateClick = (e) => {\n        // console.log(\"DATE CLICKED\", e);\n        this.setState({editEvent: this.state.isLoggedInUser, eventInfo: e});\n    }\n\n    render() {\n        if (this.state.showEvent) {\n            return buildRedirect('showEvent', this.props.member, this.state.eventInfo);\n        }\n        if (this.state.editEvent) {\n            return buildRedirect('createEvent', this.props.member, this.state.eventInfo);\n        }\n        return (\n            <div className='EventCalendar'>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    firstDay={1}\n                    fixedWeekCount={false}\n                    handleWindowResize={true}\n                    contentHeight='auto'\n                    height='auto'\n                    // aspectRatio={3}\n                    header={{\n                        left: 'prev today next',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,listMonth'\n                    }}\n                    plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, bootstrapPlugin]}\n                    themeSystem=\"bootstrap\"\n                    displayEventTime={true}\n                    selectable={true}\n                    ref={this.calendarComponentRef}\n                    weekends={this.state.calendarWeekends}\n                    events={this.props.events}\n                    dateClick={this.handleDateClick}\n                    eventClick={this.handleEventClick}\n                    windowResize={this.handleWindowResize}\n                />\n                {this.state.isLoggedInUser ? <Button xs onClick={this.createEvent}>Create Event</Button> : <div> </div> }\n                <div className=\"userName\">\n                    {this.props.member.displayName != null ? this.props.member.displayName : 'Anonymous'}\n                </div>\n            </div>\n        )\n    }\n}","import React,{Component} from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class EventDataLoader extends Component {\n    render() {\n        return (\n            <div className='loader'>\n                <h1>{this.props.name}</h1>\n                <h2>Loading</h2>\n                <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\"/>\n            </div>);\n    }\n}","import {makeBaseUrl, axiosCall} from \"./WildApricotUtils\";\n\nconst registrationsUrl = async () => {\n    return await makeBaseUrl()+'/eventregistrations';\n}\n\nexport const getRegistrationsForEventId = async ( eventId, cb) => {\n    await axiosCall( 'GET',await registrationsUrl()+'?eventId='+eventId, null, cb );\n}\n\nexport const createInitialRegistrationForEvent = async (eventId, userId, cb) => {\n    let regTypeId = null;\n    await getRegistrationTypesForEvent(eventId, data => {regTypeId = data[0].Id;});\n    await updateRegistrationTypeForEvent(regTypeId, eventId, data => {\n        // console.log(\"updated registration type\", data);\n    });\n    await sendRegistrationForEvent(eventId, userId, regTypeId, cb);\n}\n\nexport const registerUserForEventId = async (eventId, userId, cb) => {\n    let regType = null;\n    await getRegistrationTypesForEvent(eventId,(data) => {\n        console.log(\"Registration Data -> \", data);\n        regType = data[0].Id;\n    })\n    await sendRegistrationForEvent(eventId, userId, regType, cb)\n}\n\nconst sendRegistrationForEvent = async (eventId, userId, regType, cb) => {\n    await axiosCall('POST', await registrationsUrl(),createRegistration(eventId, userId, '', 0, regType), cb);\n}\n\nexport const unregisterFromEvent = async (regId, cb) => {\n    console.log(\"unregistering\", regId);\n    await axiosCall('DELETE', await registrationsUrl()+'/'+regId, null, cb);\n}\n\nexport const updateRegistration = async (reg, cb) => {\n    let updatedReg = createRegistration(reg.eventId, reg.memberId, reg.message, reg.numGuests);\n    updatedReg.Id = reg.regId;\n    updatedReg.RegistrationDate = reg.dateRegistered;\n\n    await axiosCall('PUT', await registrationsUrl()+'/'+ reg.regId, updatedReg, cb)\n}\n\nconst getRegistrationTypesForEvent = async (eventId, cb) => {\n    await axiosCall('GET', await makeBaseUrl()+'/EventRegistrationTypes?eventId='+eventId, null, cb);\n}\n\nconst updateRegistrationTypeForEvent = async (regTypeId, eventId, cb) => {\n    let regTypeUpdate = createRegistrationTypeUpdateRecord(regTypeId, eventId);\n    await axiosCall('PUT', await makeBaseUrl()+'/EventRegistrationTypes/'+regTypeId, regTypeUpdate, cb);\n}\n\n\nconst createRegistration = (eventId, userId, msg, numGuests, regType) => {\n    return {\n        \"Event\": {\n            \"Id\": eventId\n        },\n        \"Contact\": {\n            \"Id\" : userId\n        },\n        \"RegistrationTypeId\": regType,\n        \"GuestRegistrationsSummary\": {\n            \"NumberOfGuests\": numGuests,\n            \"NumberOfGuestsCheckedIn\": 0\n        },\n        \"IsCheckedIn\": false,\n        \"ShowToPublic\": true,\n        \"RegistrationDate\": new Date(),\n        \"Memo\": msg,\n        \"RecreateInvoice\": false\n    }\n}\n\nconst createRegistrationTypeUpdateRecord = (regTypeId, eventId) => {\n    return {\n        \"Id\": regTypeId,\n        \"EventId\": eventId,\n        \"IsEnabled\": true,\n        \"Description\": \"\",\n        \"BasePrice\": 0.0000,\n        \"GuestPrice\": 0.0000,\n        \"UseTaxScopeSettings\": null,\n        \"Availability\": \"Everyone\",\n        \"AvailableForMembershipLevels\": null,\n        \"GuestRegistrationPolicy\": \"NumberOfGuests\",\n        \"CurrentRegistrantsCount\": 0,\n        \"MultipleRegistrationAllowed\": false,\n        \"UnavailabilityPolicy\": \"Undefined\",\n        \"CancellationBehaviour\": \"DoNotAllow\",\n        \"CancellationDaysBeforeEvent\": null,\n        \"IsWaitlistEnabled\": false,\n        \"Name\": \"RSVP\"\n    }\n}","import {axiosCall} from \"./WildApricotUtils\";\n\nconst makeEmailUrl = () => {\n    return 'https://cors-anywhere.herokuapp.com/https://api.wildapricot.org/v2.2/rpc/' + localStorage.getItem('AccountId') + '/email/SendEmail';\n}\n\nexport const sendEmail = async (eventId, recipArray, subject, text, cb) => {\n    // let msg = makeMessage(eventId,recipArray,subject, text);\n    axiosCall('POST', makeEmailUrl(), makeMessage(eventId, recipArray, subject, text), cb);\n}\n\nconst makeMessage = (eventId, recipArray, subject, text) => {\n    return {\n        Subject: subject,\n        Body: text,\n        Recipients: processRecipients(recipArray),\n        EventId: eventId\n    }\n}\n\nconst processRecipients = (recipArray) => {\n    let recipients = recipArray.map((recip) => {\n        return {\n            Id: recip.memberId,\n            Type: \"IndividualContactRecipient\"\n        }\n    });\n\n    return recipients;\n}\n","import React, {Component} from 'react';\nimport {Button} from 'react-bootstrap-buttons';\nimport {getEventById} from \"../../utils/WildApricotEvents\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport {searchForSessionAndAdjustFields, buildRedirect} from \"../EventCommon\";\nimport {getRegistrationsForEventId, registerUserForEventId, unregisterFromEvent, updateRegistration} from \"../../utils/WildApricotRegistrations\";\nimport {sendEmail} from \"../../utils/WildApricotEmailSender\";\nimport renderHTML from \"react-render-html\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./EventDisplay.css\";\n\nexport default class EventDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetch: true,\n            eventId: '',\n            url: '',\n            event: null,\n            organizer: null,\n            modalToggle: false,\n            rsvpMessage: \"\",\n            rsvpModalTitle: \"\",\n            modalTextBoxType: \"\"\n        }\n        this.toggle = this.toggle.bind(this);\n        this.onChangeRsvpMessage = this.onChangeRsvpMessage.bind(this);\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    toggle() {\n        this.setState({modalToggle:!this.state.modalToggle});\n    }\n\n    async componentDidMount() {\n        // console.log(\"incoming props => \", this.props);\n        // console.log(\"Display Event Info: \", this.props.location.state.eventInfo);\n\n        // recurring event\n        await this.getEvent();\n        await getRegistrationsForEventId(this.props.location.state.eventInfo.event.id, async (data) => {\n            let regArray = data.map((reg) => this.convertRegistrationData(reg));\n            await this.setState({registrations: regArray});\n        })\n        this.setState({fetch:false});\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n            });\n        }\n    }\n\n    async getEvent() {\n        if (this.props.location.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n            await getEventById(this.props.location.state.eventInfo.event.extendedProps.parentId, async (data) => {\n                await this.setState({event: searchForSessionAndAdjustFields(data, this.props.location.state.eventInfo.event.id),});\n            });\n        } else {\n            await getEventById(this.props.location.state.eventInfo.event.id, async (data) => {\n                await this.setState({event: data});\n            });\n        }\n\n    }\n\n    convertRegistrationData(reg) {\n        // console.log(\"CONVERT REG\", reg);\n        return {\n            regId: reg.Id,\n            memberId: reg.Contact.Id,\n            eventId: reg.Event.Id,\n            name: reg.DisplayName,\n            message: reg.Memo,\n            numGuests: reg.GuestRegistrationsSummary && reg.GuestRegistrationsSummary.NumberOfGuests ? reg.GuestRegistrationsSummary.NumberOfGuests : 0,\n            dateRegistered: reg.RegistrationDate\n        }\n    }\n\n    handleEditClick() {\n        this.setState({editEvent: true});\n    }\n\n    canEdit() {\n        return  this.props.location.state.member && this.props.location.state.eventInfo.event.extendedProps.parentId === undefined && (\n            this.props.location.state.member.isAdmin || this.isUserEventOrganizer()\n        )\n    }\n\n    isUserEventOrganizer() {\n        return this.state.event.Details && this.state.event.Details.Organizer && this.props.location.state.member.id === this.state.event.Details.Organizer.Id;\n    }\n\n    notAlreadyRegistered() {\n        return this.props.location.state.member && this.state.registrations.filter( x => this.props.location.state.member.id === x.memberId).length === 0\n    }\n\n    async handleRegisterClick() {\n        await registerUserForEventId(this.props.location.state.eventInfo.event.id, this.props.location.state.member.id, (data) => {\n            this.setState( state => {\n                const registrations = [this.convertRegistrationData(data), ...state.registrations];\n                return {\n                    registrations\n                }\n            });\n        });\n    }\n\n    async handleUnRegisterClick(regId) {\n        await unregisterFromEvent(regId, (data) => {});\n        this.setState( state => {\n            const registrations = state.registrations.filter(reg => reg.regId !== regId);\n            return {\n                registrations\n            }\n        })\n    }\n\n    async handleAddGuest(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        reg.numGuests = reg.numGuests+1;\n        // console.log(\"Registrations \", reg);\n        await updateRegistration(reg, async (data) => {\n            await this.updateRegistrationInState(reg, data);\n        });\n    }\n\n    async handleAddMessage() {\n        let reg = Object.assign({}, this.state.registration);\n        reg.message = this.state.rsvpMessage;\n\n        await updateRegistration(reg, async (data)=> {\n            await this.updateRegistrationInState(reg, data);\n        })\n\n        this.setState({registration:null, rsvpMessage:''});\n        this.toggle();\n    }\n\n    async handleMessagingClick() {\n        await this.setState({rsvpModalTitle: \"Message to RSVP Contacts\", modalTextBoxType: \"textarea\"})\n        this.toggle();\n    }\n\n    async handleSendMessage() {\n        sendEmail(this.state.event.Id, this.state.registrations, this.messageSubject(), this.memberMessage(),data=> {\n            // console.log(data)\n        });\n        await this.setState({\n            rsvpModalTitle: '',\n            rsvpMessage: '',\n            modalTextBoxType: \"text\"\n        });\n        this.toggle();\n    }\n    messageSubject() {\n        return \"Event Update: \"+this.state.event.Name+ \"  \"+ new Date(this.state.event.StartDate).toLocaleString();\n    }\n    memberMessage() {\n        return \"<html><body>This is concerning the event you RSVP'd to on: \"+new Date(this.state.event.StartDate).toLocaleString()+\"<h2>\"+this.state.event.Name\n        + \"</h2><p><h3><u>Message from the event organizer</u>:</h3>\"+ this.state.rsvpMessage+\"</body></html>\";\n    }\n\n    async updateRegistrationInState(reg, data) {\n        await this.setState(state => {\n            const registrations = state.registrations.map((item) => {\n                return item.regId === reg.regId ? this.convertRegistrationData(data) : item;\n            });\n\n            return {\n                registrations\n            };\n        });\n    }\n\n    async addMessageModal(regId) {\n        let reg = this.findRegistrationByRegId(regId);\n        await this.setState({registration: reg, rsvpMessage: reg.message, rsvpModalTitle: \"RSVP Message\", modalTextBoxType: \"text\"});\n        this.toggle();\n    }\n\n    onChangeRsvpMessage(x) {\n        this.setState({rsvpMessage: x.target.value});\n    }\n\n    findRegistrationByRegId(regId) {\n        let regArray = this.state.registrations.filter(reg => reg.regId === regId);\n        if (regArray.length === 1) {\n            // console.log(\"find reg returning -> \", regArray[0]);\n            return regArray[0];\n        } else {\n            // console.log(\"find reg by reg id -- returning null\");\n            return null;\n        }\n    }\n    canRegisterForEvent() {\n        let fee = 0.0;\n        let guestFee = 0.0;\n\n        this.state.event.Details.RegistrationTypes.map(reg => {\n            fee += reg.BasePrice;\n            guestFee += reg.GuestPrice;\n            return null;\n        })\n\n        if (this.state.event.Details.TotalDue === 0 && this.state.event.Details.TotalPaid === 0 && this.props.location.state.member.id !== 0\n            && fee === 0.0 && guestFee === 0.0 && !this.state.event.Sessions) {\n            return true;\n        }\n        return false;\n    }\n\n    renderRegistrationData() {\n        return this.state.registrations.map( (reg, index) => {\n            const { regId, name, message, numGuests } = reg;\n            return <tr key={regId}>\n                <td>{name}</td>\n                <td>{numGuests}</td>\n                <td>{message}</td>\n            </tr>\n        })\n    }\n\n    render() {\n        let regData = this.state.registrations ? this.state.registrations.filter(reg => reg.memberId === this.props.location.state.member.id):[];\n\n        if (this.state.fetch) {\n            return (<EventDataLoader name={this.props.location.state.name}/>);\n        } else if (this.state.editEvent) {\n            return buildRedirect('editEvent', this.props.location.state.member, this.props.location.state.eventInfo);\n        } else {\n            return (\n                <div>\n                    <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                    {this.canEdit() && <Button xs btnStyle=\"primary\" onClick={() => this.handleEditClick()}>Edit Event</Button>}\n                    {this.canEdit() && <Button xs btnStyle=\"warning\" onClick={() => this.handleMessagingClick()}>Message RSVPd Members</Button>}\n                    {this.notAlreadyRegistered() && this.canRegisterForEvent() && <Button xs btnStyle=\"success\" onClick={() => this.handleRegisterClick()}>RSVP</Button>}\n                    {regData.length===1 && !this.isUserEventOrganizer() && <Button xs btnStyle=\"danger\" onClick={() => this.handleUnRegisterClick(regData[0].regId) }>Unregister</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.handleAddGuest(regData[0].regId)}>Add Guest</Button> }\n                    {regData.length===1 && <Button xs btnStyle=\"secondary\" onClick={() => this.addMessageModal(regData[0].regId)}>Add/Edit Comment</Button> }\n\n                    <h2>{this.state.event.Name}</h2>\n                    <div className=\"event_id\">\n                        <label>Event Id: </label>&nbsp;&nbsp;\n                        {this.state.event.Id}\n                    </div>\n                    <div className=\"event-title\">\n                        <label>Event Name: </label>&nbsp;&nbsp;\n                        {this.state.event.Name}\n                    </div>\n                    <div className=\"event-start\">\n                        <label>Event Start Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.StartDate).toLocaleString()}\n                    </div>\n                    <div className=\"event-end\">\n                        <label>Event End Date/Time:</label>&nbsp;&nbsp;\n                        {new Date(this.state.event.EndDate).toLocaleString()}\n                    </div>\n                    <div className=\"location\">\n                        <label>Event Location: </label>&nbsp;&nbsp;\n                        {this.state.event.Location}\n                    </div>\n\n                    {this.state.organizer && <div className=\"organizer\">\n                        <label>Organizer: </label>&nbsp;&nbsp;\n                        {this.state.organizer.displayName + '(' + this.state.organizer.email + ')'}\n                    </div>}\n\n                    <div className=\"descriptionHtml\">\n                        <label>Description: </label><br/>&nbsp;&nbsp;\n                        <div>{renderHTML(this.state.event.Details.DescriptionHtml)}</div>\n                    </div>\n\n                    <div className=\"registrations\">\n                        <label>Registrations: </label><br/>\n                        <table id='registrations' className=\"table-striped\">\n                            <tbody>\n                                <tr>\n                                    {/*<th scope=\"col\">Registration Id</th>*/}\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">#Guests</th>\n                                    {/*<th scope=\"col\">Date Registered</th>*/}\n                                    <th scope=\"col\">Comments</th>\n                                </tr>\n                                {this.renderRegistrationData()}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <Modal\n                        show={this.state.modalToggle}\n                        onHide={this.toggle}\n                        size=\"lg\"\n                        backdrop=\"static\"\n                        aria-labelledby=\"contained-modal-title-vcenter\"\n                        centered\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\n                                {this.state.rsvpModalTitle}\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <h4>Please enter your message:</h4>\n                            <p>\n                                {this.state.modalTextBoxType==='textarea' ? <textarea\n                                        value={this.state.rsvpMessage}\n                                        className=\"form-control\"\n                                        onChange={this.onChangeRsvpMessage}\n                                    />\n                                    :\n                                    <input type=\"text\"\n                                       value={this.state.rsvpMessage}\n                                       className=\"form-control\"\n                                       onChange={this.onChangeRsvpMessage}\n                                       />\n                                    }\n                            </p>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button xs btnStyle=\"danger\" onClick={this.toggle}>Cancel</Button>\n                            {this.state.modalTextBoxType === 'textarea' ?\n                                <Button xs onClick={() => this.handleSendMessage()}>Send Message</Button>\n                                :\n                                <Button xs onClick={() => this.handleAddMessage()}>Save</Button>\n                            }\n                        </Modal.Footer>\n                    </Modal>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            );\n        }\n    }\n}","import React, {Component} from 'react';\nimport DatePicker from 'react-datepicker';\nimport {registerLocale, setDefaultLocale} from \"react-datepicker\";\nimport \"./DateTimeRange.css\";\nimport enGB from \"date-fns/locale/en-GB\";\n\nregisterLocale(\"en-GB\", enGB);\n\nsetDefaultLocale(\"en-GB\")\n\nexport default class DateTimeRange extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            startDate: this.props.startDate != null ? new Date(this.props.startDate) : null,\n            endDate: this.props.endDate != null ? new Date(this.props.endDate) : null,\n            maxDate: this.props.endDate ? new Date(new Date(this.props.endDate).setHours(23, 59, 59)) : null,\n            minDate: this.props.startDate ? new Date(new Date(this.props.startDate).setHours(0, 0, 0)) : null,\n        }\n        this.onChangeStartDate = this.onChangeStartDate.bind(this);\n        this.onChangeStartTime = this.onChangeStartTime.bind(this);\n        this.onChangeEndTime = this.onChangeEndTime.bind(this);\n    }\n\n    async onChangeStartDate(date) {\n        let newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes());\n        if (this.props.endDate === null) {\n            let myEndDate = new Date(newDate.getTime());\n            await this.setState({endDate: new Date(myEndDate.setHours(23, 59, 59, 0))});\n        }\n        await this.setState({\n            startDate: newDate,\n            endDate: new Date(this.state.endDate.setFullYear(date.getFullYear(), date.getMonth(), date.getDate())),\n            minDate: new Date(date.setHours(0, 0, 0, 0)),\n            maxDate: new Date(date.setHours(23, 59, 59, 0)),\n        });\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    async onChangeStartTime(date) {\n        if (this.state.endDate < this.state.startDate) {\n            await this.setState({\n                startDate: date,\n                endDate: date\n            })\n        } else {\n            await this.setState({startDate: date});\n        }\n        this.props.onChangeStartDate(this.state.startDate);\n        this.props.onChangeEndDate(this.state.endDate);\n    }\n\n    onChangeEndTime(date) {\n        this.setState({endDate: date})\n        this.props.onChangeEndDate(date);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.startDate !== prevState.startDate || this.state.endDate !== prevState.endDate) {\n            this.render();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"dateTimeRangeSelector\">\n                <div className=\"dateTimeRangeSelector-date\">\n                    <label>{this.props.dateLabel}</label>\n                    <DatePicker\n                        selected={this.props.startDate}\n                        placeholderText=\"Click to select a date\"\n                        onChange={date => this.onChangeStartDate(date)}\n                    />\n                </div>\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-start\">\n                            <label>{this.props.startLabel}</label>\n                            <DatePicker\n                                selected={this.props.startDate}\n                                onChange={date => this.onChangeStartTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.minDate}\n                                maxTime={this.state.endDate}\n                                timeCaption=\"Start Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n                        </div> : <div /> }\n                {this.props.startDate != null ?\n                        <div className=\"dateTimeRangeSelector-end\">\n                            <label>{this.props.endLabel}</label>\n                            <DatePicker\n                                selected={this.props.endDate}\n                                onChange={date => this.onChangeEndTime(date)}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={15}\n                                minTime={this.state.startDate}\n                                maxTime={this.state.maxDate}\n                                timeCaption=\"End Time\"\n                                dateFormat=\"h:mm aa\"\n                            />\n\n                        </div>\n                    : <div/>}\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport {getEventById, updateEvent, deleteEvent} from \"../../utils/WildApricotEvents\";\nimport {getContact} from \"../../utils/WildApricotContacts\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {emptyEvent, searchForSessionAndAdjustFields} from \"../EventCommon\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {Button} from \"react-bootstrap-buttons\";\n\nimport \"./EventEditor.css\";\n\nconst editorConfiguration = {\n    link: {\n        link: {\n            decorators: {\n                addTargetToExternalLinks: {\n                    mode: 'automatic',\n                    callback: url => /^(https?:)?\\/\\//.test( url ),\n                    attributes: {\n                        target: '_blank',\n                        rel: 'noopener noreferrer'\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default class EventEditor extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            member: props.location.state.member,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        // let theEvent = Object.assign({}, this.state.event);\n        updateEvent(this.state.event.Id, this.state.event, data => {\n            // console.log(\"UPDATE RESULT\", data)\n        })\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        // await getAuthTokens((data) => this.setState({waToken: data}));\n        this.setState({\n            member: this.props.location.state.member,\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        // recurring event\n        if (this.props.location.state.eventInfo.event && this.state.fetch) {   // user clicked on an event\n            if (this.state.eventInfo.event.extendedProps.parentId && this.state.fetch) {\n                await getEventById(this.state.eventInfo.event.extendedProps.parentId, (data) => {\n                    this.setState({event: searchForSessionAndAdjustFields(data, this.state.eventInfo.event.id)});\n                });\n            } else {\n                await getEventById(this.state.eventInfo.event.id, (data) => {\n                    this.setState({event: data});\n                });\n            }\n        } else if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            this.setState({event: {...this.state.event, StartDate: new  Date(this.state.eventInfo.date)}})\n        }\n        this.setState({event:{...this.state.event,StartDate: new Date(this.state.event.StartDate)}});\n        this.setState({event:{...this.state.event,EndDate: new Date(this.state.event.EndDate)}});\n        this.setState({fetch:false});\n\n        if (this.props.location.state.eventInfo.date) {\n            let maxTime = new Date(this.props.location.state.eventInfo.date.getTime());\n            this.setState({...this.state.event, startDate: this.props.location.state.eventInfo.date});\n            this.setState({...this.state.event, endDate: new Date(maxTime.setHours(23,59,59))});\n        }\n\n        if (this.state.event && this.state.event.Details && this.state.event.Details.Organizer) {\n            await getContact(this.state.event.Details.Organizer.Id, (data) => {\n                this.setState({organizer: data});\n            });\n            // console.log(\"contact\", this.state.organizer);\n        }\n    }\n\n    startDateHandler(date) {\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    handleDelete() {\n        deleteEvent(this.state.event.Id, data => {\n            // console.log(\"DELETE RESULT\", data)\n        });\n\n        this.props.history.push(`/?mid=${this.state.member.id}`);\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    handleStartChange = async (dt) => {\n        await this.setState({date: {...this.state.date, date: dt}});\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <div className=\"form-group\" style={{'textAlign':'center'}}>\n                             <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             <Button xs btnStyle=\"danger\" onClick={() => this.handleDelete()}>Delete Event</Button>\n                         </div>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Event Id: </label>\n                                {this.state.event.Id}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    config={editorConfiguration}\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                            let details = this.state.event.Details;\n                                            details.DescriptionHtml = editor.getData();\n                                            this.setState({event: {...this.state.event, Details: details}});\n                                        }\n                                    }\n                                />\n                            </div>\n\n                            <div className=\"form-group button\" style={{'textAlign':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Save Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport EventDataLoader from \"../event-data-loader/EventDataLoader\";\nimport {createEvent} from \"../../utils/WildApricotEvents\";\nimport {emptyEvent} from \"../EventCommon\";\nimport \"./EventCreator.css\";\nimport DateTimeRange from \"../date-time-range/DateTimeRange\";\nimport {createInitialRegistrationForEvent} from \"../../utils/WildApricotRegistrations\";\nimport {Button} from \"react-bootstrap-buttons\";\n\nexport default class EventCreator extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(\"INCOMING PROPS\", props);\n\n        this.state = {\n            event: emptyEvent(),\n            isEditing: true,\n            eventInfo: props.location.state.eventInfo,\n            fetch: true\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeEventLocation = this.onChangeEventLocation.bind(this);\n        this.onChangeEventName = this.onChangeEventName.bind(this);\n        this.startDateHandler = this.startDateHandler.bind(this);\n        this.endDateHandler = this.endDateHandler.bind(this);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        let theEvent = Object.assign({}, this.state.event);\n        theEvent.StartDate = theEvent.StartDate.toISOString();\n        theEvent.EndDate = theEvent.EndDate.toISOString();\n        createEvent(theEvent, (data) => {\n            createInitialRegistrationForEvent(data, this.props.location.state.member.id, data=> {\n                // console.log(\"INITIAL REG\", data)\n            });\n        });\n\n        this.setState({event: emptyEvent()});\n\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    onChangeEventName(e) {\n        this.setState({event: {...this.state.event, Name: e.target.value }})\n    }\n\n    onChangeEventLocation(e) {\n        this.setState({event:{...this.state.event, Location: e.target.value}})\n    }\n\n    async componentDidMount() {\n        let startDate = null;\n        let endDate = null;\n\n        await this.setState({\n            eventInfo: this.props.location.state.eventInfo\n        })\n\n        // console.log(\"STATE\",this.state);\n        if (this.state.eventInfo.date) {  // user clicked on a date to create event.\n            startDate = new  Date(new Date(this.state.eventInfo.date).setHours(8,0,0));\n            endDate = new  Date(new Date(this.state.eventInfo.date).setHours(20,0,0));\n        }\n\n        await this.setState({event: {...this.state.event, StartDate: startDate}});\n        await this.setState({event: {...this.state.event, EndDate: endDate}});\n        await this.setState({fetch:false});\n\n        let details = Object.assign({}, this.state.event.Details)\n         details.Organizer = {\n            Id: this.props.location.state.member.id\n        }\n        this.setState({event: {...this.state.event, Details:details}});\n        // console.log(\"STATE\", this.state);\n    }\n\n    startDateHandler(date) {\n        this.setState({event: {...this.state.event, StartDate: date}});\n    }\n\n    endDateHandler(date) {\n        this.setState({event: {...this.state.event, EndDate: date}});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.event.StartDate !== prevState.event.StartDate || this.state.event.EndDate !== prevState.event.EndDate) {\n            this.render()\n        }\n    }\n\n    calendarViewClick() {\n        this.props.history.push(`/?mid=${this.props.location.state.member.id}`);\n    }\n\n    render() {\n        if (this.state.fetch) {\n            return <EventDataLoader name={this.props.location.state.name}/>;\n        } else {\n            return (\n                <div className=\"App\">\n                     <div className=\"editor\">\n                         <form onSubmit={this.onSubmit}>\n                             <div className=\"form-group\" style={{'text-align':'center'}}>\n                                 <Button xs onClick={() => this.calendarViewClick()}>Calendar View</Button>\n                             </div>\n                            <div className=\"form-group\">\n                                <label>Event Name: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Name}\n                                        onChange={this.onChangeEventName}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <DateTimeRange dateLabel=\"Event Date: \"\n                                               startLabel=\"Start Time: \"\n                                               endLabel=\"End Time: \"\n                                               startDate={this.state.event.StartDate}\n                                               endDate={this.state.event.EndDate}\n                                               onChangeStartDate={this.startDateHandler}\n                                               onChangeEndDate={this.endDateHandler}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Event Location: </label>\n                                <input type=\"text\"\n                                        className=\"form-control\"\n                                        value={this.state.event.Location}\n                                        onChange={this.onChangeEventLocation}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Description</label>\n                                <CKEditor\n                                    editor={ ClassicEditor }\n                                    data={this.state.event.Details.DescriptionHtml}\n                                    onChange={ ( event, editor ) => {\n                                        let details = this.state.event.Details;\n                                        details.DescriptionHtml = editor.getData();\n                                        this.setState({event: {...this.state.event, Details: details}});\n                                    } }\n                                />\n                            </div>\n\n                            <div className=\"form-group\" style={{'text-align':'center'}}>\n                                <Button xs btnStyle=\"primary\" type=\"submit\">Create Event</Button>\n                            </div>\n\n                        </form>\n                    </div>\n                    <div className=\"userName\">\n                        {this.props.location.state.member.displayName != null ? this.props.location.state.member.displayName : 'Anonymous'}\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport EventCalendar from \"./components/event-calendar/EventCalendar\";\nimport EventDisplay from \"./components/event-display/EventDisplay\";\nimport EventEditor from \"./components/event-edit/EventEditor\";\nimport EventCreator from \"./components/event-create/EventCreator\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        localStorage.clear();\n        this.state = {\n            member: {id: 0, isAdmin: false},\n            events: []\n        }\n    }\n\n    handleEventsChange = (events) => {\n        this.setState({events: events})\n    }\n\n    updateMember = (member) => {\n        // console.log(\"Setting member data -> \", member)\n        if (member != null) {\n            this.setState({member: member});\n        }\n    }\n\n    updateToken = (token) => {\n        // console.log(\"Updating Token -> \", token)\n        this.setState( {token: {timestamp: Date.now(), waToken: token}})\n    }\n\n    render() {\n        return (\n            <Router basename=\"/\">\n                <div className=\"App container-fluid\">\n                    <Switch>\n                        <Route exact path=\"/\" render={props => <EventCalendar  {...props}\n                                                                               onEventChange={this.handleEventsChange}\n                                                                               events={this.state.events}\n                                                                               onTokenChange={this.updateToken}\n                                                                               token={this.state.token}\n                                                                               onMemberChange={this.updateMember}\n                                                                               member={this.state.member}\n                        />}/>\n                        <Route exact path=\"/showEvent\" component={EventDisplay}/>\n                        <Route exact path=\"/editEvent\" component={EventEditor}/>\n                        <Route exact path=\"/createEvent\" component={EventCreator}/>\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}